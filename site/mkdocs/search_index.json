{
    "docs": [
        {
            "location": "/", 
            "text": "\u306f\u3058\u3081\u306b\n\n\nSpark SQL\n\n\nSpark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\n\n\nMLlib(\u6a5f\u68b0\u5b66\u7fd2)\n\n\nGraphX\n\n\nSparkR\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30a4\u30e1\u30fc\u30b8\u89e3\u6790", 
            "title": "\u76ee\u6b21"
        }, 
        {
            "location": "/introduction/", 
            "text": "1. \u306f\u3058\u3081\u306b\n\n\n\u672c\u6587\u66f8\u306f\u3001\nSpark Summit 2014 Training hands-on exercises\n, \u304a\u3088\u3073\nAMP Camp 5 - big data bootcamp\n\u3092\u5143\u306b\u7c21\u6613\u306b\u624b\u9806\u3092\u8a18\u8ff0\u3057\u3001\u81ea\u7fd2\u8005\u304cApache Spark\u3092\u3088\u308a\u7c21\u4fbf\u306b\u7406\u89e3\u3059\u308b\u624b\u52a9\u3051\u3092\u3059\u308b\u305f\u3081\u306e\u6587\u7ae0\u3067\u3059\u3002\n\u5143\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u73fe\u884c\u30d0\u30fc\u30b8\u30e7\u30f3(1.4.1)\u306b\u5408\u308f\u305b\u3066\u5c11\u3057\u8a18\u8ff0\u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u3002\u672c\u6587\u66f8\u306f\u3001JDK 8 Update 45(Oracle\u516c\u5f0f\u7248)\u3001Spark 1.4.1 (2015/8/24\u6642\u70b9\u306e\u6700\u65b0\u7248)\u3092\u524d\u63d0\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n1-1. \u7528\u610f\u3059\u308b\u3082\u306e\n\n\nLinux\u30de\u30b7\u30f3\uff1a\u4ee5\u4e0b\u306e\u8981\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3053\u3068\n\u7269\u7406\u3067\u3082\u4eee\u60f3\u3067\u3082\u53ef\u80fd\n\n\n\n\nCPU: 2core\u4ee5\u4e0a(4core\u4ee5\u4e0a\u3092\u63a8\u5968)\n\n\nMEM: 4GB\u4ee5\u4e0a(6GB\u4ee5\u4e0a\u3092\u63a8\u5968)\n\n\nCentOS7\u4ee5\u964d(x86_64)\n\n\nJava(JDK) 6\u3082\u3057\u304f\u306f7\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068(JDK 8 Update 60\u4ee5\u964d\u3092\u63a8\u5968)\n\n\n\u3010\u6ce8\u610f\u3011\n\n\nJRE\u306fNG\u3002\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u306a\u3044\n\n\nOpenJDK\u3082NG\u3002\u4e00\u898b\u6b63\u5e38\u306b\u7d42\u4e86\u3059\u308b\u3082\u306e\u306e\u500b\u3005\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u6319\u52d5\u304c\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3002Oracle\u516c\u5f0f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\n\n\n\n\n\n\n\n\n# yum -y update\n# yum -y install wget unzip\n\n\u6700\u65b0\u306eJDK\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n# yum --nogpgcheck localinstall jdk-8u60-linux-x64.rpm\n\nroot\u304b\u3089\u4e00\u822c\u30e6\u30fc\u30b6\u306b\u5909\u66f4\n$ wget http://ftp.riken.jp/net/apache/spark/spark-1.4.1/spark-1.4.1.tgz\n$ tar xzvf spark-1.4.1.tgz\n$ cd spark-1.4.1\n$ build/mvn -Pyarn -Phadoop-2.4 -Dhadoop.version=2.4.0 -DskipTests clean package\n(\u6240\u8981\u6642\u9593: \u7d0430\uff5e50\u5206)\n$ wget https://dl.bintray.com/sbt/native-packages/sbt/0.13.9/sbt-0.13.9.zip\n$ unzip sbt-0.13.9.zip\n$ cd sbt/bin\n$ ln sbt-launch.jar sbt-launch-0.13.9.jar\n$ cd ${HOME}/spark-1.4.1/conf\n$ cp log4j.properties.template log4j.properties\n$ vi log4j.properties\nclog4j.rootCategory=WARN, console\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u307e\u3059\n$ cd ${HOME}\n$ mkdir training\n$ cd training\n$ wget http://d12yw77jruda6f.cloudfront.net/ampcamp5-usb.zip\n$ unzip ampcamp5-usb.zip\n$ wget https://databricks-training.s3.amazonaws.com/training-downloads.zip\n$ unzip training-downloads.zip\n\n*SparkR\u3092\u4f7f\u3046\u5834\u5408\u306f\u3053\u3061\u3089\u306eURL\u304c\u5fc5\u8981\u3067\u3059\n$ wget http://d12yw77jruda6f.cloudfront.net/training-downloads.zip \n$ unzip training-downloads.zip\n\n\n\n\n1-2. \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u6982\u8981\n\n\nSpark\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u8a00\u8a9e\u306e\u77e5\u8b58\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n\n\n\n\n\n\n\n\n\n\nScala\n\n\nJava\n\n\nPython\n\n\n\n\n\n\n\n\n\n\n\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6Spark SQL\n\n\nYES\n\n\nNO\n\n\nYES\n\n\n\n\n\n\nSpark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\n\n\nYES\n\n\nYES\n\n\nNO\n\n\n\n\n\n\n\u6a5f\u68b0\u5b66\u7fd2 - MLlib\n\n\nYES\n\n\nNO\n\n\nYES\n\n\n\n\n\n\n\u30b0\u30e9\u30d5\u5206\u6790 - GraphX\n\n\nYES\n\n\nNO\n\n\nNO\n\n\n\n\n\n\nSparkR\n\n\nR\u306e\u307f\n\n\nR\u306e\u307f\n\n\nR\u306e\u307f\n\n\n\n\n\n\nPipeline\n\n\nYES\n\n\nNO\n\n\nNO\n\n\n\n\n\n\nTachyon\n\n\nNO\n\n\nYES\n\n\nNO\n\n\n\n\n\n\n\n\n\u305d\u308c\u3067\u306f\u5b9f\u969b\u306b\u500b\u3005\u306e\u6a5f\u80fd\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u5404\u9805\u76ee\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u5b9f\u969b\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u5206\u91cf\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n\n\n\n\n\n\n\u5206\u91cf\n\n\n\u53c2\u8003\u8cc7\u6599\n\n\n\n\n\n\n\n\n\n\nSpark SQL\n\n\n\u5c11\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\n\n\n\n\n\n\nSpark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\n\n\n\u4e2d\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\n\n\n\n\n\n\nMLlib(\u6a5f\u68b0\u5b66\u7fd2)\n\n\n\u4e2d\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\n\n\n\n\n\n\nGraphX(\u30b0\u30e9\u30d5\u5206\u6790)\n\n\n\u591a\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\n\n\n\n\n\n\nSparkR\n\n\n\u5c11\n\n\n\n\n\n\n\n\nPipeline\n\n\n\u591a\n\n\n\n\n\n\n\n\nTachyon\n\n\n\u4e2d\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30b5\u30a4\u30c8", 
            "title": "1. \u306f\u3058\u3081\u306b"
        }, 
        {
            "location": "/introduction/#1", 
            "text": "\u672c\u6587\u66f8\u306f\u3001 Spark Summit 2014 Training hands-on exercises , \u304a\u3088\u3073 AMP Camp 5 - big data bootcamp \u3092\u5143\u306b\u7c21\u6613\u306b\u624b\u9806\u3092\u8a18\u8ff0\u3057\u3001\u81ea\u7fd2\u8005\u304cApache Spark\u3092\u3088\u308a\u7c21\u4fbf\u306b\u7406\u89e3\u3059\u308b\u624b\u52a9\u3051\u3092\u3059\u308b\u305f\u3081\u306e\u6587\u7ae0\u3067\u3059\u3002\n\u5143\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u73fe\u884c\u30d0\u30fc\u30b8\u30e7\u30f3(1.4.1)\u306b\u5408\u308f\u305b\u3066\u5c11\u3057\u8a18\u8ff0\u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u3002\u672c\u6587\u66f8\u306f\u3001JDK 8 Update 45(Oracle\u516c\u5f0f\u7248)\u3001Spark 1.4.1 (2015/8/24\u6642\u70b9\u306e\u6700\u65b0\u7248)\u3092\u524d\u63d0\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002", 
            "title": "1. \u306f\u3058\u3081\u306b"
        }, 
        {
            "location": "/introduction/#1-1", 
            "text": "Linux\u30de\u30b7\u30f3\uff1a\u4ee5\u4e0b\u306e\u8981\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3053\u3068\n\u7269\u7406\u3067\u3082\u4eee\u60f3\u3067\u3082\u53ef\u80fd   CPU: 2core\u4ee5\u4e0a(4core\u4ee5\u4e0a\u3092\u63a8\u5968)  MEM: 4GB\u4ee5\u4e0a(6GB\u4ee5\u4e0a\u3092\u63a8\u5968)  CentOS7\u4ee5\u964d(x86_64)  Java(JDK) 6\u3082\u3057\u304f\u306f7\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068(JDK 8 Update 60\u4ee5\u964d\u3092\u63a8\u5968)  \u3010\u6ce8\u610f\u3011  JRE\u306fNG\u3002\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u306a\u3044  OpenJDK\u3082NG\u3002\u4e00\u898b\u6b63\u5e38\u306b\u7d42\u4e86\u3059\u308b\u3082\u306e\u306e\u500b\u3005\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u6319\u52d5\u304c\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3002Oracle\u516c\u5f0f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068     # yum -y update\n# yum -y install wget unzip\n\n\u6700\u65b0\u306eJDK\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n# yum --nogpgcheck localinstall jdk-8u60-linux-x64.rpm\n\nroot\u304b\u3089\u4e00\u822c\u30e6\u30fc\u30b6\u306b\u5909\u66f4\n$ wget http://ftp.riken.jp/net/apache/spark/spark-1.4.1/spark-1.4.1.tgz\n$ tar xzvf spark-1.4.1.tgz\n$ cd spark-1.4.1\n$ build/mvn -Pyarn -Phadoop-2.4 -Dhadoop.version=2.4.0 -DskipTests clean package\n(\u6240\u8981\u6642\u9593: \u7d0430\uff5e50\u5206)\n$ wget https://dl.bintray.com/sbt/native-packages/sbt/0.13.9/sbt-0.13.9.zip\n$ unzip sbt-0.13.9.zip\n$ cd sbt/bin\n$ ln sbt-launch.jar sbt-launch-0.13.9.jar\n$ cd ${HOME}/spark-1.4.1/conf\n$ cp log4j.properties.template log4j.properties\n$ vi log4j.properties\nclog4j.rootCategory=WARN, console\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u307e\u3059\n$ cd ${HOME}\n$ mkdir training\n$ cd training\n$ wget http://d12yw77jruda6f.cloudfront.net/ampcamp5-usb.zip\n$ unzip ampcamp5-usb.zip\n$ wget https://databricks-training.s3.amazonaws.com/training-downloads.zip\n$ unzip training-downloads.zip\n\n*SparkR\u3092\u4f7f\u3046\u5834\u5408\u306f\u3053\u3061\u3089\u306eURL\u304c\u5fc5\u8981\u3067\u3059\n$ wget http://d12yw77jruda6f.cloudfront.net/training-downloads.zip \n$ unzip training-downloads.zip", 
            "title": "1-1. \u7528\u610f\u3059\u308b\u3082\u306e"
        }, 
        {
            "location": "/introduction/#1-2", 
            "text": "Spark\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u8a00\u8a9e\u306e\u77e5\u8b58\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002      Scala  Java  Python      \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6Spark SQL  YES  NO  YES    Spark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0  YES  YES  NO    \u6a5f\u68b0\u5b66\u7fd2 - MLlib  YES  NO  YES    \u30b0\u30e9\u30d5\u5206\u6790 - GraphX  YES  NO  NO    SparkR  R\u306e\u307f  R\u306e\u307f  R\u306e\u307f    Pipeline  YES  NO  NO    Tachyon  NO  YES  NO     \u305d\u308c\u3067\u306f\u5b9f\u969b\u306b\u500b\u3005\u306e\u6a5f\u80fd\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u5404\u9805\u76ee\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u5b9f\u969b\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u5206\u91cf\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002      \u5206\u91cf  \u53c2\u8003\u8cc7\u6599      Spark SQL  \u5c11  \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9    Spark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0  \u4e2d  \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9    MLlib(\u6a5f\u68b0\u5b66\u7fd2)  \u4e2d  \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9    GraphX(\u30b0\u30e9\u30d5\u5206\u6790)  \u591a  \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9    SparkR  \u5c11     Pipeline  \u591a     Tachyon  \u4e2d  \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30b5\u30a4\u30c8", 
            "title": "1-2. \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u6982\u8981"
        }, 
        {
            "location": "/spark-sql/", 
            "text": "2. Spark SQL\n\n\nSpark SQL\u306fSpark\u306e\u4e2d\u3067\u3082\u6700\u3082\u65b0\u3057\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3042\u308a\u3001SQL\u306b\u4f3c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n\n\u307e\u305aSpark Shell\u3092\u8d77\u52d5\u3057\u307e\u3059\n\n\n$ cd ${HOME}\n$ SPARK_MEM=4g spark-1.4.1/bin/spark-shell\n\n\n\n\n\u8d77\u52d5\u3057\u305fSpark Shell\u3067SQLContext\u3092\u5ba3\u8a00\u3057\u307e\u3059\n\n\nscala\n val sqlContext = new org.apache.spark.sql.SQLContext(sc)\nsqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@7074da1d\nscala\n sqlContext.setConf(\nspark.sql.parquet.binaryAsString\n, \ntrue\n)\nscala\n \n\n\n\n\n\u3053\u308c\u3067Parquet\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u51fa\u3059\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nParquet\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u306f\u30ab\u30e9\u30e0\u578b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9Parquet\n[1]\n\u3067\u4f7f\u7528\u3055\u308c\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002\nSpark SQL\u306fParquet\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u81ea\u52d5\u7684\u306b\u89e3\u91c8\u3057\u3001\u30ab\u30e9\u30e0\u306e\u540d\u524d\u3001\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u7406\u89e3\u3057\u307e\u3059\u3002\n\u3053\u306e\u7df4\u7fd2\u3067\u306f\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3057\u305f\u3001Wikipedia\u306e\u201dberkeley\u201d\u3068\u3044\u3046\u6587\u5b57\u304c\u542b\u307e\u308c\u308b\u5168\u3066\u306e\u30da\u30fc\u30b8\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\nscala\n val wikiData = sqlContext.parquetFile(\ntraining/data/wiki_parquet\n)\nwikiData: org.apache.spark.sql.DataFrame = [id: int, title: string, modified: bigint, text: string, username: string]\n\n\n\n\n\u8aad\u307f\u8fbc\u307e\u308c\u305f\u7d50\u679c\u306f\nDataFrame\u30af\u30e9\u30b9\n\u306e\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u304a\u308a\u3001DataFrame\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a66\u3057\u306b\u4f55\u500b\u306e\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nscala\n wikiData.count()\nres0: Long = 39365\n\n\n\n\n\u6a19\u6e96\u7684\u306aDataFrame\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u52a0\u3048\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306e\u30c7\u30fc\u30bf\u306e\u30ab\u30e9\u30e0\u540d\u3084\u3001\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u3082SQL\u30af\u30a8\u30ea\u30fc\u3067\u691c\u7d22\u30fb\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nscala\n wikiData.registerTempTable(\nwikiData\n)\nscala\n val contResult = sqlContext.sql(\nSELECT COUNT(*) FROM wikiData\n).collect()\ncontResult: Array[org.apache.spark.sql.Row] = Array([39365])\nscala\n val sqlCount = contResult.head.getLong(0)\nsqlCount: Long = 39365\n\n\n\n\n\u4e0a\u8a18\u306e\u201dwikiData.count()\u201d\u3067\u53d6\u5f97\u3057\u305f\u201d39365\u201d\u3068\u540c\u3058\u30c7\u30fc\u30bf\u6570\u304cSQL\u3067\u53d6\u5f97\u3067\u304d\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\n\n\n\u3082\u3046\u5c11\u3057\u5b9f\u8df5\u7684\u306aSQL\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002wikiData\u30c6\u30fc\u30d6\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n\n\n\n\u30ab\u30e9\u30e0\u540d\n\n\n\u578b\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\n\n\n\n\ntitle\n\n\nstring\n\n\n\n\n\n\nmodified\n\n\nbigint\n\n\n\n\n\n\ntext\n\n\nstring\n\n\n\n\n\n\nusername\n\n\nstring\n\n\n\n\n\n\n\n\n\u30ab\u30e9\u30e0\u201dusername\u201d\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3001\u4e0a\u4f4d10\u884c\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001wikiData\u306e\u66f4\u65b0\u8005\u306eTop10\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n\n\n\u4ee5\u4e0b\u304c\u5b9f\u969b\u306eSQL\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nscala\n sqlContext.sql(\nSELECT username, COUNT(*) AS cnt FROM wikiData WHERE username \n '' GROUP BY username ORDER BY cnt DESC LIMIT 10\n).collect().foreach(println)\n[Waacstats,2003]\n[Cydebot,949]\n[BattyBot,939]\n[Yobot,890]\n[Addbot,853]\n[Monkbot,668]\n[ChrisGualtieri,438]\n[RjwilmsiBot,387]\n[OccultZone,377]\n[ClueBot NG,353]\n\nscala\n \n\n\n\n\n\n\n\n[1] \nApache Parquet\n: \u30ab\u30e9\u30e0\u578b\u30c7\u30fc\u30bf\u3092Hadoop\u5185\u90e8\u306b\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 (\u53c2\u8003: \nhttp://www.publickey1.jp/blog/13/hadoopparquettwitter.html\n )", 
            "title": "2. Spark SQL"
        }, 
        {
            "location": "/spark-sql/#2-spark-sql", 
            "text": "Spark SQL\u306fSpark\u306e\u4e2d\u3067\u3082\u6700\u3082\u65b0\u3057\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3042\u308a\u3001SQL\u306b\u4f3c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002  \u307e\u305aSpark Shell\u3092\u8d77\u52d5\u3057\u307e\u3059  $ cd ${HOME}\n$ SPARK_MEM=4g spark-1.4.1/bin/spark-shell  \u8d77\u52d5\u3057\u305fSpark Shell\u3067SQLContext\u3092\u5ba3\u8a00\u3057\u307e\u3059  scala  val sqlContext = new org.apache.spark.sql.SQLContext(sc)\nsqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@7074da1d\nscala  sqlContext.setConf( spark.sql.parquet.binaryAsString ,  true )\nscala    \u3053\u308c\u3067Parquet\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u51fa\u3059\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nParquet\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u306f\u30ab\u30e9\u30e0\u578b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9Parquet [1] \u3067\u4f7f\u7528\u3055\u308c\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002\nSpark SQL\u306fParquet\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u81ea\u52d5\u7684\u306b\u89e3\u91c8\u3057\u3001\u30ab\u30e9\u30e0\u306e\u540d\u524d\u3001\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u7406\u89e3\u3057\u307e\u3059\u3002\n\u3053\u306e\u7df4\u7fd2\u3067\u306f\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3057\u305f\u3001Wikipedia\u306e\u201dberkeley\u201d\u3068\u3044\u3046\u6587\u5b57\u304c\u542b\u307e\u308c\u308b\u5168\u3066\u306e\u30da\u30fc\u30b8\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002  scala  val wikiData = sqlContext.parquetFile( training/data/wiki_parquet )\nwikiData: org.apache.spark.sql.DataFrame = [id: int, title: string, modified: bigint, text: string, username: string]  \u8aad\u307f\u8fbc\u307e\u308c\u305f\u7d50\u679c\u306f DataFrame\u30af\u30e9\u30b9 \u306e\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u304a\u308a\u3001DataFrame\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a66\u3057\u306b\u4f55\u500b\u306e\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002  scala  wikiData.count()\nres0: Long = 39365  \u6a19\u6e96\u7684\u306aDataFrame\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u52a0\u3048\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306e\u30c7\u30fc\u30bf\u306e\u30ab\u30e9\u30e0\u540d\u3084\u3001\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u3082SQL\u30af\u30a8\u30ea\u30fc\u3067\u691c\u7d22\u30fb\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002  scala  wikiData.registerTempTable( wikiData )\nscala  val contResult = sqlContext.sql( SELECT COUNT(*) FROM wikiData ).collect()\ncontResult: Array[org.apache.spark.sql.Row] = Array([39365])\nscala  val sqlCount = contResult.head.getLong(0)\nsqlCount: Long = 39365  \u4e0a\u8a18\u306e\u201dwikiData.count()\u201d\u3067\u53d6\u5f97\u3057\u305f\u201d39365\u201d\u3068\u540c\u3058\u30c7\u30fc\u30bf\u6570\u304cSQL\u3067\u53d6\u5f97\u3067\u304d\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059  \u3082\u3046\u5c11\u3057\u5b9f\u8df5\u7684\u306aSQL\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002wikiData\u30c6\u30fc\u30d6\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002     \u30ab\u30e9\u30e0\u540d  \u578b      id  int    title  string    modified  bigint    text  string    username  string     \u30ab\u30e9\u30e0\u201dusername\u201d\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3001\u4e0a\u4f4d10\u884c\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001wikiData\u306e\u66f4\u65b0\u8005\u306eTop10\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002  \u4ee5\u4e0b\u304c\u5b9f\u969b\u306eSQL\u306b\u306a\u308a\u307e\u3059\u3002  scala  sqlContext.sql( SELECT username, COUNT(*) AS cnt FROM wikiData WHERE username   '' GROUP BY username ORDER BY cnt DESC LIMIT 10 ).collect().foreach(println)\n[Waacstats,2003]\n[Cydebot,949]\n[BattyBot,939]\n[Yobot,890]\n[Addbot,853]\n[Monkbot,668]\n[ChrisGualtieri,438]\n[RjwilmsiBot,387]\n[OccultZone,377]\n[ClueBot NG,353]\n\nscala     \n[1]  Apache Parquet : \u30ab\u30e9\u30e0\u578b\u30c7\u30fc\u30bf\u3092Hadoop\u5185\u90e8\u306b\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 (\u53c2\u8003:  http://www.publickey1.jp/blog/13/hadoopparquettwitter.html  )", 
            "title": "2. Spark SQL"
        }, 
        {
            "location": "/spark-streaming/", 
            "text": "3. Spark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\n\n\n\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u51e6\u7406\u3068\u306f\u3001twitter\u3084facebook\u306e\u3088\u3046\u306b\u3001\u7d76\u3048\u9593\u306a\u304f\u6d41\u308c\u3066\u304f\u308b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30fb\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u4ed8\u3051\u3001\u9010\u6b21\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002\nSpark\u304c\u6301\u3064Spark Streaming\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u975e\u5e38\u306b\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u3067\u3042\u308a\u3001\u9ad8\u3044\u53ef\u7528\u6027\u3092\u6301\u3063\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u3001\u5b9f\u969b\u306etwitter\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u4ed8\u3051\u3001\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306fScala, Java\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002(\u6ce8\uff1a\u672c\u66f8\u3067\u306fScala\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u307f\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059)\n\n\n3-1. \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u6210\u3001\u4e8b\u524d\u306b\u7528\u610f\u3059\u308b\u3082\u306e\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\n\n\n\n\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u540d\n\n\n\u5185\u5bb9\n\n\n\n\n\n\n\n\n\n\ntraining/streaming/scala/build.sbt\n\n\nSBT\n[2]\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\n\n\n\n\n\n\ntraining/streaming/scala/Tutorial.scala\n\n\n\u672c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u5b9f\u969b\u306b\u7de8\u96c6\u30fb\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\n\n\n\n\n\ntraining/streaming/scala/TutorialHelper.scala\n\n\nTutorial.scala\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u306e\u30d5\u30a1\u30a4\u30eb\n\n\n\n\n\n\n\n\n\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3082\u306e\u3092\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\ngetCheckpointDirectory(): Spark Streaming\u3067\u4f7f\u7528\u3055\u308c\u308b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\n\n\nconfigureTwitterCredential(): Twitter\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3002\u8a73\u7d30\u306f\u5f8c\u8ff0\u3002\n\n\n\n\n\u307e\u305f\u3001Twitter\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u4e8b\u524d\u306b\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u643a\u5e2f\u96fb\u8a71\u756a\u53f7\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\n\n3-2. Twitter\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u53d6\u5f97\u3059\u308b\n\n\n\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306fTwitter\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001Twitter\u306b\u3088\u308b\u8a8d\u8a3c\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u306b\u306fTwitter\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3067\u4f7f\u7528\u3067\u304d\u308b\u3001\u201dConsumer Key\u201d\u3068\u201dConsumer Secret\u201d\u306e\u30da\u30a2\u3068\u3001\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306fTwitter\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306a\u304f\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u3084\u3001\u5404\u7a2e\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u3053\u308c\u304b\u3089\u4f5c\u6210\u3059\u308b\u201dConsumer Key\u201d\u3068\u201dConsumer Secret\u201d\u306e\u30da\u30a2\u3068\u3001\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u306f\u4e00\u6642\u7684\u306a\u5229\u7528\u306b\u3068\u3069\u3081\u3001\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u7d42\u308f\u3063\u305f\u3089\u7834\u68c4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u30e6\u30fc\u30b6\u304c\u3042\u306a\u305f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u898b\u305f\u308a\u3001\u66f8\u304d\u8fbc\u3093\u3060\u308a\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u305d\u308c\u3067\u306fTwitter\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3057\u3087\u3046\u3002\u30d6\u30e9\u30a6\u30b6\u3067\nTwitter\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406\u30da\u30fc\u30b8\n\u3092\u958b\u304d\u307e\u3059\u3002(\u5fc5\u8981\u306b\u5fdc\u3058\u3066Twitter\u306b\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u306a\u304a\u624b\u9806\u3092\u5b8c\u4e86\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4e8b\u524d\u306bTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u643a\u5e2f\u96fb\u8a71\u756a\u53f7\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002)\n\n\n\n\n\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u3001\u65b0\u3057\u304f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u753b\u9762\u53f3\u4e0a\u306e[Create New App]\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\n\n\n\u753b\u9762\u5185\u306b\u5fc5\u8981\u4e8b\u9805\u3092\u5165\u529b\u3057\u307e\u3059\u3002\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5165\u529b\u3057\u307e\u3059\u3002\n\n\n\n\nName: [twitter\u306e\u30cf\u30f3\u30c9\u30eb\u540d]-test\n\n\nDescription: Apache Spark Streaming test\n\n\nWebsite: http://www.yahoo.co.jp/ (\u306a\u3093\u3067\u3082\u3088\u3044\u304c\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u3051\u308b\u30da\u30fc\u30b8\u304c\u597d\u307e\u3057\u3044)\n\n\nCallback URL: (\u7a7a\u6b04)\n\n\n\n\n\u5168\u3066\u306e\u9805\u76ee\u3092\u57cb\u3081\u305f\u3089\u3001\u201dDeveloper Aggreement\u201d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3001[Create your Twitter application]\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\n\u4f5c\u6210\u304c\u5b8c\u4e86\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30da\u30fc\u30b8\u306b\u9077\u79fb\u3057\u307e\u3059\u3002\n\n\n\n\n\u4e0a\u8a18\u30da\u30fc\u30b8\u4e2d\u306e[Keys and Access Tokens]\u30bf\u30d6\u3092\u958b\u304d\u307e\u3059\u3002\n\u3059\u3067\u306b\u201dConsumer Key(API Key)\u201d\u304a\u3088\u3073\u201dConsumer Secret(API Secret)\u201d\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\n\u6ce8\u610f\uff1a\u7279\u306b\u201dConsumer Key\u201d\u304a\u3088\u3073\u201dConsumer Secret\u201d\u306f\u5b89\u5168\u306b\u7ba1\u7406\u3057\u3001\u4ed6\u306e\u4eba\u3068\u5171\u6709\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u201dConsumer Key(API Key)\u201d\u304a\u3088\u3073\u201dConsumer Secret(API Secret)\u201d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u4ed6\u306e\u4eba\u304c\u3042\u305f\u304b\u3082\u3042\u306a\u305f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067Twitter\u306e\u8a8d\u8a3c\u3092\u901a\u904e\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\n\n\n\n\u30da\u30fc\u30b8\u4e0b\u90e8\u306e[Create my access token]\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002\n\n\n\u3053\u308c\u3067\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n\u6ce8\u610f\uff1a\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u306f\u5b89\u5168\u306b\u7ba1\u7406\u3057\u3001\u4ed6\u306e\u4eba\u3068\u5171\u6709\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u4ed6\u306e\u4eba\u304c\u3042\u305f\u304b\u3082\u3042\u306a\u305f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067Twitter\u306eAPI\u3092\u5229\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\n\n\u3053\u3053\u307e\u3067\u306e\u624b\u9806\u3067\u4ee5\u4e0b\u306e\u60c5\u5831\u304c\u5165\u624b\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\n\nConsumer Key(API Key)\n\n\nConsumer Secret(API Secret)\n\n\nAccess Token\n\n\nAccess Key\n\n\n\n\n\u3053\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u3001Spark Streaming\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n\n\n3-3. Spark Streaming\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aScala\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3072\u306a\u5f62\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u5143\u306b\u3001\u9806\u756a\u306b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3001\u6700\u7d42\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\ntraining/streaming/scala/Tutorial.scala\n\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey = \n(\u8ffd\u52a0)\n\n    val apiSecret = \n(\u8ffd\u52a0)\n\n    val accessToken = \n(\u8ffd\u52a0)\n\n    val accessTokenSecret = \n(\u8ffd\u52a0)\n\n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n\n  }\n}\n\n\n\n\n\u4e0a\u8a18\u306e\u201d(\u8ffd\u52a0)\u201d\u306b\u306f\u3001\n3-2.\n\u3067\u4f5c\u6210\u3057\u305f\u3001\u305d\u308c\u305e\u308c\u306e\u30ad\u30fc\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\n\n\n\u6b21\u306b\u3001\u201dYour code goes here\u201d\u306e\u90e8\u5206\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n\u6700\u521d\u306b\u4ee5\u4e0b\u306e\u547d\u4ee4\u3092\u5165\u308c\u307e\u3059\n\n\nval ssc = new StreamingContext(new SparkConf(), Seconds(1))\n\n\n\u3053\u308c\u306b\u3088\u308aSpark\u306eStreamingContext\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002SparkConf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3001\u30d0\u30c3\u30c1\u5b9f\u884c\u9593\u9694\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u201d1\u79d2\u201d\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a1\u79d2\u9593\u306b\u53d6\u5f97\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u304c\u3001\uff11\u3064\u306e\u30d0\u30c3\u30c1\u30b8\u30e7\u30d6\u3068\u3057\u3066\u5206\u5272\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3046\u6307\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nval tweets = TwitterUtils.createStream(ssc, None)\n\n\n\u5909\u6570tweets\u306fDStream\u30af\u30e9\u30b9\n[3]\n\u3067\u8868\u73fe\u3055\u308c\u305fTwitter\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u4e00\u89a7\u3067\u3059\u3002\n\u3088\u308a\u5177\u4f53\u7684\u306b\u8a00\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u5909\u6570tweets\u306f\ntwitter4j.Status\u30af\u30e9\u30b9\n\u3092\u5185\u90e8\u306b\u6301\u3064RDD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9023\u7d9a(\u914d\u5217)\u3067\u3042\u308b\u3068\u8a00\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \n\n\n\u3053\u3053\u307e\u3067\u3067\u3001\u4e0a\u8a18\u306b\u30bb\u30c3\u30c8\u3057\u305f\u8a8d\u8a3c\u60c5\u5831\u3092\u5143\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306fTwitter\u306b\u63a5\u7d9a\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u6b63\u3057\u304f\u63a5\u7d9a\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30b9\u30c6\u30fc\u30bf\u30b9(=\u5b9f\u969b\u306e\u30c4\u30a4\u30fc\u30c8\u5185\u5bb9)\u3092\u66f8\u304d\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n\nval statuses = tweets.map(status =\n status.getText())\nstatuses.print()\n\n\n\n\n\u3010\u5099\u8003\u3011\n\ntweets.map(status =\n status.getText()) \u306b\u4f7f\u7528\u3055\u308c\u308b\u201d=\n\u201d\u306fScala\u306b\u304a\u3044\u3066\u306f\u300c\u30e9\u30e0\u30c0\u5f0f\u300d\u3068\u89e3\u91c8\u3055\u308c\u3001\u7121\u540d\u95a2\u6570\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3053\u3053\u3067\u306etweets.status\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001getText()\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066String(\u6587\u5b57\u5217)\u306b\u5909\u63db\u3055\u308c\u305f\u4e0a\u3067\u3001DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308bstatuses\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n\ntweets.map\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308a\u3001tweets\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u304a\u3051\u308b\u500b\u3005\u306estatus\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001getText()\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u305f\u306e\u3061\u306b\u3001statuses\u3068\u3044\u3046\u540d\u524d\u306eDStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u305d\u308c\u305e\u308c\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\n\nprint\u30e1\u30bd\u30c3\u30c9\u306f\u3001statuses DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6700\u521d\u306e10\u500b\u3092\u51fa\u529b\u3057\u307e\u3059\n[4]\n\u3002\u3053\u308c\u306f1\u79d2\u3054\u3068\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\n\u307e\u305f\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u306f\u5b9a\u671f\u7684\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u51fa\u3057\u3001\u30c7\u30fc\u30bf\u306e\u640d\u5931\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\n\nssc.checkpoint(checkpointDir)\n\n\n\u6700\u5f8c\u306bStreamingContext\u306e\u5b9f\u884c\u3092\u958b\u59cb\u3059\u308b\u3088\u3046\u6307\u793a\u3057\u307e\u3059\u3002DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u64cd\u4f5c\u306f\u3001\u3053\u306e\u201dssc.start()\u201d\u306e\u524d\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\nssc.start()\nssc.awaitTermination()\n\n\n\n\n\u3053\u308c\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6539\u3081\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u5168\u4f53\u3092\u518d\u63b2\u3057\u307e\u3059\u3002\n\n\ntraining/streaming/scala/Tutorial.scala\n\n\nimport org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.streaming.StreamingContext._\nimport TutorialHelper._\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey = \nbNcABXXXXXXXXXXXXX5dCpHR\n\n    val apiSecret = \ndZ9yDEBpmLJhOXXXXXXXXXXXXXXXXXXXft2xzOlfH\n\n    val accessToken = \nNNNNNNNN-RZH5M1MFxTNXXXXXXXXXXXXXXXXXXl9tl2\n\n    val accessTokenSecret = \nUBRkxVeTXXXXXXXXXXXXXXXXXXXXX0aOn0kuT6FIfUhpxst\n\n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n    val ssc = new StreamingContext(new SparkConf(), Seconds(1))\n    val tweets = TwitterUtils.createStream(ssc, None)\n    val statuses = tweets.map(status =\n status.getText())\n    statuses.print()\n    ssc.checkpoint(checkpointDir)\n    ssc.start()\n    ssc.awaitTermination()\n  }\n}\n\n\n\n\n3-4. \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\n\n\n\u3055\u3066\u3001\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n\u307e\u305a\u3001SBT\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\nScala\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068Spark\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\ntraining/streaming/scala/build.sbt\n\n\nimport AssemblyKeys._ // put this at the top of the file\n\nname := \nTutorial\n\n\nscalaVersion := \n2.10.4\n\n\nlibraryDependencies += \norg.apache.spark\n % \nspark-streaming_2.10\n % \n1.4.1\n\nlibraryDependencies += \norg.apache.spark\n % \nspark-streaming-twitter_2.10\n % \n1.4.1\n\n\nresourceDirectory in Compile := baseDirectory.value / \nresources\n\n\nassemblySettings\n\nmergeStrategy in assembly := {\n  case m if m.toLowerCase.endsWith(\nmanifest.mf\n)          =\n MergeStrategy.discard\n  case m if m.toLowerCase.matches(\nmeta-inf.*\\\\.sf$\n)      =\n MergeStrategy.discard\n  case \nlog4j.properties\n                                  =\n MergeStrategy.discard\n  case m if m.toLowerCase.startsWith(\nmeta-inf/services/\n) =\n MergeStrategy.filterDistinctLines\n  case \nreference.conf\n                                    =\n MergeStrategy.concat\n  case _                                                   =\n MergeStrategy.first\n}\n\n\n\n\nSBT\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n\ntraining/streaming/scala/project/build.properties\n\n\nsbt.version=0.13.8\n\n\n\n\n\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304ctraining/streaming/scala\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u306e\u3061\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\n$ ../../../spark-1.4.1/sbt/sbt assembly\nGetting org.scala-sbt sbt 0.13.8 ...\n:: retrieving :: org.scala-sbt#boot-app\n    confs: [default]\n    44 artifacts copied, 0 already retrieved (13482kB/128ms)\nGetting Scala 2.10.4 (for sbt)...\n:: retrieving :: org.scala-sbt#boot-scala\n    confs: [default]\n    5 artifacts copied, 0 already retrieved (24459kB/66ms)\n(\u4e2d\u7565)\n[info] SHA-1: db07995883e8df5cd625db9723f10cb3667fa4c0\n[info] Packaging /home/kiuchi/training/streaming/scala/target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar ...\n[info] Done packaging.\n[success] Total time: 42 s, completed 2015/06/14 23:48:38\n$\n\n\n\n\n\uff0a\u30a8\u30e9\u30fc\u4e8b\u4f8b\n\n\nattempting to fetch sbt\n/root/spark-1.4.1/build/sbt-launch-lib.bash: line 54: build/sbt-launch-0.13.8.jar.part: No such file or directory\n/root/spark-1.4.1/build/sbt-launch-lib.bash: line 54: build/sbt-launch-0.13.8.jar.part: No such file or directory\nOur attempt to download sbt locally to build/sbt-launch-0.13.8.jar failed. Please install sbt manually from http://www.scala-sbt.org \u306e\u5834\u5408\n\n\n\n\n\uff0a\u30a8\u30e9\u30fc\u4fee\u6b63\n\n\n{$SparkHome\uff5d# wget https://dl.bintray.com/sbt/native-packages/sbt/0.13.8/sbt-0.13.8.zip\n#unzip sbt-0.13.8.zip\n# cd ~/training/streaming/scala/\n# mkdir build\n# cp ~/spark-1.4.1/sbt/bin/sbt-launch.jar build/sbt-launch-0.13.8.jar\n\n\n\n\n\u3053\u308c\u3067SBT\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u304c\u518d\u69cb\u6210\u3055\u308c\u3001Tutorial\u30af\u30e9\u30b9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3057\u305f\u3002\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306f\u3001training/streaming/scala/target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar \u306b\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3053\u306e\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092spark-submit\u30b3\u30de\u30f3\u30c9\u3067Spark\u306b\u6295\u5165\u3057\u307e\u3059\u3002\n\n\n$ ../../../spark-1.4.1/bin/spark-submit --class Tutorial target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar\n\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b1\u79d2\u6bce\u306b\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u5165\u529b\u3068\u3057\u3066\u306eTwitter\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d7\u3051\u53d6\u308a\u3001status\u30d7\u30ed\u30d1\u30c6\u30a3(\u3064\u307e\u308a\u30c4\u30a4\u30fc\u30c8\u5185\u5bb9)\u306e\u5148\u982d10\u500b\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u7d42\u4e86\u3059\u308b\u306b\u306fCtrl+C\u3092\u62bc\u3057\u307e\u3059\u3002\n\n\nOpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=128m; support was removed in 8.0\nConfiguring Twitter OAuth\n    Property twitter4j.oauth.consumerKey set as [bNcABDXXXXXXW5dCpHR]\n    Property twitter4j.oauth.accessToken set as [94807397-RZH5M1MFXXXXXXXXXE8ZfU3XXXXXXXVKl9tl2]\n    Property twitter4j.oauth.consumerSecret set as [dZ9yDEBpmLJhO4SRaXiQXXXXXXXXX2MoiNXXXXXpYft2xzOlfH]\n    Property twitter4j.oauth.accessTokenSecret set as [UBRkxVeTWEwdcfXXXXXXXXXXXXXXXXXXFIfUhpxst]\n\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n15/06/15 00:04:20 INFO Slf4jLogger: Slf4jLogger started\n15/06/15 00:04:21 INFO Remoting: Starting remoting\n15/06/15 00:04:21 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@laptop.mkhome:57181]\n15/06/15 00:04:21 INFO Remoting: Remoting now listens on addresses: [akka.tcp://sparkDriver@laptop.mkhome:57181]\n15/06/15 00:04:22 INFO TwitterStreamImpl: Establishing connection.\n15/06/15 00:04:23 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n15/06/15 00:04:23 INFO TwitterStreamImpl: Connection established.\n15/06/15 00:04:23 INFO TwitterStreamImpl: Receiving status stream.\n-------------------------------------------\nTime: 1434294265000 ms\n-------------------------------------------\n\u6b21\u56de\u306e\u30d1\u30ef\u30d7\u30ed\u3067\u3082\u30b5\u30af\u30bb\u30b9\u4ee5\u5916\u306b\u3082\u91d1\u304b\u304b\u308b\u8981\u7d20\u3064\u304f\u3093\u304b\u306a\uff1fOB\u3084\u7403\u5834\u4e00\u3064\u4f55\u5186\u3068\u304b\u3002\nRT @T4__kr23: \u305f\u304f\u3061\u3083\u3093\u304c\u30e9\u30b9\u30af\u98df\u3063\u3066\u308b\uff01\uff1f\uff01\uff1f http://t.co/0vZqm6KrVn\nRT @EvaDavai: Acabando la fiesta con @RenatoEscobarX 100% recomendable. ;) Te mando besos. http://t.co/OgneoW3RBe\n\u8aa4\u5b57\u3063\u305f\u6b7b\u306b\u305f\u3044\n31/99 \u0627\u0644\u0647\u062f\u0627\u0641 \u0627\u0644\u0643\u0628\u064a\u0631 \u0625\u0644\u0649 \u0623\u0646 \u0645\u0628\u0627\u0631\u064a\u0627\u062a \u0622\u062e\u0631 \u0627\u0644\u0645\u0648\u0633\u0645\u060c \u062a\u0643\u0648\u0646 \u0637\u0627\u0642\u0629 \u0627\u0644\u0644\u0627\u0639\u0628\u064a\u0646 \u0642\u062f \u0628\u0644\u063a\u062a \u0645\u062f\u0627\u0647\u0627\u060c \u0648\u0636\u0639\u0641 \u062a\u0631\u0643\u064a\u0632\u0647\u0645 \u0627\u0644\u0630\u0647\u0646\u064a\u060c \u0648\u0644\u0627 \u064a\u0645\u0643\u0646 \u062a\u0646\u0634\u064a\u0637 \u0647\u0630\u064a\u0646 \u0627\u0644\u0639\u0627\u0645\u0644\u064a\u0646 \u0641\u064a\nRT @TOWER_Anime: 6/15\u304a\u8a95\u751f\u65e5\u306e\u65b9\u3001\u7d9a\u3044\u3066\u306f\u3001\u300e\u3055\u3088\u306a\u3089\u7d76\u671b\u5148\u751f\u300f\u6728\u6d25\u5343\u91cc\u3055\u3093\u3001\u300e\u3089\u304d\u2606\u3059\u305f\u300f\u5bae\u6cb3\u3072\u306a\u305f\u3055\u3093\u3001\u300e\u6697\u6bba\u6559\u5ba4\u300f\u7247\u5ca1\u30e1\u30b0\u3055\u3093\u3001\u300e\u30cb\u30bb\u30b3\u30a4\u300f\u5c0f\u91ce\u5bfa\u5c0f\u54b2\u3055\u3093\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059!\n\u6b21\u306f\u30dd\u30b9\u30bf\u30fc...\u30d5\u30ec\u30fc\u30e0\u306b\u306f\u5165\u308c\u305f...\n@0315Belieber \u78ba\u304b\u306d\u30fc\u305d\u306e\u4eba\u3053\u3070\u3084\u3057\u3048\u3044\u304d\u3063\u3066\u540d\u524d\u3060\u3063\u305f\u306a\u30fc\n@ItzMeyz06 @azilxeiyn_ @keithawdrey @JelynJileng  THANK YOU ATE!! GOODNIGHT! MWAAH \ud83d\ude18\n@8 @S_Mitsutada_not  \u56f0\u308b\u3060\u308d\u3046\u306a\u3063\u3066\uff64\u5206\u304b\u3063\u3066\u305f\u304b\u3089\u8ab0\u306b\u3082\u8a00\u3063\u305f\u4e8b\u306f\u7121\u3044\u3067\u3059\u3088\uff61\u3059\u307f\u307e\u305b\u3093\uff61\u8a00\u3063\u3061\u3083\u3063\u305f\uff61 \u672c\u5fc3\u304b\u3089\u6c17\u306b\u306a\u3089\u306a\u3044\uff64\u304b\uff61\u2026\u3046\u3093\uff61\u308f\u304b\u308a\u307e\u3057\u305f\uff61\u305d\u306e\u672c\u8cea\u3092\u9055\u3048\u306a\u3044\u3088\u3046\u8aa0\u5fc3\u8aa0\u610f\u63a5\u3057\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3059\uff61  \u6e6f\u6d74\u307f\u3082\u672a\u3060\u3060\u3063\u305f\u306e\u306b\uff64\u9577\u3005\u3068\u3054\u3081\u3093\u306d\n\u2026\n(\u4e2d\u7565)\n-------------------------------------------\nTime: 1434294280000 ms\n-------------------------------------------\nGRABEEE ENRIQUEEE CRUSH NA ULIT KITA!!!!!!!! \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\n@matthunter123 any plans?\nRT @BrentRivera: GOOD MORNING \ud83d\ude0a\u2764\ufe0f\n@fuyu_no_usa \u304a\u3084\u3059\u307f\u3001\u4ffa\u306e\u5929\u4f7f\u3002\u306f\u306f\u3001\u304a\u5b22\u3061\u3083\u3093\u306e\u96a3\u3067\u7720\u308c\u308b\u3063\u3066\u306e\u306f\u5e78\u305b\u3060\u306a\u3002\u5929\u4f7f\u304c\u3044\u308b\u5834\u6240\u3063\u3066\u3053\u3068\u3067\u3001\u4ffa\u306f\u5929\u56fd\u3067\u7720\u308c\u308b\u306e\u304b\u3002\u2026\u2026\u4ffa\u306a\u3093\u304b\u304c\u3082\u3063\u305f\u3044\u306a\u3044\u306d\u3047\nRT @DengOww: @CaylaLoraine_ lol bat reserts at robotics lang ata samin huehue\nRT @almiseelanews: \u0627\u0644\u062c\u0646\u0631\u0627\u0644 \u0627\u0644\u0633\u0639\u0648\u062f\u064a \u0627\u0646\u0648\u0631 \u0639\u0634\u0642\u064a : \u0646\u0639\u0645 \u0627\u0644\u062a\u0642\u064a\u062a \u0628\u0645\u062f\u064a\u0631 \u0639\u0627\u0645 \u0648\u0632\u0627\u0631\u0629 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0627\u0644\u0627\u0633\u0631\u0627\u0626\u064a\u0644\u064a \u0648\u0627\u0644\u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0633\u0639\u0648\u062f\u064a \u0627\u0644\u0625\u0633\u0631\u0627\u0626\u064a\u0644\u064a \u0645\u0645\u0643\u0646 \u0627\u0630\u0627 \u062d\u0635\u0644 \n\u0627\u0644\u0641\u2026\nhttp://t.co/IGZkw91Pb8 http://t.co/tZO6SQ4cfI http://t.co/VgdTXoIsyc http://scler...\n\u4ffa\u3060\u3063\u3066\u3042\u3055\u307d\u3093\u3068\u751f\u96fb\u8a71\u3059\u308b\u3068\u304d\u3067\u3082\u3053\u3053\u307e\u3067\u7dca\u5f35\u3057\u3066\u306a\u304b\u3063\u305f\u305e\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57 #\u30e9\u30b8\u30aa\u30cd\u30fc\u30e0\u604b\u3059\u308b\u30a6\u30b5\u30ae\u3061\u3083\u3093\n@syanuko3 \u3042\nRT @collegefession: \nI started pounding a beat on my dorm room wall.. 5 minutes later I eventually got 20 people making music from differen\u2026\n\u2026\n(\u3053\u3053\u3067Ctrl+C\u3092\u62bc\u4e0b)\n$ \n\n\n\n\n3-5. \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6539\u4fee\u3059\u308b\n\n\n\u3088\u308a\u5b9f\u8df5\u7684\u3067\u3001\u9762\u767d\u3044\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u304b\u3089\u884c\u3046\u306e\u306f\u3001\u300c\u904e\u53bb5\u5206\u9593\u3067\u3082\u3063\u3068\u3082\u4f7f\u7528\u3055\u308c\u305f\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\n[5]\n\u300d\u3092\u62bd\u51fa\u3059\u308b\u6a5f\u80fd\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\n\n\u4ee5\u4e0b\u3067DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3069\u306e\u3088\u3046\u306a\u5909\u66f4\u3092\u52a0\u3048\u308b\u304b\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\n3-3.\n\u3067\u8ff0\u3079\u305f\u901a\u308a\u3001\u5168\u3066\u306e\u5909\u66f4\u306f\u201dssc.start()\u201d\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u524d\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\u51e6\u7406\u7528\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6539\u4fee\u3057\u307e\u3059\u3002\n\u6539\u4fee\u6e08\u307f\u306e\u30b3\u30fc\u30c9\u5168\u6587\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002\n\n\ntraining/streaming/scala/Tutorial.scala\n\n\nimport org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.streaming.StreamingContext._\nimport TutorialHelper._\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey = \nbNcABXXXXXXXXXXXXX5dCpHR\n\n    val apiSecret = \ndZ9yDEBpmLJhOXXXXXXXXXXXXXXXXXXXft2xzOlfH\n\n    val accessToken = \nNNNNNNNN-RZH5M1MFxTNXXXXXXXXXXXXXXXXXXl9tl2\n\n    val accessTokenSecret = \nUBRkxVeTXXXXXXXXXXXXXXXXXXXXX0aOn0kuT6FIfUhpxst\n\n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n    val ssc = new StreamingContext(new SparkConf(), Seconds(1))\n    val tweets = TwitterUtils.createStream(ssc, None)\n    val statuses = tweets.map(status =\n status.getText())\n    val words = statuses.flatMap(status =\n status.split(\n \n))\n    val hashtags = words.filter(word =\n word.startsWith(\n#\n))\n    val counts = hashtags.map(tag =\n (tag, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(60*5), Seconds(1))\n    val sortedCounts = counts.map{case(tag, count) =\n (count, tag) }.transform(rdd =\n rdd.sortByKey(false))\n    sortedCounts.foreach(rdd =\n println(\n\\nTop 10 hashtags:\\n\n + rdd.take(9).mkString(\n\\n\n)))\n    //statuses.print()\n    ssc.checkpoint(checkpointDir)\n    ssc.start()\n    ssc.awaitTermination()\n  }\n}\n\n\n\n\n\u305d\u308c\u3067\u306f\u6539\u4fee\u90e8\u5206\u306b\u3064\u3044\u3066\u9806\u756a\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n\nval tweets = TwitterUtils.createStream(ssc, None)\n\n\ntweets DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306fTwitterUtils.createStream\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3067\u3001\u5185\u90e8\u306bRRD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8907\u6570\u542b\u3093\u3067\u304a\u308a\u3001\uff11\u3064\u306eRRD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u306f1\u79d2\u9593\u306b\u53d6\u5f97\u3055\u308c\u305f\u30c4\u30a4\u30fc\u30c8\u30c7\u30fc\u30bf\u304cTwitter4J.Status\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u306b\u306a\u3063\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\u4ee5\u4e0b\u306f\u201dtweets.print()\u201d\u3067\u5f97\u3089\u308c\u308btweets DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u629c\u7c8b\u3067\u3001\uff11\u3064\u306eTwitter4J.Status\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff1d\uff11\u3064\u306e\u30c4\u30a4\u30fc\u30c8\u306e\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\ntext=''\u5185\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u304c\u5b9f\u969b\u306e\u30e6\u30fc\u30b6\u306e\u30c4\u30a4\u30fc\u30c8\u3067\u3059\u3002\n\u4e0b\u8a18\u4f8b\u3067\u306f\u300cBBC News - Hong Kong lawmakers reject Beijing poll plan http://t.co/JLKtx3jltA\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\n\nStatusJSONImpl{createdAt=Fri Jun 19 18:01:48 JST 2015, id=611821169948266496, text='BBC News - Hong Kong lawmakers reject Beijing poll plan http://t.co/JLKtx3jltA', source='\na href=\nhttp://twitter.com/download/iphone\n rel=\nnofollow\nTwitter for iPhone\n/a\n', isTruncated=false, inReplyToStatusId=-1, inReplyToUserId=-1, isFavorited=false, inReplyToScreenName='null', geoLocation=null, place=null, retweetCount=0, isPossiblySensitive=false, contributorsIDs=[J@72342301, retweetedStatus=null, userMentionEntities=[], urlEntities=[URLEntityJSONImpl{url='http://t.co/JLKtx3jltA', expandedURL='http://www.bbc.com/news/world-asia-33179247', displayURL='bbc.com/news/world-asi\u2026'}], hashtagEntities=[], mediaEntities=[], currentUserRetweetId=-1, user=UserJSONImpl{id=2982028466, name='sunny', screenName='Iampju93Sunny', location='', description='null', isContributorsEnabled=false, profileImageUrl='http://pbs.twimg.com/profile_images/555345662884061184/PImnxNip_normal.jpeg', profileImageUrlHttps='https://pbs.twimg.com/profile_images/555345662884061184/PImnxNip_normal.jpeg', url='null', isProtected=false, followersCount=210, status=null, profileBackgroundColor='C0DEED', profileTextColor='333333', profileLinkColor='0084B4', profileSidebarFillColor='DDEEF6', profileSidebarBorderColor='C0DEED', profileUseBackgroundImage=true, showAllInlineMedia=false, friendsCount=617, createdAt=Wed Jan 14 16:53:38 JST 2015, favouritesCount=0, utcOffset=-1, timeZone='null', profileBackgroundImageUrl='http://abs.twimg.com/images/themes/theme1/bg.png', profileBackgroundImageUrlHttps='https://abs.twimg.com/images/themes/theme1/bg.png', profileBackgroundTiled=false, lang='ko', statusesCount=400, isGeoEnabled=false, isVerified=false, translator=false, listedCount=1, isFollowRequestSent=false}}\n\n\n\n\nval statuses = tweets.map(status =\n status.getText())\n\n\n\u3053\u306e\u547d\u4ee4(map(getText()))\u3067\u3001tweets DStream\u5185\u306e\u500b\u3005\u306eRDD\u306b\u542b\u307e\u308c\u308b\u30c7\u30fc\u30bf(Twitter4J.Status\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u306e\u500b\u3005\u306e\u8981\u7d20)\u304c\u5909\u6570status\u306b\u30de\u30c3\u30d7\u3055\u308c\u3001getText()\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u7d50\u679c\u306e\u30c4\u30a4\u30fc\u30c8\u672c\u6587(String\u578b)\u306f\u914d\u5217\u3068\u306a\u308a\u3001\u5143\u306eRRD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n\n\n\n\u4e0a\u8a18\u306e\u4f8b\u306e\u5834\u5408\u3001statuses DStream-RRD-Array\u5185\u8981\u7d20\u306e\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nBBC News - Hong Kong lawmakers reject Beijing poll plan http://t.co/JLKtx3jltA\n\n\nval words = statuses.flatMap(status =\n status.split(\" \"))\n\n\n\u3053\u306e\u547d\u4ee4(flatMap{})\u3067\u3001\u30c4\u30a4\u30fc\u30c8\u672c\u6587\u3092\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3067\u5225\u3005\u306b\u5206\u3051\u3066\u3001\u500b\u3005\u3092\u914d\u5217\u3068\u3057\u3066\u3001\u518d\u5ea6RDD\u3068\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n\n\n\nval hashtags = words.filter(word =\n word.startsWith(\"#\"))\n\n\n\u6700\u5f8c\u306b\u3001\u914d\u5217\u306e\u500b\u3005\u306e\u8981\u7d20(\u6587\u5b57\u5217)\u306e\u5148\u982d\u304c\u201d#\u201d\u3067\u3042\u308b\u3082\u306e\u3060\u3051\u3092\u62bd\u51fa\u3057\u3001\u540c\u69d8\u306bRDD\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n\n\n\nval counts = hashtags.map(tag =\n (tag, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(60*5), Seconds(1))\n\n\n\u3053\u3053\u3067\u306f\u6700\u65b05\u5206\u9593\u306e\u305d\u308c\u305e\u308c\u306e\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306e\u6570\u3092\u5408\u8a08\u3057\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u3001\u904e\u53bb5\u5206\u9593\u306e\u305d\u308c\u305e\u308c\u306e\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306e\u500b\u6570\u3092\u5408\u8a08\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u306f\u3001\u3053\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3067\u6700\u65b05\u5206\u9593\u306e\u3082\u306e\u3068\u3057\u3066\u53d6\u308a\u6271\u3046RDD\u304c\u5e38\u306b\u5909\u52d5\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\nSpark\u306b\u304a\u3044\u3066\u3053\u308c\u3092\u4e0a\u624b\u304f\u53d6\u308a\u6271\u3046\u95a2\u6570\u304c\u201dreduceByKeyAndWindow\u201d\u306b\u306a\u308a\u307e\u3059\u3002reduceByKeyAndWindow\u95a2\u6570\u306f4\u3064\u306e\u5f15\u6570\u3092\u3068\u308a\u307e\u3059\u3002\n\n\na. \u65b0\u3057\u304f\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u5165\u3063\u305f\u8981\u7d20\u306b\u5bfe\u3057\u3066\u884c\u3046\u51e6\u7406\n\nb. \u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u5916\u308c\u305f\u8981\u7d20\u306b\u5bfe\u3057\u3066\u884c\u3046\u51e6\u7406\n\nc. \u95a2\u6570\u304c\u6271\u3046\u6700\u5927\u6642\u9593\n\nd. \u66f4\u65b0\u5358\u4f4d\n\n\n\u307e\u305a\u30a6\u30a3\u30f3\u30c9\u30a6(=\u4e0a\u8a18c\u3002\u5408\u8a08\u7b97\u51fa\u671f\u9593\u306e\u3053\u3068)\u306f0\u304b\u3089\u59cb\u307e\u308a\u3001\u6642\u9593\u306e\u65b0\u3057\u3044\u65b9\u5411\u306b\u4e0a\u8a18d\u5206\u4f38\u3073\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u306b\u5165\u3063\u305f\u500b\u3005\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u4e0a\u8a18a\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u6642\u9593\u306e\u53e4\u3044\u65b9\u304b\u3089\u4e0a\u8a18d\u5206\u7e2e\u307f\u3001\u305d\u306e\u7d50\u679c\u5916\u308c\u305f\u8981\u7d20\u306b\u5bfe\u3057\u3066\u4e0a\u8a18b\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\n\u307e\u305ahashtags DStream-RDD-Array\u5185\u306e\u500b\u3005\u306e\u8981\u7d20(\u6587\u5b57\u5217)\u306f\u3001\u201d(\u6587\u5b57\u5217, 1(\n-\u6574\u6570))\u201d\u3068\u3044\u3046\u30bf\u30d7\u30eb\u578b\u306b\u5909\u63db\u3055\u308c\u307e\u3059\n\n\n\u7d50\u679c\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\u3001\u65b0\u305f\u306b\u4f5c\u6210\u3055\u308c\u308bcounts DStream\u306b\u306freduceByKey AndWindow\u95a2\u6570\u306b\u3088\u3063\u3066\u5408\u8a08\u3055\u308c\u305f\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u306e\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u3068\u305d\u306e\u500b\u6570\u306e\u5408\u8a08\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u307e\u3060\u500b\u6570\u9806\u306b\u4e26\u3073\u66ff\u3048\u3089\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001Top10\u3092\u51fa\u3059\u305f\u3081\u306b\u306f\u3082\u3046\u5c11\u3057\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\n\nval sortedCounts = counts.map{case(tag, count) =\n (count, tag) }.transform(rdd =\n rdd.sortByKey(false))\n\n\ncounts DStream\u306e\u914d\u5217\u3092\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306e\u500b\u6570\u9806\u306b\u4e26\u3079\u76f4\u3059\u305f\u3081\u3001\u307e\u305amap\u3067(\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0(\u6587\u5b57\u5217), \u500b\u6570)\u306e\u30bf\u30d7\u30eb\u3092(\u500b\u6570, \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0(\u6587\u5b57\u5217))\u306b\u5165\u308c\u66ff\u3048\u307e\u3059\u3002\u305d\u306e\u306e\u3061\u306btransform\u3067count\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\n\n\nsortedCounts.foreach(rdd =\n println(\"\\nTop 10 hashtags:\\n\" + rdd.take(10).mkString(\"\\n\")))\n\n\n\u6700\u5f8c\u306bRDD\u5185\u306e\u914d\u5217\u304b\u3089take(10)\n[6]\n\u3067\u5148\u982d10\u500b\u3092\u53d6\u308a\u51fa\u3057\u3001mkString(\u201c\\n\u201d)\n[7]\n\u3067\u3001\u533a\u5207\u308a\u6587\u5b57\u3092\u6539\u884c(LF)\u306b\u3057\u3066\u3001\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\n\n\n\u4fee\u6b63\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\n\n\n$ ../../../spark-1.4.1/sbt/sbt assembly\nGetting org.scala-sbt sbt 0.13.8 ...\n:: retrieving :: org.scala-sbt#boot-app\n    confs: [default]\n    44 artifacts copied, 0 already retrieved (13482kB/128ms)\nGetting Scala 2.10.4 (for sbt)...\n:: retrieving :: org.scala-sbt#boot-scala\n    confs: [default]\n    5 artifacts copied, 0 already retrieved (24459kB/66ms)\n(\u4e2d\u7565)\n[info] SHA-1: db07995883e8df5cd625db9723f10cb3667fa4c0\n[info] Packaging /home/kiuchi/training/streaming/scala/target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar ...\n[info] Done packaging.\n[success] Total time: 42 s, completed 2015/06/14 23:48:38\n$\n\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092spark-submit\u30b3\u30de\u30f3\u30c9\u3067Spark\u306b\u6295\u5165\u3057\u307e\u3059\n\n\n$ ../../../spark-1.4.1/bin/spark-submit --class Tutorial target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306eTop10\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u7d42\u4e86\u3059\u308b\u306b\u306fCtrl+C\u3092\u62bc\u3057\u307e\u3059\u3002\n\n\nConfiguring Twitter OAuth\n    Property twitter4j.oauth.consumerKey set as [bNcABDgULQldZ8z4gRW5dCpHR]\n    Property twitter4j.oauth.accessToken set as [94807397-RZH5M1MFxTNPC6Y7zXE8ZfU3dX1ipZoULBVKl9tl2]\n    Property twitter4j.oauth.consumerSecret set as [dZ9yDEBpmLJhO4SRaXiQX6VpSGtZm4Z2MoiNpWYpYft2xzOlfH]\n    Property twitter4j.oauth.accessTokenSecret set as [UBRkxVeTWEwdcfXUIfLmInvpeB20aOn0kuT6FIfUhpxst]\n\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n15/06/28 21:12:34 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n15/06/28 21:12:35 INFO Slf4jLogger: Slf4jLogger started\n15/06/28 21:12:35 INFO Remoting: Starting remoting\n15/06/28 21:12:35 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@192.168.20.97:39939]\n\u2026.\nTop 10 hashtags in last 5 minutes:\n(1,#F\u00e9ile2015)\n(1,#\u063a\u0631\u062f\u0644\u064a)\n15/06/28 21:12:41 INFO WriteAheadLogManager : Attempting to clear 0 old log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493241000: \n15/06/28 21:12:41 INFO WriteAheadLogManager : Cleared log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493241000\n\nTop 10 hashtags in last 5 minutes:\n(38,#Dol\u2026)\n(2,#KCAM\u00c9X\u0130CO)\n(2,#HollywoodChoice)\n(2,#JorgeBlanco)\n(1,#Oman)\n(1,#\u0628\u064a\u0642\u0648\u0644\u0643)\n(1,#Iraq)\n(1,#MSGKickToDrugs)\n(1,#Matildas)\n15/06/28 21:12:42 INFO WriteAheadLogManager : Attempting to clear 0 old log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493242000: \n15/06/28 21:12:42 INFO WriteAheadLogManager : Cleared log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493242000\n\u2026\n(\u3053\u3053\u3067Ctrl+C\u3092\u62bc\u4e0b)\n15/06/28 21:12:47 INFO TwitterStreamImpl: Inflater has been closed\n15/06/28 21:12:47 ERROR ReceiverTracker: Deregistered receiver for stream 0: Stopped by driver\n15/06/28 21:12:47 WARN ReceiverSupervisorImpl: Stopped executor without error\n15/06/28 21:12:47 INFO WriteAheadLogManager : Stopped write ahead log manager\n$ \n\n\n\n\n3-6. \u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u5206\u6563\n\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306b\u304a\u3051\u308b\u51e6\u7406\u306e\u5358\u4f4d\u306fRDD\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308aRDD\uff11\u3064\u306b\u3064\u3044\u3066\uff11\u3064\u306e\u30b8\u30e7\u30d6\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n\u307e\u305f\u3001Spark\u306e\nTransform\u547d\u4ee4\n\u306f\u9045\u5ef6\u8a55\u4fa1(Lazy Evaluation)\u306b\u3088\u3063\u3066\u5373\u6642\u306b\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\nAction\u547d\u4ee4\n\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u306b\u5b9f\u969b\u306b\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\n\n\n\u4e0a\u8a18\u30b5\u30f3\u30d7\u30eb\u3067Transform\u547d\u4ee4\u306f\n.map(...)\n \n.flatMap(...)\n \n.filter(...)\n \n.reduceByKeyAndWindow(...)\n \n.sortByKey(...)\n\u3001Action\u547d\u4ee4\u306f\n.transform(...)\n \n.foreach(...)\n \n.take(...)\n\u306e\u90e8\u5206\u3067\u3059\u3002\n\u3064\u307e\u308a\u5b9f\u969b\u306b\u306f\u305d\u308c\u305e\u308c\u306e\u5165\u529bRDD\u306b\u5927\u3057\u3066\u300128\u884c\u76ee\u306e\n.transform(...)\n\u300129\u884c\u76ee\u306e\n.foreach(..)\n\u3067\u305d\u308c\u305e\u308c\u30b8\u30e7\u30d6\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\ntraining/streaming/scala/Tutorial.scala\n\n\nimport org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.streaming.StreamingContext._\nimport TutorialHelper._\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey = \nbNcABXXXXXXXXXXXXX5dCpHR\n\n    val apiSecret = \ndZ9yDEBpmLJhOXXXXXXXXXXXXXXXXXXXft2xzOlfH\n\n    val accessToken = \nNNNNNNNN-RZH5M1MFxTNXXXXXXXXXXXXXXXXXXl9tl2\n\n    val accessTokenSecret = \nUBRkxVeTXXXXXXXXXXXXXXXXXXXXX0aOn0kuT6FIfUhpxst\n\n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n    val ssc = new StreamingContext(new SparkConf(), Seconds(1))\n    val tweets = TwitterUtils.createStream(ssc, None)\n    val statuses = tweets.map(status =\n status.getText())\n    val words = statuses.flatMap(status =\n status.split(\n \n))\n    val hashtags = words.filter(word =\n word.startsWith(\n#\n))\n    val counts = hashtags.map(tag =\n (tag, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(60*5), Seconds(1))\n    val sortedCounts = counts.map{case(tag, count) =\n (count, tag) }.transform(rdd =\n rdd.sortByKey(false))\n    sortedCounts.foreach(rdd =\n println(\n\\nTop 10 hashtags:\\n\n + rdd.take(9).mkString(\n\\n\n)))\n    //statuses.print()\n    ssc.checkpoint(checkpointDir)\n    ssc.start()\n    ssc.awaitTermination()\n  }\n}\n\n\n\n\n\u540c\u69d8\u306e\u72b6\u6cc1\u3092\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8996\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttp://\n<spark\n\u30db\u30b9\u30c8>:4040\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bstart, transform, foreach\u3067\u305d\u308c\u305e\u308c\u30d0\u30c3\u30c1\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\n3-7. \u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u72b6\u6cc1\u78ba\u8a8d\n\n\nSpark 1.4.0\u4ee5\u964d\u3067\u306f\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u72b6\u6cc1\u306e\u53ef\u8996\u5316\u306b\u3088\u3063\u3066\u3001\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002http://\\\nspark\u30db\u30b9\u30c8>:4040/streaming \u3067\u3001\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u3084\u3001\u51e6\u7406\u6642\u9593\u3001\u51e6\u7406\u306e\u9045\u5ef6\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\n\u3010\u5099\u8003\u3011 \u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u91cf\u306b\u3064\u3044\u3066\n\n\n\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0(Twitter\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b9\u30c8\u30ea\u30fc\u30e0)\u304c\u60f3\u5b9a\u3088\u308a\u3082\u5c11\u306a\u3044\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001Twitter\u5074\u304c\u7279\u5b9a\u306e\u696d\u8005\u306b\u3057\u304b\u516c\u958b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u5168\u30c7\u30fc\u30bf(firehose)\u3092\u63d0\u4f9b\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u8d77\u56e0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u53c2\u8003:\n\n\n\n\nTwitter\u304cfirehose\u5951\u7d04\u3092\u89e3\u6d88\u3057\u305fNTT\u30c7\u30fc\u30bf\u3092\u6226\u7565\u7684\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30d1\u30fc\u30c8\u30ca\u30fc\u306b \nhttp://jp.techcrunch.com/2015/04/15/20150415twitter-set-to-strike-ibm-style-analytics-deal-with-ntt-data/\n \n\n\n\u65e5\u672c\u3067\u306e\u30c7\u30fc\u30bf\u518d\u8ca9\u306b\u3064\u3044\u3066 \nhttps://blog.twitter.com/ja/2015/0415gnip\n \n\n\nNew Tweets per second record, and how!(2013)2013\u5e74\u306e\u6642\u70b9\u3067\u306f\u3001firehose\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u5e73\u5747\u7d046,000tweets per second(TPS)\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nhttps://blog.twitter.com/2013/new-tweets-per-second-record-and-how\n \n\n\n\n\n\n\n\n[2] SBT: \u201cSimple Build Tool\u201d\u306e\u7565\u3002Scala \u304a\u3088\u3073 Java\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308b\u7c21\u4fbf\u306a\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3002(\u53c2\u7167: \nhttps://github.com/harrah/xsbt/wiki\n , \nhttp://www.scala-sbt.org/\n )\n\n\n\n[3] \nDStream\u30af\u30e9\u30b9\n: Spark Streaming Discretized Stream(Spark\u306b\u304a\u3051\u308b\u96e2\u6563\u30b9\u30c8\u30ea\u30fc\u30e0)\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u89aa\u3068\u3057\u3066\u3001\u500b\u3005\u306e\u30c7\u30fc\u30bf\u304b\u3089RDD\u304c\u751f\u6210\u3055\u308c\u308b\u3002 \n\n\n\n[4] \nDStream.print\u30e1\u30bd\u30c3\u30c9\n: print(Int(20))\u3068\u3059\u308b\u306820\u500b\u306b\u306a\u308b\u3002\n\n\n\n[5] \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0: Twitter\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u306b\u7528\u3044\u3089\u308c\u308b\u201d#\u201d\u306b\u7d9a\u304f\u6587\u5b57\u5217\u306e\u3053\u3068\u3092\u6307\u3057\u3001\u3053\u308c\u306b\u3088\u308aTwitter\u5185\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6a5f\u80fd\u3002 (\u53c2\u8003: \nhttps://support.twitter.com/articles/20170159-\n )\n\n\n\n[6] \ntake(n)\n: scala\u547d\u4ee4\u3002\u914d\u5217(\u30b3\u30ec\u30af\u30b7\u30e7\u30f3)\u306e\u5148\u982d\u304b\u3089\u4efb\u610f\u306e\u500b\u6570\u3092\u53d6\u308a\u51fa\u3059\u3002\n\n\n\n[7] \nmkString(n)\n: scala\u547d\u4ee4\u3002\u914d\u5217\u3092n\u3067\u6307\u5b9a\u3057\u305f\u533a\u5207\u308a\u6587\u5b57\u3067\u533a\u5207\u3063\u3066\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u3002", 
            "title": "3. Spark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0"
        }, 
        {
            "location": "/spark-streaming/#3-spark", 
            "text": "\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u51e6\u7406\u3068\u306f\u3001twitter\u3084facebook\u306e\u3088\u3046\u306b\u3001\u7d76\u3048\u9593\u306a\u304f\u6d41\u308c\u3066\u304f\u308b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30fb\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u4ed8\u3051\u3001\u9010\u6b21\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002\nSpark\u304c\u6301\u3064Spark Streaming\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u975e\u5e38\u306b\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u3067\u3042\u308a\u3001\u9ad8\u3044\u53ef\u7528\u6027\u3092\u6301\u3063\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u3001\u5b9f\u969b\u306etwitter\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u4ed8\u3051\u3001\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306fScala, Java\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002(\u6ce8\uff1a\u672c\u66f8\u3067\u306fScala\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u307f\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059)", 
            "title": "3. Spark\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0"
        }, 
        {
            "location": "/spark-streaming/#3-1", 
            "text": "\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059     \u30d5\u30a1\u30a4\u30eb\u540d  \u5185\u5bb9      training/streaming/scala/build.sbt  SBT [2] \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb    training/streaming/scala/Tutorial.scala  \u672c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u5b9f\u969b\u306b\u7de8\u96c6\u30fb\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb    training/streaming/scala/TutorialHelper.scala  Tutorial.scala\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u306e\u30d5\u30a1\u30a4\u30eb     \u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3082\u306e\u3092\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002   getCheckpointDirectory(): Spark Streaming\u3067\u4f7f\u7528\u3055\u308c\u308b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570  configureTwitterCredential(): Twitter\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3002\u8a73\u7d30\u306f\u5f8c\u8ff0\u3002   \u307e\u305f\u3001Twitter\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u4e8b\u524d\u306b\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u643a\u5e2f\u96fb\u8a71\u756a\u53f7\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002", 
            "title": "3-1. \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u6210\u3001\u4e8b\u524d\u306b\u7528\u610f\u3059\u308b\u3082\u306e"
        }, 
        {
            "location": "/spark-streaming/#3-2-twitter", 
            "text": "\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306fTwitter\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001Twitter\u306b\u3088\u308b\u8a8d\u8a3c\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u306b\u306fTwitter\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3067\u4f7f\u7528\u3067\u304d\u308b\u3001\u201dConsumer Key\u201d\u3068\u201dConsumer Secret\u201d\u306e\u30da\u30a2\u3068\u3001\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306fTwitter\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306a\u304f\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u3084\u3001\u5404\u7a2e\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002  \u3053\u308c\u304b\u3089\u4f5c\u6210\u3059\u308b\u201dConsumer Key\u201d\u3068\u201dConsumer Secret\u201d\u306e\u30da\u30a2\u3068\u3001\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u306f\u4e00\u6642\u7684\u306a\u5229\u7528\u306b\u3068\u3069\u3081\u3001\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u7d42\u308f\u3063\u305f\u3089\u7834\u68c4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u30e6\u30fc\u30b6\u304c\u3042\u306a\u305f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u898b\u305f\u308a\u3001\u66f8\u304d\u8fbc\u3093\u3060\u308a\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \u305d\u308c\u3067\u306fTwitter\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3057\u3087\u3046\u3002\u30d6\u30e9\u30a6\u30b6\u3067 Twitter\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406\u30da\u30fc\u30b8 \u3092\u958b\u304d\u307e\u3059\u3002(\u5fc5\u8981\u306b\u5fdc\u3058\u3066Twitter\u306b\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u306a\u304a\u624b\u9806\u3092\u5b8c\u4e86\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4e8b\u524d\u306bTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u643a\u5e2f\u96fb\u8a71\u756a\u53f7\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002)   \u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u3001\u65b0\u3057\u304f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u753b\u9762\u53f3\u4e0a\u306e[Create New App]\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002   \u753b\u9762\u5185\u306b\u5fc5\u8981\u4e8b\u9805\u3092\u5165\u529b\u3057\u307e\u3059\u3002\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5165\u529b\u3057\u307e\u3059\u3002   Name: [twitter\u306e\u30cf\u30f3\u30c9\u30eb\u540d]-test  Description: Apache Spark Streaming test  Website: http://www.yahoo.co.jp/ (\u306a\u3093\u3067\u3082\u3088\u3044\u304c\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u3051\u308b\u30da\u30fc\u30b8\u304c\u597d\u307e\u3057\u3044)  Callback URL: (\u7a7a\u6b04)   \u5168\u3066\u306e\u9805\u76ee\u3092\u57cb\u3081\u305f\u3089\u3001\u201dDeveloper Aggreement\u201d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3001[Create your Twitter application]\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002  \u4f5c\u6210\u304c\u5b8c\u4e86\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30da\u30fc\u30b8\u306b\u9077\u79fb\u3057\u307e\u3059\u3002   \u4e0a\u8a18\u30da\u30fc\u30b8\u4e2d\u306e[Keys and Access Tokens]\u30bf\u30d6\u3092\u958b\u304d\u307e\u3059\u3002\n\u3059\u3067\u306b\u201dConsumer Key(API Key)\u201d\u304a\u3088\u3073\u201dConsumer Secret(API Secret)\u201d\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002  \u6ce8\u610f\uff1a\u7279\u306b\u201dConsumer Key\u201d\u304a\u3088\u3073\u201dConsumer Secret\u201d\u306f\u5b89\u5168\u306b\u7ba1\u7406\u3057\u3001\u4ed6\u306e\u4eba\u3068\u5171\u6709\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u201dConsumer Key(API Key)\u201d\u304a\u3088\u3073\u201dConsumer Secret(API Secret)\u201d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u4ed6\u306e\u4eba\u304c\u3042\u305f\u304b\u3082\u3042\u306a\u305f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067Twitter\u306e\u8a8d\u8a3c\u3092\u901a\u904e\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002    \u30da\u30fc\u30b8\u4e0b\u90e8\u306e[Create my access token]\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002  \u3053\u308c\u3067\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002  \u6ce8\u610f\uff1a\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u30da\u30a2\u306f\u5b89\u5168\u306b\u7ba1\u7406\u3057\u3001\u4ed6\u306e\u4eba\u3068\u5171\u6709\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u201dAccess Token\u201d\u3068\u201dAccess Key\u201d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u4ed6\u306e\u4eba\u304c\u3042\u305f\u304b\u3082\u3042\u306a\u305f\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067Twitter\u306eAPI\u3092\u5229\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002   \u3053\u3053\u307e\u3067\u306e\u624b\u9806\u3067\u4ee5\u4e0b\u306e\u60c5\u5831\u304c\u5165\u624b\u3067\u304d\u307e\u3057\u305f\u3002   Consumer Key(API Key)  Consumer Secret(API Secret)  Access Token  Access Key   \u3053\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u3001Spark Streaming\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002", 
            "title": "3-2. Twitter\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u53d6\u5f97\u3059\u308b"
        }, 
        {
            "location": "/spark-streaming/#3-3-spark-streaming", 
            "text": "\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aScala\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u3072\u306a\u5f62\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u5143\u306b\u3001\u9806\u756a\u306b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3001\u6700\u7d42\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002  training/streaming/scala/Tutorial.scala  object Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey =  (\u8ffd\u52a0) \n    val apiSecret =  (\u8ffd\u52a0) \n    val accessToken =  (\u8ffd\u52a0) \n    val accessTokenSecret =  (\u8ffd\u52a0) \n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n\n  }\n}  \u4e0a\u8a18\u306e\u201d(\u8ffd\u52a0)\u201d\u306b\u306f\u3001 3-2. \u3067\u4f5c\u6210\u3057\u305f\u3001\u305d\u308c\u305e\u308c\u306e\u30ad\u30fc\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059  \u6b21\u306b\u3001\u201dYour code goes here\u201d\u306e\u90e8\u5206\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002  \u6700\u521d\u306b\u4ee5\u4e0b\u306e\u547d\u4ee4\u3092\u5165\u308c\u307e\u3059  val ssc = new StreamingContext(new SparkConf(), Seconds(1))  \u3053\u308c\u306b\u3088\u308aSpark\u306eStreamingContext\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002SparkConf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3001\u30d0\u30c3\u30c1\u5b9f\u884c\u9593\u9694\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u201d1\u79d2\u201d\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a1\u79d2\u9593\u306b\u53d6\u5f97\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u304c\u3001\uff11\u3064\u306e\u30d0\u30c3\u30c1\u30b8\u30e7\u30d6\u3068\u3057\u3066\u5206\u5272\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3046\u6307\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002  val tweets = TwitterUtils.createStream(ssc, None)  \u5909\u6570tweets\u306fDStream\u30af\u30e9\u30b9 [3] \u3067\u8868\u73fe\u3055\u308c\u305fTwitter\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u4e00\u89a7\u3067\u3059\u3002\n\u3088\u308a\u5177\u4f53\u7684\u306b\u8a00\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u5909\u6570tweets\u306f twitter4j.Status\u30af\u30e9\u30b9 \u3092\u5185\u90e8\u306b\u6301\u3064RDD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9023\u7d9a(\u914d\u5217)\u3067\u3042\u308b\u3068\u8a00\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002   \u3053\u3053\u307e\u3067\u3067\u3001\u4e0a\u8a18\u306b\u30bb\u30c3\u30c8\u3057\u305f\u8a8d\u8a3c\u60c5\u5831\u3092\u5143\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306fTwitter\u306b\u63a5\u7d9a\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u6b63\u3057\u304f\u63a5\u7d9a\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30b9\u30c6\u30fc\u30bf\u30b9(=\u5b9f\u969b\u306e\u30c4\u30a4\u30fc\u30c8\u5185\u5bb9)\u3092\u66f8\u304d\u51fa\u3057\u3066\u307f\u307e\u3059\u3002  val statuses = tweets.map(status =  status.getText())\nstatuses.print()  \u3010\u5099\u8003\u3011 \ntweets.map(status =  status.getText()) \u306b\u4f7f\u7528\u3055\u308c\u308b\u201d= \u201d\u306fScala\u306b\u304a\u3044\u3066\u306f\u300c\u30e9\u30e0\u30c0\u5f0f\u300d\u3068\u89e3\u91c8\u3055\u308c\u3001\u7121\u540d\u95a2\u6570\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3053\u3053\u3067\u306etweets.status\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001getText()\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066String(\u6587\u5b57\u5217)\u306b\u5909\u63db\u3055\u308c\u305f\u4e0a\u3067\u3001DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308bstatuses\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002  tweets.map\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308a\u3001tweets\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u304a\u3051\u308b\u500b\u3005\u306estatus\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001getText()\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u305f\u306e\u3061\u306b\u3001statuses\u3068\u3044\u3046\u540d\u524d\u306eDStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u305d\u308c\u305e\u308c\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002  print\u30e1\u30bd\u30c3\u30c9\u306f\u3001statuses DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6700\u521d\u306e10\u500b\u3092\u51fa\u529b\u3057\u307e\u3059 [4] \u3002\u3053\u308c\u306f1\u79d2\u3054\u3068\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002  \u307e\u305f\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u306f\u5b9a\u671f\u7684\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u51fa\u3057\u3001\u30c7\u30fc\u30bf\u306e\u640d\u5931\u3092\u9632\u6b62\u3057\u307e\u3059\u3002  ssc.checkpoint(checkpointDir)  \u6700\u5f8c\u306bStreamingContext\u306e\u5b9f\u884c\u3092\u958b\u59cb\u3059\u308b\u3088\u3046\u6307\u793a\u3057\u307e\u3059\u3002DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u64cd\u4f5c\u306f\u3001\u3053\u306e\u201dssc.start()\u201d\u306e\u524d\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002  ssc.start()\nssc.awaitTermination()  \u3053\u308c\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6539\u3081\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u5168\u4f53\u3092\u518d\u63b2\u3057\u307e\u3059\u3002  training/streaming/scala/Tutorial.scala  import org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.streaming.StreamingContext._\nimport TutorialHelper._\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey =  bNcABXXXXXXXXXXXXX5dCpHR \n    val apiSecret =  dZ9yDEBpmLJhOXXXXXXXXXXXXXXXXXXXft2xzOlfH \n    val accessToken =  NNNNNNNN-RZH5M1MFxTNXXXXXXXXXXXXXXXXXXl9tl2 \n    val accessTokenSecret =  UBRkxVeTXXXXXXXXXXXXXXXXXXXXX0aOn0kuT6FIfUhpxst \n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n    val ssc = new StreamingContext(new SparkConf(), Seconds(1))\n    val tweets = TwitterUtils.createStream(ssc, None)\n    val statuses = tweets.map(status =  status.getText())\n    statuses.print()\n    ssc.checkpoint(checkpointDir)\n    ssc.start()\n    ssc.awaitTermination()\n  }\n}", 
            "title": "3-3. Spark Streaming\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"
        }, 
        {
            "location": "/spark-streaming/#3-4", 
            "text": "\u3055\u3066\u3001\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002  \u307e\u305a\u3001SBT\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\nScala\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068Spark\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002  training/streaming/scala/build.sbt  import AssemblyKeys._ // put this at the top of the file\n\nname :=  Tutorial \n\nscalaVersion :=  2.10.4 \n\nlibraryDependencies +=  org.apache.spark  %  spark-streaming_2.10  %  1.4.1 \nlibraryDependencies +=  org.apache.spark  %  spark-streaming-twitter_2.10  %  1.4.1 \n\nresourceDirectory in Compile := baseDirectory.value /  resources \n\nassemblySettings\n\nmergeStrategy in assembly := {\n  case m if m.toLowerCase.endsWith( manifest.mf )          =  MergeStrategy.discard\n  case m if m.toLowerCase.matches( meta-inf.*\\\\.sf$ )      =  MergeStrategy.discard\n  case  log4j.properties                                   =  MergeStrategy.discard\n  case m if m.toLowerCase.startsWith( meta-inf/services/ ) =  MergeStrategy.filterDistinctLines\n  case  reference.conf                                     =  MergeStrategy.concat\n  case _                                                   =  MergeStrategy.first\n}  SBT\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002  training/streaming/scala/project/build.properties  sbt.version=0.13.8  \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304ctraining/streaming/scala\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u306e\u3061\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002  $ ../../../spark-1.4.1/sbt/sbt assembly\nGetting org.scala-sbt sbt 0.13.8 ...\n:: retrieving :: org.scala-sbt#boot-app\n    confs: [default]\n    44 artifacts copied, 0 already retrieved (13482kB/128ms)\nGetting Scala 2.10.4 (for sbt)...\n:: retrieving :: org.scala-sbt#boot-scala\n    confs: [default]\n    5 artifacts copied, 0 already retrieved (24459kB/66ms)\n(\u4e2d\u7565)\n[info] SHA-1: db07995883e8df5cd625db9723f10cb3667fa4c0\n[info] Packaging /home/kiuchi/training/streaming/scala/target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar ...\n[info] Done packaging.\n[success] Total time: 42 s, completed 2015/06/14 23:48:38\n$  \uff0a\u30a8\u30e9\u30fc\u4e8b\u4f8b  attempting to fetch sbt\n/root/spark-1.4.1/build/sbt-launch-lib.bash: line 54: build/sbt-launch-0.13.8.jar.part: No such file or directory\n/root/spark-1.4.1/build/sbt-launch-lib.bash: line 54: build/sbt-launch-0.13.8.jar.part: No such file or directory\nOur attempt to download sbt locally to build/sbt-launch-0.13.8.jar failed. Please install sbt manually from http://www.scala-sbt.org \u306e\u5834\u5408  \uff0a\u30a8\u30e9\u30fc\u4fee\u6b63  {$SparkHome\uff5d# wget https://dl.bintray.com/sbt/native-packages/sbt/0.13.8/sbt-0.13.8.zip\n#unzip sbt-0.13.8.zip\n# cd ~/training/streaming/scala/\n# mkdir build\n# cp ~/spark-1.4.1/sbt/bin/sbt-launch.jar build/sbt-launch-0.13.8.jar  \u3053\u308c\u3067SBT\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u304c\u518d\u69cb\u6210\u3055\u308c\u3001Tutorial\u30af\u30e9\u30b9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3057\u305f\u3002\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306f\u3001training/streaming/scala/target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar \u306b\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3053\u306e\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092spark-submit\u30b3\u30de\u30f3\u30c9\u3067Spark\u306b\u6295\u5165\u3057\u307e\u3059\u3002  $ ../../../spark-1.4.1/bin/spark-submit --class Tutorial target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar  \u4ee5\u4e0b\u306e\u3088\u3046\u306b1\u79d2\u6bce\u306b\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u5165\u529b\u3068\u3057\u3066\u306eTwitter\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d7\u3051\u53d6\u308a\u3001status\u30d7\u30ed\u30d1\u30c6\u30a3(\u3064\u307e\u308a\u30c4\u30a4\u30fc\u30c8\u5185\u5bb9)\u306e\u5148\u982d10\u500b\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u7d42\u4e86\u3059\u308b\u306b\u306fCtrl+C\u3092\u62bc\u3057\u307e\u3059\u3002  OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=128m; support was removed in 8.0\nConfiguring Twitter OAuth\n    Property twitter4j.oauth.consumerKey set as [bNcABDXXXXXXW5dCpHR]\n    Property twitter4j.oauth.accessToken set as [94807397-RZH5M1MFXXXXXXXXXE8ZfU3XXXXXXXVKl9tl2]\n    Property twitter4j.oauth.consumerSecret set as [dZ9yDEBpmLJhO4SRaXiQXXXXXXXXX2MoiNXXXXXpYft2xzOlfH]\n    Property twitter4j.oauth.accessTokenSecret set as [UBRkxVeTWEwdcfXXXXXXXXXXXXXXXXXXFIfUhpxst]\n\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n15/06/15 00:04:20 INFO Slf4jLogger: Slf4jLogger started\n15/06/15 00:04:21 INFO Remoting: Starting remoting\n15/06/15 00:04:21 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@laptop.mkhome:57181]\n15/06/15 00:04:21 INFO Remoting: Remoting now listens on addresses: [akka.tcp://sparkDriver@laptop.mkhome:57181]\n15/06/15 00:04:22 INFO TwitterStreamImpl: Establishing connection.\n15/06/15 00:04:23 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n15/06/15 00:04:23 INFO TwitterStreamImpl: Connection established.\n15/06/15 00:04:23 INFO TwitterStreamImpl: Receiving status stream.\n-------------------------------------------\nTime: 1434294265000 ms\n-------------------------------------------\n\u6b21\u56de\u306e\u30d1\u30ef\u30d7\u30ed\u3067\u3082\u30b5\u30af\u30bb\u30b9\u4ee5\u5916\u306b\u3082\u91d1\u304b\u304b\u308b\u8981\u7d20\u3064\u304f\u3093\u304b\u306a\uff1fOB\u3084\u7403\u5834\u4e00\u3064\u4f55\u5186\u3068\u304b\u3002\nRT @T4__kr23: \u305f\u304f\u3061\u3083\u3093\u304c\u30e9\u30b9\u30af\u98df\u3063\u3066\u308b\uff01\uff1f\uff01\uff1f http://t.co/0vZqm6KrVn\nRT @EvaDavai: Acabando la fiesta con @RenatoEscobarX 100% recomendable. ;) Te mando besos. http://t.co/OgneoW3RBe\n\u8aa4\u5b57\u3063\u305f\u6b7b\u306b\u305f\u3044\n31/99 \u0627\u0644\u0647\u062f\u0627\u0641 \u0627\u0644\u0643\u0628\u064a\u0631 \u0625\u0644\u0649 \u0623\u0646 \u0645\u0628\u0627\u0631\u064a\u0627\u062a \u0622\u062e\u0631 \u0627\u0644\u0645\u0648\u0633\u0645\u060c \u062a\u0643\u0648\u0646 \u0637\u0627\u0642\u0629 \u0627\u0644\u0644\u0627\u0639\u0628\u064a\u0646 \u0642\u062f \u0628\u0644\u063a\u062a \u0645\u062f\u0627\u0647\u0627\u060c \u0648\u0636\u0639\u0641 \u062a\u0631\u0643\u064a\u0632\u0647\u0645 \u0627\u0644\u0630\u0647\u0646\u064a\u060c \u0648\u0644\u0627 \u064a\u0645\u0643\u0646 \u062a\u0646\u0634\u064a\u0637 \u0647\u0630\u064a\u0646 \u0627\u0644\u0639\u0627\u0645\u0644\u064a\u0646 \u0641\u064a\nRT @TOWER_Anime: 6/15\u304a\u8a95\u751f\u65e5\u306e\u65b9\u3001\u7d9a\u3044\u3066\u306f\u3001\u300e\u3055\u3088\u306a\u3089\u7d76\u671b\u5148\u751f\u300f\u6728\u6d25\u5343\u91cc\u3055\u3093\u3001\u300e\u3089\u304d\u2606\u3059\u305f\u300f\u5bae\u6cb3\u3072\u306a\u305f\u3055\u3093\u3001\u300e\u6697\u6bba\u6559\u5ba4\u300f\u7247\u5ca1\u30e1\u30b0\u3055\u3093\u3001\u300e\u30cb\u30bb\u30b3\u30a4\u300f\u5c0f\u91ce\u5bfa\u5c0f\u54b2\u3055\u3093\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059!\n\u6b21\u306f\u30dd\u30b9\u30bf\u30fc...\u30d5\u30ec\u30fc\u30e0\u306b\u306f\u5165\u308c\u305f...\n@0315Belieber \u78ba\u304b\u306d\u30fc\u305d\u306e\u4eba\u3053\u3070\u3084\u3057\u3048\u3044\u304d\u3063\u3066\u540d\u524d\u3060\u3063\u305f\u306a\u30fc\n@ItzMeyz06 @azilxeiyn_ @keithawdrey @JelynJileng  THANK YOU ATE!! GOODNIGHT! MWAAH \ud83d\ude18\n@8 @S_Mitsutada_not  \u56f0\u308b\u3060\u308d\u3046\u306a\u3063\u3066\uff64\u5206\u304b\u3063\u3066\u305f\u304b\u3089\u8ab0\u306b\u3082\u8a00\u3063\u305f\u4e8b\u306f\u7121\u3044\u3067\u3059\u3088\uff61\u3059\u307f\u307e\u305b\u3093\uff61\u8a00\u3063\u3061\u3083\u3063\u305f\uff61 \u672c\u5fc3\u304b\u3089\u6c17\u306b\u306a\u3089\u306a\u3044\uff64\u304b\uff61\u2026\u3046\u3093\uff61\u308f\u304b\u308a\u307e\u3057\u305f\uff61\u305d\u306e\u672c\u8cea\u3092\u9055\u3048\u306a\u3044\u3088\u3046\u8aa0\u5fc3\u8aa0\u610f\u63a5\u3057\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3059\uff61  \u6e6f\u6d74\u307f\u3082\u672a\u3060\u3060\u3063\u305f\u306e\u306b\uff64\u9577\u3005\u3068\u3054\u3081\u3093\u306d\n\u2026\n(\u4e2d\u7565)\n-------------------------------------------\nTime: 1434294280000 ms\n-------------------------------------------\nGRABEEE ENRIQUEEE CRUSH NA ULIT KITA!!!!!!!! \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\n@matthunter123 any plans?\nRT @BrentRivera: GOOD MORNING \ud83d\ude0a\u2764\ufe0f\n@fuyu_no_usa \u304a\u3084\u3059\u307f\u3001\u4ffa\u306e\u5929\u4f7f\u3002\u306f\u306f\u3001\u304a\u5b22\u3061\u3083\u3093\u306e\u96a3\u3067\u7720\u308c\u308b\u3063\u3066\u306e\u306f\u5e78\u305b\u3060\u306a\u3002\u5929\u4f7f\u304c\u3044\u308b\u5834\u6240\u3063\u3066\u3053\u3068\u3067\u3001\u4ffa\u306f\u5929\u56fd\u3067\u7720\u308c\u308b\u306e\u304b\u3002\u2026\u2026\u4ffa\u306a\u3093\u304b\u304c\u3082\u3063\u305f\u3044\u306a\u3044\u306d\u3047\nRT @DengOww: @CaylaLoraine_ lol bat reserts at robotics lang ata samin huehue\nRT @almiseelanews: \u0627\u0644\u062c\u0646\u0631\u0627\u0644 \u0627\u0644\u0633\u0639\u0648\u062f\u064a \u0627\u0646\u0648\u0631 \u0639\u0634\u0642\u064a : \u0646\u0639\u0645 \u0627\u0644\u062a\u0642\u064a\u062a \u0628\u0645\u062f\u064a\u0631 \u0639\u0627\u0645 \u0648\u0632\u0627\u0631\u0629 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0627\u0644\u0627\u0633\u0631\u0627\u0626\u064a\u0644\u064a \u0648\u0627\u0644\u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0633\u0639\u0648\u062f\u064a \u0627\u0644\u0625\u0633\u0631\u0627\u0626\u064a\u0644\u064a \u0645\u0645\u0643\u0646 \u0627\u0630\u0627 \u062d\u0635\u0644  \u0627\u0644\u0641\u2026\nhttp://t.co/IGZkw91Pb8 http://t.co/tZO6SQ4cfI http://t.co/VgdTXoIsyc http://scler...\n\u4ffa\u3060\u3063\u3066\u3042\u3055\u307d\u3093\u3068\u751f\u96fb\u8a71\u3059\u308b\u3068\u304d\u3067\u3082\u3053\u3053\u307e\u3067\u7dca\u5f35\u3057\u3066\u306a\u304b\u3063\u305f\u305e\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57\uff57 #\u30e9\u30b8\u30aa\u30cd\u30fc\u30e0\u604b\u3059\u308b\u30a6\u30b5\u30ae\u3061\u3083\u3093\n@syanuko3 \u3042\nRT @collegefession:  I started pounding a beat on my dorm room wall.. 5 minutes later I eventually got 20 people making music from differen\u2026\n\u2026\n(\u3053\u3053\u3067Ctrl+C\u3092\u62bc\u4e0b)\n$", 
            "title": "3-4. \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c"
        }, 
        {
            "location": "/spark-streaming/#3-5", 
            "text": "\u3088\u308a\u5b9f\u8df5\u7684\u3067\u3001\u9762\u767d\u3044\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u304b\u3089\u884c\u3046\u306e\u306f\u3001\u300c\u904e\u53bb5\u5206\u9593\u3067\u3082\u3063\u3068\u3082\u4f7f\u7528\u3055\u308c\u305f\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0 [5] \u300d\u3092\u62bd\u51fa\u3059\u308b\u6a5f\u80fd\u306e\u5b9f\u88c5\u3067\u3059\u3002  \u4ee5\u4e0b\u3067DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3069\u306e\u3088\u3046\u306a\u5909\u66f4\u3092\u52a0\u3048\u308b\u304b\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f 3-3. \u3067\u8ff0\u3079\u305f\u901a\u308a\u3001\u5168\u3066\u306e\u5909\u66f4\u306f\u201dssc.start()\u201d\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u524d\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002  \u51e6\u7406\u7528\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6539\u4fee\u3057\u307e\u3059\u3002\n\u6539\u4fee\u6e08\u307f\u306e\u30b3\u30fc\u30c9\u5168\u6587\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002  training/streaming/scala/Tutorial.scala  import org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.streaming.StreamingContext._\nimport TutorialHelper._\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey =  bNcABXXXXXXXXXXXXX5dCpHR \n    val apiSecret =  dZ9yDEBpmLJhOXXXXXXXXXXXXXXXXXXXft2xzOlfH \n    val accessToken =  NNNNNNNN-RZH5M1MFxTNXXXXXXXXXXXXXXXXXXl9tl2 \n    val accessTokenSecret =  UBRkxVeTXXXXXXXXXXXXXXXXXXXXX0aOn0kuT6FIfUhpxst \n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n    val ssc = new StreamingContext(new SparkConf(), Seconds(1))\n    val tweets = TwitterUtils.createStream(ssc, None)\n    val statuses = tweets.map(status =  status.getText())\n    val words = statuses.flatMap(status =  status.split(   ))\n    val hashtags = words.filter(word =  word.startsWith( # ))\n    val counts = hashtags.map(tag =  (tag, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(60*5), Seconds(1))\n    val sortedCounts = counts.map{case(tag, count) =  (count, tag) }.transform(rdd =  rdd.sortByKey(false))\n    sortedCounts.foreach(rdd =  println( \\nTop 10 hashtags:\\n  + rdd.take(9).mkString( \\n )))\n    //statuses.print()\n    ssc.checkpoint(checkpointDir)\n    ssc.start()\n    ssc.awaitTermination()\n  }\n}  \u305d\u308c\u3067\u306f\u6539\u4fee\u90e8\u5206\u306b\u3064\u3044\u3066\u9806\u756a\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002  val tweets = TwitterUtils.createStream(ssc, None)  tweets DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306fTwitterUtils.createStream\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3067\u3001\u5185\u90e8\u306bRRD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8907\u6570\u542b\u3093\u3067\u304a\u308a\u3001\uff11\u3064\u306eRRD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u306f1\u79d2\u9593\u306b\u53d6\u5f97\u3055\u308c\u305f\u30c4\u30a4\u30fc\u30c8\u30c7\u30fc\u30bf\u304cTwitter4J.Status\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u306b\u306a\u3063\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002   \u4ee5\u4e0b\u306f\u201dtweets.print()\u201d\u3067\u5f97\u3089\u308c\u308btweets DStream\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u629c\u7c8b\u3067\u3001\uff11\u3064\u306eTwitter4J.Status\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff1d\uff11\u3064\u306e\u30c4\u30a4\u30fc\u30c8\u306e\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\ntext=''\u5185\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u304c\u5b9f\u969b\u306e\u30e6\u30fc\u30b6\u306e\u30c4\u30a4\u30fc\u30c8\u3067\u3059\u3002\n\u4e0b\u8a18\u4f8b\u3067\u306f\u300cBBC News - Hong Kong lawmakers reject Beijing poll plan http://t.co/JLKtx3jltA\u300d\u3068\u306a\u308a\u307e\u3059\u3002  StatusJSONImpl{createdAt=Fri Jun 19 18:01:48 JST 2015, id=611821169948266496, text='BBC News - Hong Kong lawmakers reject Beijing poll plan http://t.co/JLKtx3jltA', source=' a href= http://twitter.com/download/iphone  rel= nofollow Twitter for iPhone /a ', isTruncated=false, inReplyToStatusId=-1, inReplyToUserId=-1, isFavorited=false, inReplyToScreenName='null', geoLocation=null, place=null, retweetCount=0, isPossiblySensitive=false, contributorsIDs=[J@72342301, retweetedStatus=null, userMentionEntities=[], urlEntities=[URLEntityJSONImpl{url='http://t.co/JLKtx3jltA', expandedURL='http://www.bbc.com/news/world-asia-33179247', displayURL='bbc.com/news/world-asi\u2026'}], hashtagEntities=[], mediaEntities=[], currentUserRetweetId=-1, user=UserJSONImpl{id=2982028466, name='sunny', screenName='Iampju93Sunny', location='', description='null', isContributorsEnabled=false, profileImageUrl='http://pbs.twimg.com/profile_images/555345662884061184/PImnxNip_normal.jpeg', profileImageUrlHttps='https://pbs.twimg.com/profile_images/555345662884061184/PImnxNip_normal.jpeg', url='null', isProtected=false, followersCount=210, status=null, profileBackgroundColor='C0DEED', profileTextColor='333333', profileLinkColor='0084B4', profileSidebarFillColor='DDEEF6', profileSidebarBorderColor='C0DEED', profileUseBackgroundImage=true, showAllInlineMedia=false, friendsCount=617, createdAt=Wed Jan 14 16:53:38 JST 2015, favouritesCount=0, utcOffset=-1, timeZone='null', profileBackgroundImageUrl='http://abs.twimg.com/images/themes/theme1/bg.png', profileBackgroundImageUrlHttps='https://abs.twimg.com/images/themes/theme1/bg.png', profileBackgroundTiled=false, lang='ko', statusesCount=400, isGeoEnabled=false, isVerified=false, translator=false, listedCount=1, isFollowRequestSent=false}}  val statuses = tweets.map(status =  status.getText())  \u3053\u306e\u547d\u4ee4(map(getText()))\u3067\u3001tweets DStream\u5185\u306e\u500b\u3005\u306eRDD\u306b\u542b\u307e\u308c\u308b\u30c7\u30fc\u30bf(Twitter4J.Status\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u306e\u500b\u3005\u306e\u8981\u7d20)\u304c\u5909\u6570status\u306b\u30de\u30c3\u30d7\u3055\u308c\u3001getText()\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u7d50\u679c\u306e\u30c4\u30a4\u30fc\u30c8\u672c\u6587(String\u578b)\u306f\u914d\u5217\u3068\u306a\u308a\u3001\u5143\u306eRRD\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002   \u4e0a\u8a18\u306e\u4f8b\u306e\u5834\u5408\u3001statuses DStream-RRD-Array\u5185\u8981\u7d20\u306e\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002  BBC News - Hong Kong lawmakers reject Beijing poll plan http://t.co/JLKtx3jltA  val words = statuses.flatMap(status =  status.split(\" \"))  \u3053\u306e\u547d\u4ee4(flatMap{})\u3067\u3001\u30c4\u30a4\u30fc\u30c8\u672c\u6587\u3092\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3067\u5225\u3005\u306b\u5206\u3051\u3066\u3001\u500b\u3005\u3092\u914d\u5217\u3068\u3057\u3066\u3001\u518d\u5ea6RDD\u3068\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002   val hashtags = words.filter(word =  word.startsWith(\"#\"))  \u6700\u5f8c\u306b\u3001\u914d\u5217\u306e\u500b\u3005\u306e\u8981\u7d20(\u6587\u5b57\u5217)\u306e\u5148\u982d\u304c\u201d#\u201d\u3067\u3042\u308b\u3082\u306e\u3060\u3051\u3092\u62bd\u51fa\u3057\u3001\u540c\u69d8\u306bRDD\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002   val counts = hashtags.map(tag =  (tag, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(60*5), Seconds(1))  \u3053\u3053\u3067\u306f\u6700\u65b05\u5206\u9593\u306e\u305d\u308c\u305e\u308c\u306e\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306e\u6570\u3092\u5408\u8a08\u3057\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u3001\u904e\u53bb5\u5206\u9593\u306e\u305d\u308c\u305e\u308c\u306e\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306e\u500b\u6570\u3092\u5408\u8a08\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u306f\u3001\u3053\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3067\u6700\u65b05\u5206\u9593\u306e\u3082\u306e\u3068\u3057\u3066\u53d6\u308a\u6271\u3046RDD\u304c\u5e38\u306b\u5909\u52d5\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002  Spark\u306b\u304a\u3044\u3066\u3053\u308c\u3092\u4e0a\u624b\u304f\u53d6\u308a\u6271\u3046\u95a2\u6570\u304c\u201dreduceByKeyAndWindow\u201d\u306b\u306a\u308a\u307e\u3059\u3002reduceByKeyAndWindow\u95a2\u6570\u306f4\u3064\u306e\u5f15\u6570\u3092\u3068\u308a\u307e\u3059\u3002  a. \u65b0\u3057\u304f\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u5165\u3063\u305f\u8981\u7d20\u306b\u5bfe\u3057\u3066\u884c\u3046\u51e6\u7406 \nb. \u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u5916\u308c\u305f\u8981\u7d20\u306b\u5bfe\u3057\u3066\u884c\u3046\u51e6\u7406 \nc. \u95a2\u6570\u304c\u6271\u3046\u6700\u5927\u6642\u9593 \nd. \u66f4\u65b0\u5358\u4f4d  \u307e\u305a\u30a6\u30a3\u30f3\u30c9\u30a6(=\u4e0a\u8a18c\u3002\u5408\u8a08\u7b97\u51fa\u671f\u9593\u306e\u3053\u3068)\u306f0\u304b\u3089\u59cb\u307e\u308a\u3001\u6642\u9593\u306e\u65b0\u3057\u3044\u65b9\u5411\u306b\u4e0a\u8a18d\u5206\u4f38\u3073\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u306b\u5165\u3063\u305f\u500b\u3005\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u4e0a\u8a18a\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u6642\u9593\u306e\u53e4\u3044\u65b9\u304b\u3089\u4e0a\u8a18d\u5206\u7e2e\u307f\u3001\u305d\u306e\u7d50\u679c\u5916\u308c\u305f\u8981\u7d20\u306b\u5bfe\u3057\u3066\u4e0a\u8a18b\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002  \u307e\u305ahashtags DStream-RDD-Array\u5185\u306e\u500b\u3005\u306e\u8981\u7d20(\u6587\u5b57\u5217)\u306f\u3001\u201d(\u6587\u5b57\u5217, 1( -\u6574\u6570))\u201d\u3068\u3044\u3046\u30bf\u30d7\u30eb\u578b\u306b\u5909\u63db\u3055\u308c\u307e\u3059  \u7d50\u679c\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\u3001\u65b0\u305f\u306b\u4f5c\u6210\u3055\u308c\u308bcounts DStream\u306b\u306freduceByKey AndWindow\u95a2\u6570\u306b\u3088\u3063\u3066\u5408\u8a08\u3055\u308c\u305f\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u306e\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u3068\u305d\u306e\u500b\u6570\u306e\u5408\u8a08\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u307e\u3060\u500b\u6570\u9806\u306b\u4e26\u3073\u66ff\u3048\u3089\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001Top10\u3092\u51fa\u3059\u305f\u3081\u306b\u306f\u3082\u3046\u5c11\u3057\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002   val sortedCounts = counts.map{case(tag, count) =  (count, tag) }.transform(rdd =  rdd.sortByKey(false))  counts DStream\u306e\u914d\u5217\u3092\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306e\u500b\u6570\u9806\u306b\u4e26\u3079\u76f4\u3059\u305f\u3081\u3001\u307e\u305amap\u3067(\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0(\u6587\u5b57\u5217), \u500b\u6570)\u306e\u30bf\u30d7\u30eb\u3092(\u500b\u6570, \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0(\u6587\u5b57\u5217))\u306b\u5165\u308c\u66ff\u3048\u307e\u3059\u3002\u305d\u306e\u306e\u3061\u306btransform\u3067count\u9806\u306b\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002   sortedCounts.foreach(rdd =  println(\"\\nTop 10 hashtags:\\n\" + rdd.take(10).mkString(\"\\n\")))  \u6700\u5f8c\u306bRDD\u5185\u306e\u914d\u5217\u304b\u3089take(10) [6] \u3067\u5148\u982d10\u500b\u3092\u53d6\u308a\u51fa\u3057\u3001mkString(\u201c\\n\u201d) [7] \u3067\u3001\u533a\u5207\u308a\u6587\u5b57\u3092\u6539\u884c(LF)\u306b\u3057\u3066\u3001\u51fa\u529b\u3057\u307e\u3059\u3002   \u4fee\u6b63\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059  $ ../../../spark-1.4.1/sbt/sbt assembly\nGetting org.scala-sbt sbt 0.13.8 ...\n:: retrieving :: org.scala-sbt#boot-app\n    confs: [default]\n    44 artifacts copied, 0 already retrieved (13482kB/128ms)\nGetting Scala 2.10.4 (for sbt)...\n:: retrieving :: org.scala-sbt#boot-scala\n    confs: [default]\n    5 artifacts copied, 0 already retrieved (24459kB/66ms)\n(\u4e2d\u7565)\n[info] SHA-1: db07995883e8df5cd625db9723f10cb3667fa4c0\n[info] Packaging /home/kiuchi/training/streaming/scala/target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar ...\n[info] Done packaging.\n[success] Total time: 42 s, completed 2015/06/14 23:48:38\n$  \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092spark-submit\u30b3\u30de\u30f3\u30c9\u3067Spark\u306b\u6295\u5165\u3057\u307e\u3059  $ ../../../spark-1.4.1/bin/spark-submit --class Tutorial target/scala-2.10/Tutorial-assembly-0.1-SNAPSHOT.jar  \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306eTop10\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u7d42\u4e86\u3059\u308b\u306b\u306fCtrl+C\u3092\u62bc\u3057\u307e\u3059\u3002  Configuring Twitter OAuth\n    Property twitter4j.oauth.consumerKey set as [bNcABDgULQldZ8z4gRW5dCpHR]\n    Property twitter4j.oauth.accessToken set as [94807397-RZH5M1MFxTNPC6Y7zXE8ZfU3dX1ipZoULBVKl9tl2]\n    Property twitter4j.oauth.consumerSecret set as [dZ9yDEBpmLJhO4SRaXiQX6VpSGtZm4Z2MoiNpWYpYft2xzOlfH]\n    Property twitter4j.oauth.accessTokenSecret set as [UBRkxVeTWEwdcfXUIfLmInvpeB20aOn0kuT6FIfUhpxst]\n\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n15/06/28 21:12:34 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n15/06/28 21:12:35 INFO Slf4jLogger: Slf4jLogger started\n15/06/28 21:12:35 INFO Remoting: Starting remoting\n15/06/28 21:12:35 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@192.168.20.97:39939]\n\u2026.\nTop 10 hashtags in last 5 minutes:\n(1,#F\u00e9ile2015)\n(1,#\u063a\u0631\u062f\u0644\u064a)\n15/06/28 21:12:41 INFO WriteAheadLogManager : Attempting to clear 0 old log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493241000: \n15/06/28 21:12:41 INFO WriteAheadLogManager : Cleared log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493241000\n\nTop 10 hashtags in last 5 minutes:\n(38,#Dol\u2026)\n(2,#KCAM\u00c9X\u0130CO)\n(2,#HollywoodChoice)\n(2,#JorgeBlanco)\n(1,#Oman)\n(1,#\u0628\u064a\u0642\u0648\u0644\u0643)\n(1,#Iraq)\n(1,#MSGKickToDrugs)\n(1,#Matildas)\n15/06/28 21:12:42 INFO WriteAheadLogManager : Attempting to clear 0 old log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493242000: \n15/06/28 21:12:42 INFO WriteAheadLogManager : Cleared log files in file:/home/kiuchi/twst/checkpoint/receivedBlockMetadata older than 1435493242000\n\u2026\n(\u3053\u3053\u3067Ctrl+C\u3092\u62bc\u4e0b)\n15/06/28 21:12:47 INFO TwitterStreamImpl: Inflater has been closed\n15/06/28 21:12:47 ERROR ReceiverTracker: Deregistered receiver for stream 0: Stopped by driver\n15/06/28 21:12:47 WARN ReceiverSupervisorImpl: Stopped executor without error\n15/06/28 21:12:47 INFO WriteAheadLogManager : Stopped write ahead log manager\n$", 
            "title": "3-5. \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6539\u4fee\u3059\u308b"
        }, 
        {
            "location": "/spark-streaming/#3-6", 
            "text": "\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306b\u304a\u3051\u308b\u51e6\u7406\u306e\u5358\u4f4d\u306fRDD\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308aRDD\uff11\u3064\u306b\u3064\u3044\u3066\uff11\u3064\u306e\u30b8\u30e7\u30d6\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002  \u307e\u305f\u3001Spark\u306e Transform\u547d\u4ee4 \u306f\u9045\u5ef6\u8a55\u4fa1(Lazy Evaluation)\u306b\u3088\u3063\u3066\u5373\u6642\u306b\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002 Action\u547d\u4ee4 \u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u306b\u5b9f\u969b\u306b\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002  \u4e0a\u8a18\u30b5\u30f3\u30d7\u30eb\u3067Transform\u547d\u4ee4\u306f .map(...)   .flatMap(...)   .filter(...)   .reduceByKeyAndWindow(...)   .sortByKey(...) \u3001Action\u547d\u4ee4\u306f .transform(...)   .foreach(...)   .take(...) \u306e\u90e8\u5206\u3067\u3059\u3002\n\u3064\u307e\u308a\u5b9f\u969b\u306b\u306f\u305d\u308c\u305e\u308c\u306e\u5165\u529bRDD\u306b\u5927\u3057\u3066\u300128\u884c\u76ee\u306e .transform(...) \u300129\u884c\u76ee\u306e .foreach(..) \u3067\u305d\u308c\u305e\u308c\u30b8\u30e7\u30d6\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002  training/streaming/scala/Tutorial.scala  import org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.streaming.StreamingContext._\nimport TutorialHelper._\n\nobject Tutorial {\n  def main(args: Array[String]) {\n\n    // Checkpoint directory\n    val checkpointDir = TutorialHelper.getCheckpointDirectory()\n\n    // Configure Twitter credentials\n    val apiKey =  bNcABXXXXXXXXXXXXX5dCpHR \n    val apiSecret =  dZ9yDEBpmLJhOXXXXXXXXXXXXXXXXXXXft2xzOlfH \n    val accessToken =  NNNNNNNN-RZH5M1MFxTNXXXXXXXXXXXXXXXXXXl9tl2 \n    val accessTokenSecret =  UBRkxVeTXXXXXXXXXXXXXXXXXXXXX0aOn0kuT6FIfUhpxst \n    TutorialHelper.configureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\n    // Your code goes here\n    val ssc = new StreamingContext(new SparkConf(), Seconds(1))\n    val tweets = TwitterUtils.createStream(ssc, None)\n    val statuses = tweets.map(status =  status.getText())\n    val words = statuses.flatMap(status =  status.split(   ))\n    val hashtags = words.filter(word =  word.startsWith( # ))\n    val counts = hashtags.map(tag =  (tag, 1)).reduceByKeyAndWindow(_ + _, _ - _, Seconds(60*5), Seconds(1))\n    val sortedCounts = counts.map{case(tag, count) =  (count, tag) }.transform(rdd =  rdd.sortByKey(false))\n    sortedCounts.foreach(rdd =  println( \\nTop 10 hashtags:\\n  + rdd.take(9).mkString( \\n )))\n    //statuses.print()\n    ssc.checkpoint(checkpointDir)\n    ssc.start()\n    ssc.awaitTermination()\n  }\n}  \u540c\u69d8\u306e\u72b6\u6cc1\u3092\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8996\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttp:// <spark \u30db\u30b9\u30c8>:4040\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bstart, transform, foreach\u3067\u305d\u308c\u305e\u308c\u30d0\u30c3\u30c1\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002", 
            "title": "3-6. \u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u5206\u6563"
        }, 
        {
            "location": "/spark-streaming/#3-7", 
            "text": "Spark 1.4.0\u4ee5\u964d\u3067\u306f\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u72b6\u6cc1\u306e\u53ef\u8996\u5316\u306b\u3088\u3063\u3066\u3001\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002http://\\ spark\u30db\u30b9\u30c8>:4040/streaming \u3067\u3001\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u3084\u3001\u51e6\u7406\u6642\u9593\u3001\u51e6\u7406\u306e\u9045\u5ef6\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002", 
            "title": "3-7. \u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u72b6\u6cc1\u78ba\u8a8d"
        }, 
        {
            "location": "/spark-streaming/#_1", 
            "text": "\u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0(Twitter\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b9\u30c8\u30ea\u30fc\u30e0)\u304c\u60f3\u5b9a\u3088\u308a\u3082\u5c11\u306a\u3044\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001Twitter\u5074\u304c\u7279\u5b9a\u306e\u696d\u8005\u306b\u3057\u304b\u516c\u958b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u5168\u30c7\u30fc\u30bf(firehose)\u3092\u63d0\u4f9b\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u8d77\u56e0\u3057\u3066\u3044\u307e\u3059\u3002  \u53c2\u8003:   Twitter\u304cfirehose\u5951\u7d04\u3092\u89e3\u6d88\u3057\u305fNTT\u30c7\u30fc\u30bf\u3092\u6226\u7565\u7684\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30d1\u30fc\u30c8\u30ca\u30fc\u306b  http://jp.techcrunch.com/2015/04/15/20150415twitter-set-to-strike-ibm-style-analytics-deal-with-ntt-data/    \u65e5\u672c\u3067\u306e\u30c7\u30fc\u30bf\u518d\u8ca9\u306b\u3064\u3044\u3066  https://blog.twitter.com/ja/2015/0415gnip    New Tweets per second record, and how!(2013)2013\u5e74\u306e\u6642\u70b9\u3067\u306f\u3001firehose\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u5e73\u5747\u7d046,000tweets per second(TPS)\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002 https://blog.twitter.com/2013/new-tweets-per-second-record-and-how      \n[2] SBT: \u201cSimple Build Tool\u201d\u306e\u7565\u3002Scala \u304a\u3088\u3073 Java\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308b\u7c21\u4fbf\u306a\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3002(\u53c2\u7167:  https://github.com/harrah/xsbt/wiki  ,  http://www.scala-sbt.org/  )  \n[3]  DStream\u30af\u30e9\u30b9 : Spark Streaming Discretized Stream(Spark\u306b\u304a\u3051\u308b\u96e2\u6563\u30b9\u30c8\u30ea\u30fc\u30e0)\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u89aa\u3068\u3057\u3066\u3001\u500b\u3005\u306e\u30c7\u30fc\u30bf\u304b\u3089RDD\u304c\u751f\u6210\u3055\u308c\u308b\u3002   \n[4]  DStream.print\u30e1\u30bd\u30c3\u30c9 : print(Int(20))\u3068\u3059\u308b\u306820\u500b\u306b\u306a\u308b\u3002  \n[5] \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0: Twitter\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u306b\u7528\u3044\u3089\u308c\u308b\u201d#\u201d\u306b\u7d9a\u304f\u6587\u5b57\u5217\u306e\u3053\u3068\u3092\u6307\u3057\u3001\u3053\u308c\u306b\u3088\u308aTwitter\u5185\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6a5f\u80fd\u3002 (\u53c2\u8003:  https://support.twitter.com/articles/20170159-  )  \n[6]  take(n) : scala\u547d\u4ee4\u3002\u914d\u5217(\u30b3\u30ec\u30af\u30b7\u30e7\u30f3)\u306e\u5148\u982d\u304b\u3089\u4efb\u610f\u306e\u500b\u6570\u3092\u53d6\u308a\u51fa\u3059\u3002  \n[7]  mkString(n) : scala\u547d\u4ee4\u3002\u914d\u5217\u3092n\u3067\u6307\u5b9a\u3057\u305f\u533a\u5207\u308a\u6587\u5b57\u3067\u533a\u5207\u3063\u3066\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u3002", 
            "title": "\u3010\u5099\u8003\u3011 \u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u91cf\u306b\u3064\u3044\u3066"
        }, 
        {
            "location": "/mllib/", 
            "text": "4. MLlib(\u6a5f\u68b0\u5b66\u7fd2)\n\n\n\u3053\u306e\u7ae0\u3067\u306f\u300c\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3055\u308c\u305f\u6620\u753b\u306e\u30ea\u30b3\u30e1\u30f3\u30c9\u300d\u3068\u3044\u3046\u5b9f\u4f8b\u3092\u901a\u3058\u3066\u6a5f\u68b0\u5b66\u7fd2\u3092\u5b66\u3073\u307e\u3059\u3002\n\u3053\u3053\u3067\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3001\nMovieLens\n\u306b\u3088\u3063\u3066\u53d6\u5f97\u3055\u308c\u305f\u3001\u30e6\u30fc\u30b6\u304c\u5b9f\u969b\u306b\u6620\u753b\u3092\u8a55\u4fa1\u3057\u305f\u30c7\u30fc\u30bf\u7fa4\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u898f\u6a21\u306e\u3082\u306e\u3067\u3059\u3002\n\n\n\n\n\u30ea\u30b3\u30e1\u30f3\u30c9\u7dcf\u6570\uff1a\u7d041,000\u4e07\u4ef6\n\n\n\u30e6\u30fc\u30b6\u6570\uff1a\u7d0472,000\u30e6\u30fc\u30b6\n\n\n\u6620\u753b\u306e\u7a2e\u985e\uff1a\u7d0410,000\u672c\n\n\n\n\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u306f\u3001training/data/movielens/large\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u9ad8\u901f\u306b\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u30c7\u30fc\u30bf\u898f\u6a21\u3092\u5c0f\u3055\u304f\u3057\u305f\u3082\u306e\u304ctraining/data/movielens/medium\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u898f\u6a21\u306b\u305d\u308c\u305e\u308c\u7e2e\u5c0f\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\n\n\n\n\u30ea\u30b3\u30e1\u30f3\u30c9\u7dcf\u6570\uff1a\u7d04100\u4e07\u4ef6\n\n\n\u30e6\u30fc\u30b6\u6570\uff1a\u7d046,000\u30e6\u30fc\u30b6\n\n\n\u6620\u753b\u306e\u7a2e\u985e\uff1a\u7d044,000\u672c\n\n\n\n\n4-1. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aac\u660e\n\n\ntraining/data/movielens/mediun \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u3092\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n$ cd ${HOME}/training/data/movielens/medium\n$ ls -lh\n\u5408\u8a08 24M\n-rw-r--r-- 1 kiuchi kiuchi    0  6\u6708 19  2014 Icon\n-rw------- 1 kiuchi kiuchi 5.1K  6\u6708 19  2014 README\n-rw------- 1 kiuchi kiuchi 168K  6\u6708 19  2014 movies.dat\n-rw------- 1 kiuchi kiuchi  24M  6\u6708 19  2014 ratings.dat\n-rw------- 1 kiuchi kiuchi 132K  6\u6708 19  2014 users.dat\n[kiuchi@spark-single medium]$\n\n\n\n\n\u3053\u308c\u304b\u3089\u4f7f\u7528\u3059\u308b\u306e\u306f \u201cratings.dat\u201d \u3068 \u201cmovies.dat\u201d \u3067\u3059\u3002\n\u201cratings.dat\u201d\u306e\u5185\u5bb9\u306f\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3001\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u30e6\u30fc\u30b6ID\n:\n\u30e0\u30fc\u30d3\u30fcID\n::\n\u8a55\u4fa1\n::\n\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n\n\n\u307e\u305f \u201cmovies.dat\u201d \u306e\u5185\u5bb9\u306f\u540c\u69d8\u306b\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\n\n\u30e0\u30fc\u30d3\u30fcID\n::\n\u6620\u753b\u306e\u30bf\u30a4\u30c8\u30eb\n::\n\u6620\u753b\u306e\u30b8\u30e3\u30f3\u30eb\n\n\n4-2. \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n\n\n\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u3001\u30ea\u30b3\u30e1\u30f3\u30c9\u30a8\u30f3\u30b8\u30f3\u306b\u4e00\u822c\u7684\u306b\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3001\u8868\u306e\u4e2d\u306e\u7a7a\u6b04\u3092\u3001\u5b9f\u969b\u306b\u57cb\u3081\u305f\u5834\u5408\u306b\u305d\u3046\u306a\u308b\u3068\u601d\u308f\u308c\u308b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u3044\u3046\u201d\u8868\u201d\u3068\u306f\u4eca\u56de\u306e\u5834\u5408\u3001\u201d\u30e6\u30fc\u30b6\u201d\u3068\u201d\u6620\u753b\u201d\u3092\u305d\u308c\u305e\u308c\u8ef8\u306b\u6301\u3061\u3001\u305d\u308c\u305e\u308c\u306e\u6b04\u306b\u201d\u8a55\u4fa1\u201d\u304c\u5165\u3063\u3066\u3044\u308b\u8868\u306b\u306a\u308a\u307e\u3059\u3002\nSpark\u306f\u73fe\u6642\u70b9\u3067\u306f\u300c\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u300d\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u8868\u4e2d\u306e\u7a7a\u6b04\u306b\u5165\u308b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u3001\u540c\u69d8\u306bSpark\u304c\u6709\u3059\u308b\u300c\u4ea4\u4e92\u6700\u5c0f\u4e8c\u4e57\u6cd5(Alternating Least Squares, ALS)\n[8]\n\u300d\u306b\u3088\u3063\u3066\u6f5c\u5728\u5909\u6570\u30bb\u30c3\u30c8\u3092\u7b97\u51fa\u3057\u3001\u50be\u5411\u6027\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\n\n\n\n4-3. \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\n\n\u305d\u308c\u3067\u306f\u5b9f\u969b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\ntraining/machine-learning/scala/solution/MovieLensALS.scala\n\n\nimport java.io.File\n\nimport scala.io.Source\n\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.rdd._\nimport org.apache.spark.mllib.recommendation.{ALS, Rating, MatrixFactorizationModel}\n\nobject MovieLensALS {\n\n  def main(args: Array[String]) {\n\n    Logger.getLogger(\norg.apache.spark\n).setLevel(Level.WARN)\n    Logger.getLogger(\norg.eclipse.jetty.server\n).setLevel(Level.OFF)\n\n    if (args.length != 2) {\n      println(\nUsage: /path/to/spark/bin/spark-submit --driver-memory 2g --class MovieLensALS \n +\n        \ntarget/scala-*/movielens-als-ssembly-*.jar movieLensHomeDir personalRatingsFile\n)\n      sys.exit(1)\n    }\n\n    // set up environment\n\n    val conf = new SparkConf()\n      .setAppName(\nMovieLensALS\n)\n      .set(\nspark.executor.memory\n, \n2g\n)\n    val sc = new SparkContext(conf)\n\n    // load personal ratings\n\n    val myRatings = loadRatings(args(1))\n    val myRatingsRDD = sc.parallelize(myRatings, 1)\n\n    // load ratings and movie titles\n\n    val movieLensHomeDir = args(0)\n\n    val ratings = sc.textFile(new File(movieLensHomeDir, \nratings.dat\n).toString).map { line =\n\n      val fields = line.split(\n::\n)\n      // format: (timestamp % 10, Rating(userId, movieId, rating))\n      (fields(3).toLong % 10, Rating(fields(0).toInt, fields(1).toInt, fields(2).toDouble))\n    }\n\n    val movies = sc.textFile(new File(movieLensHomeDir, \nmovies.dat\n).toString).map { line =\n\n      val fields = line.split(\n::\n)\n      // format: (movieId, movieName)\n      (fields(0).toInt, fields(1))\n    }.collect().toMap\n\n    val numRatings = ratings.count()\n    val numUsers = ratings.map(_._2.user).distinct().count()\n    val numMovies = ratings.map(_._2.product).distinct().count()\n\n    println(\nGot \n + numRatings + \n ratings from \n\n      + numUsers + \n users on \n + numMovies + \n movies.\n)\n\n    // split ratings into train (60%), validation (20%), and test (20%) based on the \n    // last digit of the timestamp, add myRatings to train, and cache them\n\n    val numPartitions = 4\n    val training = ratings.filter(x =\n x._1 \n 6)\n      .values\n      .union(myRatingsRDD)\n      .repartition(numPartitions)\n      .cache()\n    val validation = ratings.filter(x =\n x._1 \n= 6 \n x._1 \n 8)\n      .values\n      .repartition(numPartitions)\n      .cache()\n    val test = ratings.filter(x =\n x._1 \n= 8).values.cache()\n\n    val numTraining = training.count()\n    val numValidation = validation.count()\n    val numTest = test.count()\n\n    println(\nTraining: \n + numTraining + \n, validation: \n + numValidation + \n, test: \n + numTest)\n\n    // train models and evaluate them on the validation set\n\n    val ranks = List(8, 12)\n    val lambdas = List(0.1, 10.0)\n    val numIters = List(10, 20)\n    var bestModel: Option[MatrixFactorizationModel] = None\n    var bestValidationRmse = Double.MaxValue\n    var bestRank = 0\n    var bestLambda = -1.0\n    var bestNumIter = -1\n    for (rank \n- ranks; lambda \n- lambdas; numIter \n- numIters) {\n      val model = ALS.train(training, rank, numIter, lambda)\n      val validationRmse = computeRmse(model, validation, numValidation)\n      println(\nRMSE (validation) = \n + validationRmse + \n for the model trained with rank = \n \n        + rank + \n, lambda = \n + lambda + \n, and numIter = \n + numIter + \n.\n)\n      if (validationRmse \n bestValidationRmse) {\n        bestModel = Some(model)\n        bestValidationRmse = validationRmse\n        bestRank = rank\n        bestLambda = lambda\n        bestNumIter = numIter\n      }\n    }\n\n    // evaluate the best model on the test set\n\n    val testRmse = computeRmse(bestModel.get, test, numTest)\n\n    println(\nThe best model was trained with rank = \n + bestRank + \n and lambda = \n + bestLambda\n      + \n, and numIter = \n + bestNumIter + \n, and its RMSE on the test set is \n + testRmse + \n.\n)\n\n    // create a naive baseline and compare it with the best model\n\n    val meanRating = training.union(validation).map(_.rating).mean\n    val baselineRmse = \n      math.sqrt(test.map(x =\n (meanRating - x.rating) * (meanRating - x.rating)).mean)\n    val improvement = (baselineRmse - testRmse) / baselineRmse * 100\n    println(\nThe best model improves the baseline by \n + \n%1.2f\n.format(improvement) + \n%.\n)\n\n    // make personalized recommendations\n\n    val myRatedMovieIds = myRatings.map(_.product).toSet\n    val candidates = sc.parallelize(movies.keys.filter(!myRatedMovieIds.contains(_)).toSeq)\n    val recommendations = bestModel.get\n      .predict(candidates.map((0, _)))\n      .collect()\n      .sortBy(- _.rating)\n      .take(50)\n\n    var i = 1\n    println(\nMovies recommended for you:\n)\n    recommendations.foreach { r =\n\n      println(\n%2d\n.format(i) + \n: \n + movies(r.product))\n      i += 1\n    }\n\n    // clean up\n    sc.stop()\n  }\n\n  /** Compute RMSE (Root Mean Squared Error). */\n  def computeRmse(model: MatrixFactorizationModel, data: RDD[Rating], n: Long): Double = {\n    val predictions: RDD[Rating] = model.predict(data.map(x =\n (x.user, x.product)))\n    val predictionsAndRatings = predictions.map(x =\n ((x.user, x.product), x.rating))\n      .join(data.map(x =\n ((x.user, x.product), x.rating)))\n      .values\n    math.sqrt(predictionsAndRatings.map(x =\n (x._1 - x._2) * (x._1 - x._2)).reduce(_ + _) / n)\n  }\n\n  /** Load ratings from file. */\n  def loadRatings(path: String): Seq[Rating] = {\n    val lines = Source.fromFile(path).getLines()\n    val ratings = lines.map { line =\n\n      val fields = line.split(\n::\n)\n      Rating(fields(0).toInt, fields(1).toInt, fields(2).toDouble)\n    }.filter(_.rating \n 0.0)\n    if (ratings.isEmpty) {\n      sys.error(\nNo ratings provided.\n)\n    } else {\n      ratings.toSeq\n    }\n  }\n}\n\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306bbuild.sbt\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n\ntraining/machine-learning/scala/build.sbt\n\n\nimport AssemblyKeys._\n\nassemblySettings\n\nname := \nmovielens-als\n\n\nversion := \n0.1\n\n\nscalaVersion := \n2.10.4\n\n\nlibraryDependencies += \norg.apache.spark\n % \nspark-mllib_2.10\n % \n1.4.1\n % \nprovided\n\n\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306bbuild.properties\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\ntraining/machine-learning/scala/project/build.properties\n\n\nsbt.version=0.13.8\n\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n$ cd ${HOME}/training/machine-learning/\n$ cp personalRatings.txt.template personalRatings.txt\n\n\n\n\n\u4f5c\u6210\u3057\u305fpersonalRatings.txt\u3092\u7de8\u96c6\u3057\u3001\u201d?\u201d\u30921\uff5e5\u306e\u6570\u5024\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u3053\u308c\u304c\u3053\u308c\u3089\u306e\u6620\u753b\u306b\u5bfe\u3059\u308b\u3042\u306a\u305f\u306e\u8a55\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002\n\n\ntraining/machine-learning/personalRatings.txt\n\n\n0::1::?::1400000000::Toy Story (1995)\n0::780::?::1400000000::Independence Day (a.k.a. ID4) (1996)\n0::590::?::1400000000::Dances with Wolves (1990)\n0::1210::?::1400000000::Star Wars: Episode VI - Return of the Jedi (1983)\n0::648::?::1400000000::Mission: Impossible (1996)\n0::344::?::1400000000::Ace Ventura: Pet Detective (1994)\n0::165::?::1400000000::Die Hard: With a Vengeance (1995)\n0::153::?::1400000000::Batman Forever (1995)\n0::597::?::1400000000::Pretty Woman (1990)\n0::1580::?::1400000000::Men in Black (1997)\n0::231::?::1400000000::Dumb \n Dumber (1994)\n\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\n\n\n$ cd ${HOME}\n$ cd training/machine-learning/scala/\n$ mkdir build\n$ cd build\n$ ln -s ${HOME}/spark-1.4.1/sbt/bin/sbt-launch.jar ./sbt-launch-0.13.8.jar\n$ cd ..\n$ cp solution/MovieLensALS.scala .\n$ ${HOME}/spark-1.4.1/sbt/sbt assembly\n\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u306a\u305f\u306e\u8a55\u4fa1\u306b\u57fa\u3065\u304f\u304a\u3059\u3059\u3081\u306e\u6620\u753b\u304c\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002\n\n\n$ SPARK_MEM=4g ~/spark-1.4.1/bin/spark-submit --class MovieLensALS target/scala-2.10/movielens-als-assembly-0.1.jar ~/training/data/movielens/medium/ ../personalRatings.txt\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n15/06/28 22:39:13 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n15/06/28 22:39:14 INFO Slf4jLogger: Slf4jLogger started\n15/06/28 22:39:14 INFO Remoting: Starting remoting\n15/06/28 22:39:14 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@192.168.20.97:49233]\n(\u7565)\nMovies recommended for you:\n 1: Conceiving Ada (1997)\n 2: Love Serenade (1996)\n 3: Guantanamera (1994)\n 4: Belly (1998)\n 5: Stiff Upper Lips (1998)\n 6: Saltmen of Tibet, The (1997)\n 7: Good Earth, The (1937)\n 8: Across the Sea of Time (1995)\n 9: Smashing Time (1967)\n10: Spitfire Grill, The (1996)\n11: Firelight (1997)\n12: For Love of the Game (1999)\n13: First Love, Last Rites (1997)\n14: Duets (2000)\n15: Window to Paris (1994)\n16: Ayn Rand: A Sense of Life (1997)\n17: King and I, The (1999)\n18: Better Than Chocolate (1999)\n19: Brother Minister: The Assassination of Malcolm X (1994)\n20: Bewegte Mann, Der (1994)\n21: Crazy in Alabama (1999)\n22: Zachariah (1971)\n23: And the Ship Sails On (E la nave va) (1984)\n24: Mr. Jones (1993)\n25: Jakob the Liar (1999)\n26: Among Giants (1998)\n27: Dangerous Beauty (1998)\n28: No Mercy (1986)\n29: Small Wonders (1996)\n30: Against All Odds (1984)\n31: I'm the One That I Want (2000)\n32: Steal Big, Steal Little (1995)\n33: H.O.T.S. (1979)\n34: Cement Garden, The (1993)\n35: Stealing Home (1988)\n36: I Love You, Don't Touch Me! (1998)\n37: City of Angels (1998)\n38: Wisdom (1986)\n39: Gossip (2000)\n40: Where the Heart Is (2000)\n41: Long Walk Home, The (1990)\n42: Horseman on the Roof, The (Hussard sur le toit, Le) (1995)\n43: Steel Magnolias (1989)\n44: Eighth Day, The (Le Huiti\ufffdme jour ) (1996)\n45: Patch Adams (1998)\n46: Armageddon (1998)\n47: Best Laid Plans (1999)\n48: Rules of Engagement (2000)\n49: Jupiter's Wife (1994)\n50: Mr. Holland's Opus (1995)\n15/06/28 22:40:26 INFO RemoteActorRefProvider$RemotingTerminator: Shutting down remote daemon.\n15/06/28 22:40:26 INFO RemoteActorRefProvider$RemotingTerminator: Remote daemon shut down; proceeding with flushing remote transports.\n15/06/28 22:40:27 INFO RemoteActorRefProvider$RemotingTerminator: Remoting shut down.\n$ \n\n\n\n\n4-4. \u89e3\u8aac(1)-\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u51fa\u3057\n\n\n\u305d\u308c\u3067\u306f\u500b\u3005\u306e\u51e6\u7406\u5185\u5bb9\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n\n    val conf = new SparkConf()\n      .setAppName(\nMovieLensALS\n)\n      .set(\nspark.executor.memory\n, \n2g\n)\n    val sc = new SparkContext(conf)\n\n\n\n\nSpark\u306b\u304a\u3051\u308b\u3069\u306e\u3088\u3046\u306a\u51e6\u7406\u3067\u3042\u3063\u3066\u3082\u3001\u6700\u521d\u306bSparkConf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001SparkContext\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u307e\u3059\u3002\nspark-submit\u30b3\u30de\u30f3\u30c9\u3067\u7406\u89e3\u3055\u308c\u308b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u201dMovieLensALS\u201d\u3068\u3001\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u91cf\u201d2g(=2GB)\u201d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u306fWebUI(http://\n<spark\n\u30db\u30b9\u30c8>:4040)\u306b\u3082\u8868\u793a\u3055\u308c\u308b\u305f\u3081\u3001\u5404\u7a2e\u60c5\u5831\u3092\u5224\u5225\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n\n     val movieLensHomeDir = args(0)\n\n    val ratings = sc.textFile(new File(movieLensHomeDir, \nratings.dat\n).toString).map { line =\n\n      val fields = line.split(\n::\n)\n      // format: (timestamp % 10, Rating(userId, movieId, rating))\n      (fields(3).toLong % 10, Rating(fields(0).toInt, fields(1).toInt, fields(2).toDouble))\n    }\n\n\n\n\n\u6b21\u306b\u201dratings.dat\u201d\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6620\u753b\u306e\u8a55\u4fa1\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u8a55\u4fa1\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308a\u3001\u201d\uff1a\uff1a(\u30b3\u30ed\u30f3 \u30b3\u30ed\u30f3)\u201d\u304c\u533a\u5207\u308a\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u8a55\u4fa1\u30c7\u30fc\u30bf\u306e\u5404\u884c\u3092\u8aad\u307f\u51fa\u3057\u3001\u201d\uff1a\uff1a\u201d\u3067\u533a\u5207\u3063\u305f\u3082\u306e\u3092\u8981\u7d20\u306b\u3082\u3064\u30bf\u30d7\u30eb\u578b\u306b\u5909\u63db\u3057\u3001RDD\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u8981\u7d20\u306e\u4e2d\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306b\u3064\u3044\u3066\u306f\u6700\u5f8c\u306e\uff11\u6587\u5b57(\u3082\u3068\u3082\u3068\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u309210\u3067\u5272\u3063\u305f\u4f59\u308a)\u3092\u30e9\u30f3\u30c0\u30e0\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nRating\u30af\u30e9\u30b9\u306f\u201d\u30e6\u30fc\u30b6ID(Int)\u201d\u3001\u201d\u30e0\u30fc\u30d3\u30fcID(Int)\u201d\u3001\u201d\u8a55\u4fa1(Double)\u201d\u3067\u69cb\u6210\u3055\u308c\u308b\u30bf\u30d7\u30eb\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n    val movies = sc.textFile(new File(movieLensHomeDir, \nmovies.dat\n).toString).map { line =\n\n      val fields = line.split(\n::\n)\n      // format: (movieId, movieName)\n      (fields(0).toInt, fields(1))\n    }.collect().toMap\n\n\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u540c\u69d8\u306b\u201dmovies.dat\u201d\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6620\u753b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30bf\u30d7\u30eb\u578b\u306b\u5909\u63db\u3057\u305f\u4e0a\u3067RDD\u3092\u751f\u6210\u3057\u3001\u6700\u5f8c\u306btoMap\u95a2\u6570\u3067\u30de\u30c3\u30d7(\u30ad\u30fc, \u5024\u306e\u30bb\u30c3\u30c8)\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\n    val numRatings = ratings.count()\n    val numUsers = ratings.map(_._2.user).distinct().count()\n    val numMovies = ratings.map(_._2.product).distinct().count()\n\n    println(\nGot \n + numRatings + \n ratings from \n\n      + numUsers + \n users on \n + numMovies + \n movies.\n)\n\n\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u4f55\u500b\u306e\u8a55\u4fa1\u30c7\u30fc\u30bf\u3001\u6620\u753b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3060\u304b\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\n4-5. \u89e3\u8aac(2)-\u30c7\u30fc\u30bf\u306e\u5206\u5272\n\n\n\u3053\u308c\u304b\u3089MLlib\u306e\u95a2\u6570\u3067\u3042\u308bALS\u3092\u4f7f\u3044\u3001RDD[Rating]\u3092\u5165\u529b\u3068\u3059\u308bMatrixFactorizationModel\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n\nALS\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u3001Matrix Factor\u3068Regurarization Constants\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u6700\u9069\u306a\u7d44\u307f\u5408\u308f\u305b\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u3001\u3053\u308c\u304b\u3089\u30c7\u30fc\u30bf\u30923\u3064\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u3057\u306a\u3044\u30b5\u30d6\u30bb\u30c3\u30c8\u306b\u5206\u5272\u3057\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\ntraining: \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\n\n\ntest: \u30c6\u30b9\u30c8\u7528\n\n\nvalidation: \u8a55\u4fa1\u7528\n\n\n\n\n\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3059\u308b\u305f\u3081\u306b\u3001\u65e5\u4ed8\u306e\u6700\u5f8c\u306e\u4e00\u6841\u3092\u4f7f\u7528\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\n\n\n\u307e\u305atraining\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u57fa\u306b\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3001RMSE(Root Mean Squared Error)\u3092\u57fa\u306b\u3057\u305fvalidation\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306btest\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u6700\u9069\u306a\u30e2\u30c7\u30eb\u3092\u6c7a\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u307e\u305ftraining\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3001\u3042\u306a\u305f\u306e\u8a55\u4fa1(training/machine-learning/personalRatings.txt\u3067\u30bb\u30c3\u30c8\u3057\u305f\u3082\u306e)\u3092\u542b\u3081\u3001\u30ea\u30b3\u30e1\u30f3\u30c9\u306e\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\ntraining, validation, test\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u3044\u305a\u308c\u3082\u8907\u6570\u56de\u8aad\u307f\u51fa\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u308c\u305e\u308ccache()\u547d\u4ee4\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u30e1\u30e2\u30ea\u4e0a\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\n\nMatrix Factorization: \u884c\u5217\u56e0\u5b50\u5206\u89e3\u3002\u6b21\u5143\u524a\u6e1b\u624b\u6cd5\u306e\u4e00\u3064\u3002(\n\u53c2\u8003\n),(\n\u53c2\u8003\n)\n\n\n    val numPartitions = 4\n    val training = ratings.filter(x =\n x._1 \n 6)\n      .values\n      .union(myRatingsRDD)\n      .repartition(numPartitions)\n      .cache()\n    val validation = ratings.filter(x =\n x._1 \n= 6 \n x._1 \n 8)\n      .values\n      .repartition(numPartitions)\n      .cache()\n    val test = ratings.filter(x =\n x._1 \n= 8).values.cache()\n\n    val numTraining = training.count()\n    val numValidation = validation.count()\n    val numTest = test.count()\n\n    println(\nTraining: \n + numTraining + \n, validation: \n + numValidation + \n, test: \n + numTest)\n\n\n\n\n\u30c7\u30fc\u30bf\u306e\u5206\u5272\u5f8c\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u500b\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nTraining: 602251, validation: 198919, test: 199049.\n\n\n4-6. \u89e3\u8aac(3)-ALS\u3092\u7528\u3044\u305f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\n\n\u3053\u3053\u3067\u306fALS.train\u3092\u7528\u3044\u3066\u3044\u304f\u3064\u304b\u306e\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3001\u8a55\u4fa1\u3057\u305f\u306e\u3061\u306b\u6700\u9069\u306a\u30e2\u30c7\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\nALS\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u3001rank(\u6f5c\u5728\u56e0\u5b50\u306e\u6570)\u3001lambda(Regularization Constant, \u6b63\u5247\u5316\u5b9a\u6570)\u3001iterations(\u7e70\u308a\u8fd4\u3057\u56de\u6570)\u304c\u3042\u308a\u307e\u3059\u3002\nALS.train\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\n\n    val ranks = List(8, 12)\n    val lambdas = List(1.0, 10.0)\n    val numIters = List(10, 20)\n    var bestModel: Option[MatrixFactorizationModel] = None\n    var bestValidationRmse = Double.MaxValue\n    var bestRank = 0\n    var bestLambda = -1.0\n    var bestNumIter = -1\n    for (rank \n- ranks; lambda \n- lambdas; numIter \n- numIters) {\n      val model = ALS.train(training, rank, numIter, lambda)\n      val validationRmse = computeRmse(model, validation, numValidation)\n      println(\nRMSE (validation) = \n + validationRmse + \n for the model trained with rank = \n \n        + rank + \n, lambda = \n + lambda + \n, and numIter = \n + numIter + \n.\n)\n      if (validationRmse \n bestValidationRmse) {\n        bestModel = Some(model)\n        bestValidationRmse = validationRmse\n        bestRank = rank\n        bestLambda = lambda\n        bestNumIter = numIter\n      }\n    }\n\n\n\n\n\u7406\u60f3\u7684\u306b\u306f\u30d9\u30b9\u30c8\u306a\u30e2\u30c7\u30eb\u3092\u63a2\u7d22\u3059\u308b\u305f\u3081\u306b\u306f\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\u7bc4\u56f2\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u51e6\u7406\u6642\u9593\u306e\u5236\u7d04\u304b\u3089\u3001\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30678\u30e2\u30c7\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8a55\u4fa1\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\n\n\nrank(2\u500b): 8 \u304a\u3088\u3073 12\n\n\nlambda(2\u500b): 1.0 \u304a\u3088\u3073 10.0\n\n\niteration(2\u500b): 10 \u304a\u3088\u3073 20\n\n\n\n\n\u305d\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308bcomputeRmse\u3092\u4f7f\u3063\u3066\u5404\u30e2\u30c7\u30eb\u305d\u308c\u305e\u308c\u3067validation\uff08\u30b5\u30d6\u30bb\u30c3\u30c8\uff09\u306eRMSE\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\nvalidation\u306eRMSE\u304c\u4e00\u756a\u5c0f\u3055\u304b\u3063\u305f\u30e2\u30c7\u30eb\u304c\u9078\u3070\u308c\u3001\u305d\u306e\u30e2\u30c7\u30eb\u306etest\u30bb\u30c3\u30c8\u306eRMSE\u304c\u6700\u7d42\u8a08\u91cf\u3068\u3057\u3066\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n\nSpark\u306f\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u306e\u306b1\uff5e2\u5206\u639b\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u51fa\u6765\u307e\u3057\u305f\u3089\u30b9\u30af\u30ea\u30fc\u30f3\u4e0a\u306b\u4ee5\u4e0b\u304c\u898b\u3048\u308b\u306f\u305a\u3067\u3059\u3002\n\u5b9f\u884c\u3054\u3068\u306b\u7b54\u3048\u81ea\u4f53\u304c\u591a\u5c11\u7570\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\nThe best model was trained with rank 8 and lambda 10.0, and numIter = 10, and its RMSE on test is 0.8808492431998702.\n\n\n4-7. \u3042\u306a\u305f\u306b\u304a\u52e7\u3081\u3059\u308b\u6620\u753b\n\n\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u6700\u5f8c\u306e\u90e8\u5206\u3068\u3057\u3066\u3001\u30e2\u30c7\u30eb\u304c\u3042\u306a\u305f\u306b\u3069\u3093\u306a\u6620\u753b\u3092\u304a\u52e7\u3081\u3059\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n\u3059\u3079\u3066\u306e\u4e88\u60f3\u304c\u51fa\u307e\u3057\u305f\u3089\u3001\u304a\u52e7\u3081Top50\u3092\u30ea\u30b9\u30c8\u3055\u305b\u3066\u3042\u306a\u305f\u306b\u5408\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u304b\u3081\u3066\u4e0b\u3055\u3044\u3002\n\n\nval myRatedMovieIds = myRatings.map(_.product).toSet\n    val candidates = sc.parallelize(movies.keys.filter(!myRatedMovieIds.contains(_)).toSeq)\n    val recommendations = bestModel.get\n      .predict(candidates.map((0, _)))\n      .collect()\n      .sortBy(- _.rating)\n      .take(50)\n\n    var i = 1\n    println(\nMovies recommended for you:\n)\n    recommendations.foreach { r =\n\n      println(\n%2d\n.format(i) + \n: \n + movies(r.product))\n      i += 1\n    }\n\n\n\n\n\u4ee5\u4e0b\u306e\u51fa\u529b\u3068\u4f3c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n\nMovies recommended for you:\n 1: Silence of the Lambs, The (1991)\n 2: Saving Private Ryan (1998)\n 3: Godfather, The (1972)\n 4: Star Wars: Episode IV - A New Hope (1977)\n 5: Braveheart (1995)\n 6: Schindler's List (1993)\n 7: Shawshank Redemption, The (1994)\n 8: Star Wars: Episode V - The Empire Strikes Back (1980)\n 9: Pulp Fiction (1994)\n10: Alien (1979)\n...\n\n\n\n\n\u7d50\u679c\u304c\u9055\u3046\u3053\u3068\u304c\u3042\u308a\u5f97\u308b\u3053\u3068\u3068\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u53e4\u3044\u306e\u3067\u3053\u305310\u5e74\u306e\u6620\u753b\u306f\u51fa\u3066\u3053\u306a\u3044\u3053\u3068\u3092\u7406\u89e3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n4-8. \u30a8\u30af\u30b5\u30b5\u30a4\u30ba\n\n\n4-8-(1). \u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3068\u6bd4\u8f03\u3059\u308b\n\n\nALS\u306f\u610f\u5473\u306e\u3042\u308b\u30e2\u30c7\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u304b\uff1f\n\u3053\u308c\u3092\u78ba\u304b\u3081\u308b\u306b\u8a55\u4fa1\u7d50\u679c\u3092\u5e73\u5747\u7684\u306a\u8a55\u4fa1\u3057\u304b\u51fa\u529b\u3057\u306a\u3044\u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u30e2\u30c7\u30eb\u3068\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306eRMSE\u3092\u8a08\u7b97\u3059\u308b\u306e\u306f\u8907\u96d1\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\nval meanRating = training.union(validation).map(_.rating).mean\n    val baselineRmse = \n      math.sqrt(test.map(x =\n (meanRating - x.rating) * (meanRating - x.rating)).mean)\n    val improvement = (baselineRmse - testRmse) / baselineRmse * 100\n    println(\nThe best model improves the baseline by \n + \n%1.2f\n.format(improvement) + \n%.\n)\n\n\n\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u3068\u4f3c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n\nThe best model improves the baseline by 20.96%.\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306f\u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3088\u308a\u6210\u679c\u3092\u51fa\u3059\u3053\u3068\u306f\u660e\u3089\u304b\u306a\u3088\u3046\u3067\u3059\u3002\n\u3057\u304b\u3057\u9593\u9055\u3063\u305f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3088\u308a\u60aa\u3044\u7d50\u679c\u3092\u51fa\u3059\u30e2\u30c7\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u306e\u3067\u6b63\u3057\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u3092\u9078\u3076\u3053\u3068\u304c\u3053\u306e\u30bf\u30b9\u30af\u3067\u306f\u304b\u306a\u308a\u91cd\u8981\u3067\u3059\u3002\n\n\n4-8-(2). \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u56e0\u5b50\u3092\u52a0\u3048\u308b\n\n\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u306b\u3042\u306a\u305f\u306e\u8a55\u4fa1\u3092\u4ed8\u3051\u52a0\u3048\u307e\u3059\u3002\u304a\u52e7\u3081\u3092\u51fa\u3059\u3088\u308a\u826f\u3044\u65b9\u6cd5\u306f\u307e\u305aMatrix Factorization\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3001\u30e2\u30c7\u30eb\u306b\u3042\u306a\u305f\u306e\u8a55\u4fa1\u3092\u5099\u3048\u307e\u3059\u3002\u3082\u3057\u3053\u306e\u65b9\u6cd5\u306b\u8208\u5473\u304c\u6e67\u304d\u307e\u3057\u305f\u3089MatrixFactorizationModel\u306e\u5b9f\u884c\u65b9\u6cd5\u3092\u307f\u3066\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u306e\u305f\u3081\u306b\u30e2\u30c7\u30eb\u306b\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u3082\u3057\u3042\u306a\u305f\u3078\u306e\u304a\u52e7\u3081\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u5148\u306b\u898b\u305f\u3044\u306a\u3089\u3070\u3001\u7b54\u3048\u306fmachine-learning/scala/solution\u306b\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n[8] ALS: \u4ea4\u4e92\u6700\u5c0f\u4e8c\u4e57\u6cd5 \n\u53c2\u71671\n \n\u53c2\u71672", 
            "title": "4. MLlib(\u6a5f\u68b0\u5b66\u7fd2)"
        }, 
        {
            "location": "/mllib/#4-mllib", 
            "text": "\u3053\u306e\u7ae0\u3067\u306f\u300c\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3055\u308c\u305f\u6620\u753b\u306e\u30ea\u30b3\u30e1\u30f3\u30c9\u300d\u3068\u3044\u3046\u5b9f\u4f8b\u3092\u901a\u3058\u3066\u6a5f\u68b0\u5b66\u7fd2\u3092\u5b66\u3073\u307e\u3059\u3002\n\u3053\u3053\u3067\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3001 MovieLens \u306b\u3088\u3063\u3066\u53d6\u5f97\u3055\u308c\u305f\u3001\u30e6\u30fc\u30b6\u304c\u5b9f\u969b\u306b\u6620\u753b\u3092\u8a55\u4fa1\u3057\u305f\u30c7\u30fc\u30bf\u7fa4\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u898f\u6a21\u306e\u3082\u306e\u3067\u3059\u3002   \u30ea\u30b3\u30e1\u30f3\u30c9\u7dcf\u6570\uff1a\u7d041,000\u4e07\u4ef6  \u30e6\u30fc\u30b6\u6570\uff1a\u7d0472,000\u30e6\u30fc\u30b6  \u6620\u753b\u306e\u7a2e\u985e\uff1a\u7d0410,000\u672c   \u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u306f\u3001training/data/movielens/large\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u9ad8\u901f\u306b\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u30c7\u30fc\u30bf\u898f\u6a21\u3092\u5c0f\u3055\u304f\u3057\u305f\u3082\u306e\u304ctraining/data/movielens/medium\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u898f\u6a21\u306b\u305d\u308c\u305e\u308c\u7e2e\u5c0f\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002   \u30ea\u30b3\u30e1\u30f3\u30c9\u7dcf\u6570\uff1a\u7d04100\u4e07\u4ef6  \u30e6\u30fc\u30b6\u6570\uff1a\u7d046,000\u30e6\u30fc\u30b6  \u6620\u753b\u306e\u7a2e\u985e\uff1a\u7d044,000\u672c", 
            "title": "4. MLlib(\u6a5f\u68b0\u5b66\u7fd2)"
        }, 
        {
            "location": "/mllib/#4-1", 
            "text": "training/data/movielens/mediun \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u3092\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002  $ cd ${HOME}/training/data/movielens/medium\n$ ls -lh\n\u5408\u8a08 24M\n-rw-r--r-- 1 kiuchi kiuchi    0  6\u6708 19  2014 Icon\n-rw------- 1 kiuchi kiuchi 5.1K  6\u6708 19  2014 README\n-rw------- 1 kiuchi kiuchi 168K  6\u6708 19  2014 movies.dat\n-rw------- 1 kiuchi kiuchi  24M  6\u6708 19  2014 ratings.dat\n-rw------- 1 kiuchi kiuchi 132K  6\u6708 19  2014 users.dat\n[kiuchi@spark-single medium]$  \u3053\u308c\u304b\u3089\u4f7f\u7528\u3059\u308b\u306e\u306f \u201cratings.dat\u201d \u3068 \u201cmovies.dat\u201d \u3067\u3059\u3002\n\u201cratings.dat\u201d\u306e\u5185\u5bb9\u306f\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3001\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002  \u30e6\u30fc\u30b6ID : \u30e0\u30fc\u30d3\u30fcID :: \u8a55\u4fa1 :: \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7  \u307e\u305f \u201cmovies.dat\u201d \u306e\u5185\u5bb9\u306f\u540c\u69d8\u306b\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u3059\u3002  \u30e0\u30fc\u30d3\u30fcID :: \u6620\u753b\u306e\u30bf\u30a4\u30c8\u30eb :: \u6620\u753b\u306e\u30b8\u30e3\u30f3\u30eb", 
            "title": "4-1. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aac\u660e"
        }, 
        {
            "location": "/mllib/#4-2", 
            "text": "\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u3001\u30ea\u30b3\u30e1\u30f3\u30c9\u30a8\u30f3\u30b8\u30f3\u306b\u4e00\u822c\u7684\u306b\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3001\u8868\u306e\u4e2d\u306e\u7a7a\u6b04\u3092\u3001\u5b9f\u969b\u306b\u57cb\u3081\u305f\u5834\u5408\u306b\u305d\u3046\u306a\u308b\u3068\u601d\u308f\u308c\u308b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u3044\u3046\u201d\u8868\u201d\u3068\u306f\u4eca\u56de\u306e\u5834\u5408\u3001\u201d\u30e6\u30fc\u30b6\u201d\u3068\u201d\u6620\u753b\u201d\u3092\u305d\u308c\u305e\u308c\u8ef8\u306b\u6301\u3061\u3001\u305d\u308c\u305e\u308c\u306e\u6b04\u306b\u201d\u8a55\u4fa1\u201d\u304c\u5165\u3063\u3066\u3044\u308b\u8868\u306b\u306a\u308a\u307e\u3059\u3002\nSpark\u306f\u73fe\u6642\u70b9\u3067\u306f\u300c\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u300d\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u8868\u4e2d\u306e\u7a7a\u6b04\u306b\u5165\u308b\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u3001\u540c\u69d8\u306bSpark\u304c\u6709\u3059\u308b\u300c\u4ea4\u4e92\u6700\u5c0f\u4e8c\u4e57\u6cd5(Alternating Least Squares, ALS) [8] \u300d\u306b\u3088\u3063\u3066\u6f5c\u5728\u5909\u6570\u30bb\u30c3\u30c8\u3092\u7b97\u51fa\u3057\u3001\u50be\u5411\u6027\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002", 
            "title": "4-2. \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0"
        }, 
        {
            "location": "/mllib/#4-3", 
            "text": "\u305d\u308c\u3067\u306f\u5b9f\u969b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002  training/machine-learning/scala/solution/MovieLensALS.scala  import java.io.File\n\nimport scala.io.Source\n\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.rdd._\nimport org.apache.spark.mllib.recommendation.{ALS, Rating, MatrixFactorizationModel}\n\nobject MovieLensALS {\n\n  def main(args: Array[String]) {\n\n    Logger.getLogger( org.apache.spark ).setLevel(Level.WARN)\n    Logger.getLogger( org.eclipse.jetty.server ).setLevel(Level.OFF)\n\n    if (args.length != 2) {\n      println( Usage: /path/to/spark/bin/spark-submit --driver-memory 2g --class MovieLensALS   +\n         target/scala-*/movielens-als-ssembly-*.jar movieLensHomeDir personalRatingsFile )\n      sys.exit(1)\n    }\n\n    // set up environment\n\n    val conf = new SparkConf()\n      .setAppName( MovieLensALS )\n      .set( spark.executor.memory ,  2g )\n    val sc = new SparkContext(conf)\n\n    // load personal ratings\n\n    val myRatings = loadRatings(args(1))\n    val myRatingsRDD = sc.parallelize(myRatings, 1)\n\n    // load ratings and movie titles\n\n    val movieLensHomeDir = args(0)\n\n    val ratings = sc.textFile(new File(movieLensHomeDir,  ratings.dat ).toString).map { line = \n      val fields = line.split( :: )\n      // format: (timestamp % 10, Rating(userId, movieId, rating))\n      (fields(3).toLong % 10, Rating(fields(0).toInt, fields(1).toInt, fields(2).toDouble))\n    }\n\n    val movies = sc.textFile(new File(movieLensHomeDir,  movies.dat ).toString).map { line = \n      val fields = line.split( :: )\n      // format: (movieId, movieName)\n      (fields(0).toInt, fields(1))\n    }.collect().toMap\n\n    val numRatings = ratings.count()\n    val numUsers = ratings.map(_._2.user).distinct().count()\n    val numMovies = ratings.map(_._2.product).distinct().count()\n\n    println( Got   + numRatings +   ratings from  \n      + numUsers +   users on   + numMovies +   movies. )\n\n    // split ratings into train (60%), validation (20%), and test (20%) based on the \n    // last digit of the timestamp, add myRatings to train, and cache them\n\n    val numPartitions = 4\n    val training = ratings.filter(x =  x._1   6)\n      .values\n      .union(myRatingsRDD)\n      .repartition(numPartitions)\n      .cache()\n    val validation = ratings.filter(x =  x._1  = 6   x._1   8)\n      .values\n      .repartition(numPartitions)\n      .cache()\n    val test = ratings.filter(x =  x._1  = 8).values.cache()\n\n    val numTraining = training.count()\n    val numValidation = validation.count()\n    val numTest = test.count()\n\n    println( Training:   + numTraining +  , validation:   + numValidation +  , test:   + numTest)\n\n    // train models and evaluate them on the validation set\n\n    val ranks = List(8, 12)\n    val lambdas = List(0.1, 10.0)\n    val numIters = List(10, 20)\n    var bestModel: Option[MatrixFactorizationModel] = None\n    var bestValidationRmse = Double.MaxValue\n    var bestRank = 0\n    var bestLambda = -1.0\n    var bestNumIter = -1\n    for (rank  - ranks; lambda  - lambdas; numIter  - numIters) {\n      val model = ALS.train(training, rank, numIter, lambda)\n      val validationRmse = computeRmse(model, validation, numValidation)\n      println( RMSE (validation) =   + validationRmse +   for the model trained with rank =   \n        + rank +  , lambda =   + lambda +  , and numIter =   + numIter +  . )\n      if (validationRmse   bestValidationRmse) {\n        bestModel = Some(model)\n        bestValidationRmse = validationRmse\n        bestRank = rank\n        bestLambda = lambda\n        bestNumIter = numIter\n      }\n    }\n\n    // evaluate the best model on the test set\n\n    val testRmse = computeRmse(bestModel.get, test, numTest)\n\n    println( The best model was trained with rank =   + bestRank +   and lambda =   + bestLambda\n      +  , and numIter =   + bestNumIter +  , and its RMSE on the test set is   + testRmse +  . )\n\n    // create a naive baseline and compare it with the best model\n\n    val meanRating = training.union(validation).map(_.rating).mean\n    val baselineRmse = \n      math.sqrt(test.map(x =  (meanRating - x.rating) * (meanRating - x.rating)).mean)\n    val improvement = (baselineRmse - testRmse) / baselineRmse * 100\n    println( The best model improves the baseline by   +  %1.2f .format(improvement) +  %. )\n\n    // make personalized recommendations\n\n    val myRatedMovieIds = myRatings.map(_.product).toSet\n    val candidates = sc.parallelize(movies.keys.filter(!myRatedMovieIds.contains(_)).toSeq)\n    val recommendations = bestModel.get\n      .predict(candidates.map((0, _)))\n      .collect()\n      .sortBy(- _.rating)\n      .take(50)\n\n    var i = 1\n    println( Movies recommended for you: )\n    recommendations.foreach { r = \n      println( %2d .format(i) +  :   + movies(r.product))\n      i += 1\n    }\n\n    // clean up\n    sc.stop()\n  }\n\n  /** Compute RMSE (Root Mean Squared Error). */\n  def computeRmse(model: MatrixFactorizationModel, data: RDD[Rating], n: Long): Double = {\n    val predictions: RDD[Rating] = model.predict(data.map(x =  (x.user, x.product)))\n    val predictionsAndRatings = predictions.map(x =  ((x.user, x.product), x.rating))\n      .join(data.map(x =  ((x.user, x.product), x.rating)))\n      .values\n    math.sqrt(predictionsAndRatings.map(x =  (x._1 - x._2) * (x._1 - x._2)).reduce(_ + _) / n)\n  }\n\n  /** Load ratings from file. */\n  def loadRatings(path: String): Seq[Rating] = {\n    val lines = Source.fromFile(path).getLines()\n    val ratings = lines.map { line = \n      val fields = line.split( :: )\n      Rating(fields(0).toInt, fields(1).toInt, fields(2).toDouble)\n    }.filter(_.rating   0.0)\n    if (ratings.isEmpty) {\n      sys.error( No ratings provided. )\n    } else {\n      ratings.toSeq\n    }\n  }\n}  \u4ee5\u4e0b\u306e\u3088\u3046\u306bbuild.sbt\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002  training/machine-learning/scala/build.sbt  import AssemblyKeys._\n\nassemblySettings\n\nname :=  movielens-als \n\nversion :=  0.1 \n\nscalaVersion :=  2.10.4 \n\nlibraryDependencies +=  org.apache.spark  %  spark-mllib_2.10  %  1.4.1  %  provided   \u4ee5\u4e0b\u306e\u3088\u3046\u306bbuild.properties\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002  training/machine-learning/scala/project/build.properties  sbt.version=0.13.8  \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002  $ cd ${HOME}/training/machine-learning/\n$ cp personalRatings.txt.template personalRatings.txt  \u4f5c\u6210\u3057\u305fpersonalRatings.txt\u3092\u7de8\u96c6\u3057\u3001\u201d?\u201d\u30921\uff5e5\u306e\u6570\u5024\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u3053\u308c\u304c\u3053\u308c\u3089\u306e\u6620\u753b\u306b\u5bfe\u3059\u308b\u3042\u306a\u305f\u306e\u8a55\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002  training/machine-learning/personalRatings.txt  0::1::?::1400000000::Toy Story (1995)\n0::780::?::1400000000::Independence Day (a.k.a. ID4) (1996)\n0::590::?::1400000000::Dances with Wolves (1990)\n0::1210::?::1400000000::Star Wars: Episode VI - Return of the Jedi (1983)\n0::648::?::1400000000::Mission: Impossible (1996)\n0::344::?::1400000000::Ace Ventura: Pet Detective (1994)\n0::165::?::1400000000::Die Hard: With a Vengeance (1995)\n0::153::?::1400000000::Batman Forever (1995)\n0::597::?::1400000000::Pretty Woman (1990)\n0::1580::?::1400000000::Men in Black (1997)\n0::231::?::1400000000::Dumb   Dumber (1994)  \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002  $ cd ${HOME}\n$ cd training/machine-learning/scala/\n$ mkdir build\n$ cd build\n$ ln -s ${HOME}/spark-1.4.1/sbt/bin/sbt-launch.jar ./sbt-launch-0.13.8.jar\n$ cd ..\n$ cp solution/MovieLensALS.scala .\n$ ${HOME}/spark-1.4.1/sbt/sbt assembly  \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u306a\u305f\u306e\u8a55\u4fa1\u306b\u57fa\u3065\u304f\u304a\u3059\u3059\u3081\u306e\u6620\u753b\u304c\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002  $ SPARK_MEM=4g ~/spark-1.4.1/bin/spark-submit --class MovieLensALS target/scala-2.10/movielens-als-assembly-0.1.jar ~/training/data/movielens/medium/ ../personalRatings.txt\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n15/06/28 22:39:13 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n15/06/28 22:39:14 INFO Slf4jLogger: Slf4jLogger started\n15/06/28 22:39:14 INFO Remoting: Starting remoting\n15/06/28 22:39:14 INFO Remoting: Remoting started; listening on addresses :[akka.tcp://sparkDriver@192.168.20.97:49233]\n(\u7565)\nMovies recommended for you:\n 1: Conceiving Ada (1997)\n 2: Love Serenade (1996)\n 3: Guantanamera (1994)\n 4: Belly (1998)\n 5: Stiff Upper Lips (1998)\n 6: Saltmen of Tibet, The (1997)\n 7: Good Earth, The (1937)\n 8: Across the Sea of Time (1995)\n 9: Smashing Time (1967)\n10: Spitfire Grill, The (1996)\n11: Firelight (1997)\n12: For Love of the Game (1999)\n13: First Love, Last Rites (1997)\n14: Duets (2000)\n15: Window to Paris (1994)\n16: Ayn Rand: A Sense of Life (1997)\n17: King and I, The (1999)\n18: Better Than Chocolate (1999)\n19: Brother Minister: The Assassination of Malcolm X (1994)\n20: Bewegte Mann, Der (1994)\n21: Crazy in Alabama (1999)\n22: Zachariah (1971)\n23: And the Ship Sails On (E la nave va) (1984)\n24: Mr. Jones (1993)\n25: Jakob the Liar (1999)\n26: Among Giants (1998)\n27: Dangerous Beauty (1998)\n28: No Mercy (1986)\n29: Small Wonders (1996)\n30: Against All Odds (1984)\n31: I'm the One That I Want (2000)\n32: Steal Big, Steal Little (1995)\n33: H.O.T.S. (1979)\n34: Cement Garden, The (1993)\n35: Stealing Home (1988)\n36: I Love You, Don't Touch Me! (1998)\n37: City of Angels (1998)\n38: Wisdom (1986)\n39: Gossip (2000)\n40: Where the Heart Is (2000)\n41: Long Walk Home, The (1990)\n42: Horseman on the Roof, The (Hussard sur le toit, Le) (1995)\n43: Steel Magnolias (1989)\n44: Eighth Day, The (Le Huiti\ufffdme jour ) (1996)\n45: Patch Adams (1998)\n46: Armageddon (1998)\n47: Best Laid Plans (1999)\n48: Rules of Engagement (2000)\n49: Jupiter's Wife (1994)\n50: Mr. Holland's Opus (1995)\n15/06/28 22:40:26 INFO RemoteActorRefProvider$RemotingTerminator: Shutting down remote daemon.\n15/06/28 22:40:26 INFO RemoteActorRefProvider$RemotingTerminator: Remote daemon shut down; proceeding with flushing remote transports.\n15/06/28 22:40:27 INFO RemoteActorRefProvider$RemotingTerminator: Remoting shut down.\n$", 
            "title": "4-3. \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u5b9f\u884c"
        }, 
        {
            "location": "/mllib/#4-4-1-", 
            "text": "\u305d\u308c\u3067\u306f\u500b\u3005\u306e\u51e6\u7406\u5185\u5bb9\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002      val conf = new SparkConf()\n      .setAppName( MovieLensALS )\n      .set( spark.executor.memory ,  2g )\n    val sc = new SparkContext(conf)  Spark\u306b\u304a\u3051\u308b\u3069\u306e\u3088\u3046\u306a\u51e6\u7406\u3067\u3042\u3063\u3066\u3082\u3001\u6700\u521d\u306bSparkConf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001SparkContext\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u307e\u3059\u3002\nspark-submit\u30b3\u30de\u30f3\u30c9\u3067\u7406\u89e3\u3055\u308c\u308b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u201dMovieLensALS\u201d\u3068\u3001\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u91cf\u201d2g(=2GB)\u201d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u306fWebUI(http:// <spark \u30db\u30b9\u30c8>:4040)\u306b\u3082\u8868\u793a\u3055\u308c\u308b\u305f\u3081\u3001\u5404\u7a2e\u60c5\u5831\u3092\u5224\u5225\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002       val movieLensHomeDir = args(0)\n\n    val ratings = sc.textFile(new File(movieLensHomeDir,  ratings.dat ).toString).map { line = \n      val fields = line.split( :: )\n      // format: (timestamp % 10, Rating(userId, movieId, rating))\n      (fields(3).toLong % 10, Rating(fields(0).toInt, fields(1).toInt, fields(2).toDouble))\n    }  \u6b21\u306b\u201dratings.dat\u201d\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6620\u753b\u306e\u8a55\u4fa1\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u8a55\u4fa1\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308a\u3001\u201d\uff1a\uff1a(\u30b3\u30ed\u30f3 \u30b3\u30ed\u30f3)\u201d\u304c\u533a\u5207\u308a\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u8a55\u4fa1\u30c7\u30fc\u30bf\u306e\u5404\u884c\u3092\u8aad\u307f\u51fa\u3057\u3001\u201d\uff1a\uff1a\u201d\u3067\u533a\u5207\u3063\u305f\u3082\u306e\u3092\u8981\u7d20\u306b\u3082\u3064\u30bf\u30d7\u30eb\u578b\u306b\u5909\u63db\u3057\u3001RDD\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u8981\u7d20\u306e\u4e2d\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306b\u3064\u3044\u3066\u306f\u6700\u5f8c\u306e\uff11\u6587\u5b57(\u3082\u3068\u3082\u3068\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u309210\u3067\u5272\u3063\u305f\u4f59\u308a)\u3092\u30e9\u30f3\u30c0\u30e0\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nRating\u30af\u30e9\u30b9\u306f\u201d\u30e6\u30fc\u30b6ID(Int)\u201d\u3001\u201d\u30e0\u30fc\u30d3\u30fcID(Int)\u201d\u3001\u201d\u8a55\u4fa1(Double)\u201d\u3067\u69cb\u6210\u3055\u308c\u308b\u30bf\u30d7\u30eb\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002      val movies = sc.textFile(new File(movieLensHomeDir,  movies.dat ).toString).map { line = \n      val fields = line.split( :: )\n      // format: (movieId, movieName)\n      (fields(0).toInt, fields(1))\n    }.collect().toMap  \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u540c\u69d8\u306b\u201dmovies.dat\u201d\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6620\u753b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30bf\u30d7\u30eb\u578b\u306b\u5909\u63db\u3057\u305f\u4e0a\u3067RDD\u3092\u751f\u6210\u3057\u3001\u6700\u5f8c\u306btoMap\u95a2\u6570\u3067\u30de\u30c3\u30d7(\u30ad\u30fc, \u5024\u306e\u30bb\u30c3\u30c8)\u306b\u5909\u63db\u3057\u307e\u3059\u3002      val numRatings = ratings.count()\n    val numUsers = ratings.map(_._2.user).distinct().count()\n    val numMovies = ratings.map(_._2.product).distinct().count()\n\n    println( Got   + numRatings +   ratings from  \n      + numUsers +   users on   + numMovies +   movies. )  \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u4f55\u500b\u306e\u8a55\u4fa1\u30c7\u30fc\u30bf\u3001\u6620\u753b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3060\u304b\u3092\u8868\u793a\u3057\u307e\u3059\u3002", 
            "title": "4-4. \u89e3\u8aac(1)-\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u51fa\u3057"
        }, 
        {
            "location": "/mllib/#4-5-2-", 
            "text": "\u3053\u308c\u304b\u3089MLlib\u306e\u95a2\u6570\u3067\u3042\u308bALS\u3092\u4f7f\u3044\u3001RDD[Rating]\u3092\u5165\u529b\u3068\u3059\u308bMatrixFactorizationModel\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002  ALS\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u3001Matrix Factor\u3068Regurarization Constants\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002  \u6700\u9069\u306a\u7d44\u307f\u5408\u308f\u305b\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u3001\u3053\u308c\u304b\u3089\u30c7\u30fc\u30bf\u30923\u3064\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u3057\u306a\u3044\u30b5\u30d6\u30bb\u30c3\u30c8\u306b\u5206\u5272\u3057\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002   training: \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528  test: \u30c6\u30b9\u30c8\u7528  validation: \u8a55\u4fa1\u7528   \u30c7\u30fc\u30bf\u3092\u5206\u5272\u3059\u308b\u305f\u3081\u306b\u3001\u65e5\u4ed8\u306e\u6700\u5f8c\u306e\u4e00\u6841\u3092\u4f7f\u7528\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002  \u307e\u305atraining\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u57fa\u306b\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3001RMSE(Root Mean Squared Error)\u3092\u57fa\u306b\u3057\u305fvalidation\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306btest\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u6700\u9069\u306a\u30e2\u30c7\u30eb\u3092\u6c7a\u5b9a\u3057\u307e\u3057\u305f\u3002\n\u307e\u305ftraining\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3001\u3042\u306a\u305f\u306e\u8a55\u4fa1(training/machine-learning/personalRatings.txt\u3067\u30bb\u30c3\u30c8\u3057\u305f\u3082\u306e)\u3092\u542b\u3081\u3001\u30ea\u30b3\u30e1\u30f3\u30c9\u306e\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\ntraining, validation, test\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u3044\u305a\u308c\u3082\u8907\u6570\u56de\u8aad\u307f\u51fa\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u308c\u305e\u308ccache()\u547d\u4ee4\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u30e1\u30e2\u30ea\u4e0a\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002  Matrix Factorization: \u884c\u5217\u56e0\u5b50\u5206\u89e3\u3002\u6b21\u5143\u524a\u6e1b\u624b\u6cd5\u306e\u4e00\u3064\u3002( \u53c2\u8003 ),( \u53c2\u8003 )      val numPartitions = 4\n    val training = ratings.filter(x =  x._1   6)\n      .values\n      .union(myRatingsRDD)\n      .repartition(numPartitions)\n      .cache()\n    val validation = ratings.filter(x =  x._1  = 6   x._1   8)\n      .values\n      .repartition(numPartitions)\n      .cache()\n    val test = ratings.filter(x =  x._1  = 8).values.cache()\n\n    val numTraining = training.count()\n    val numValidation = validation.count()\n    val numTest = test.count()\n\n    println( Training:   + numTraining +  , validation:   + numValidation +  , test:   + numTest)  \u30c7\u30fc\u30bf\u306e\u5206\u5272\u5f8c\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u500b\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002  Training: 602251, validation: 198919, test: 199049.", 
            "title": "4-5. \u89e3\u8aac(2)-\u30c7\u30fc\u30bf\u306e\u5206\u5272"
        }, 
        {
            "location": "/mllib/#4-6-3-als", 
            "text": "\u3053\u3053\u3067\u306fALS.train\u3092\u7528\u3044\u3066\u3044\u304f\u3064\u304b\u306e\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3001\u8a55\u4fa1\u3057\u305f\u306e\u3061\u306b\u6700\u9069\u306a\u30e2\u30c7\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002  ALS\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u3001rank(\u6f5c\u5728\u56e0\u5b50\u306e\u6570)\u3001lambda(Regularization Constant, \u6b63\u5247\u5316\u5b9a\u6570)\u3001iterations(\u7e70\u308a\u8fd4\u3057\u56de\u6570)\u304c\u3042\u308a\u307e\u3059\u3002\nALS.train\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002      val ranks = List(8, 12)\n    val lambdas = List(1.0, 10.0)\n    val numIters = List(10, 20)\n    var bestModel: Option[MatrixFactorizationModel] = None\n    var bestValidationRmse = Double.MaxValue\n    var bestRank = 0\n    var bestLambda = -1.0\n    var bestNumIter = -1\n    for (rank  - ranks; lambda  - lambdas; numIter  - numIters) {\n      val model = ALS.train(training, rank, numIter, lambda)\n      val validationRmse = computeRmse(model, validation, numValidation)\n      println( RMSE (validation) =   + validationRmse +   for the model trained with rank =   \n        + rank +  , lambda =   + lambda +  , and numIter =   + numIter +  . )\n      if (validationRmse   bestValidationRmse) {\n        bestModel = Some(model)\n        bestValidationRmse = validationRmse\n        bestRank = rank\n        bestLambda = lambda\n        bestNumIter = numIter\n      }\n    }  \u7406\u60f3\u7684\u306b\u306f\u30d9\u30b9\u30c8\u306a\u30e2\u30c7\u30eb\u3092\u63a2\u7d22\u3059\u308b\u305f\u3081\u306b\u306f\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\u7bc4\u56f2\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u51e6\u7406\u6642\u9593\u306e\u5236\u7d04\u304b\u3089\u3001\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30678\u30e2\u30c7\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8a55\u4fa1\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002   rank(2\u500b): 8 \u304a\u3088\u3073 12  lambda(2\u500b): 1.0 \u304a\u3088\u3073 10.0  iteration(2\u500b): 10 \u304a\u3088\u3073 20   \u305d\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308bcomputeRmse\u3092\u4f7f\u3063\u3066\u5404\u30e2\u30c7\u30eb\u305d\u308c\u305e\u308c\u3067validation\uff08\u30b5\u30d6\u30bb\u30c3\u30c8\uff09\u306eRMSE\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\nvalidation\u306eRMSE\u304c\u4e00\u756a\u5c0f\u3055\u304b\u3063\u305f\u30e2\u30c7\u30eb\u304c\u9078\u3070\u308c\u3001\u305d\u306e\u30e2\u30c7\u30eb\u306etest\u30bb\u30c3\u30c8\u306eRMSE\u304c\u6700\u7d42\u8a08\u91cf\u3068\u3057\u3066\u4f7f\u308f\u308c\u307e\u3059\u3002  Spark\u306f\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u306e\u306b1\uff5e2\u5206\u639b\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u51fa\u6765\u307e\u3057\u305f\u3089\u30b9\u30af\u30ea\u30fc\u30f3\u4e0a\u306b\u4ee5\u4e0b\u304c\u898b\u3048\u308b\u306f\u305a\u3067\u3059\u3002\n\u5b9f\u884c\u3054\u3068\u306b\u7b54\u3048\u81ea\u4f53\u304c\u591a\u5c11\u7570\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002  The best model was trained with rank 8 and lambda 10.0, and numIter = 10, and its RMSE on test is 0.8808492431998702.", 
            "title": "4-6. \u89e3\u8aac(3)-ALS\u3092\u7528\u3044\u305f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0"
        }, 
        {
            "location": "/mllib/#4-7", 
            "text": "\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u6700\u5f8c\u306e\u90e8\u5206\u3068\u3057\u3066\u3001\u30e2\u30c7\u30eb\u304c\u3042\u306a\u305f\u306b\u3069\u3093\u306a\u6620\u753b\u3092\u304a\u52e7\u3081\u3059\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002  \u3059\u3079\u3066\u306e\u4e88\u60f3\u304c\u51fa\u307e\u3057\u305f\u3089\u3001\u304a\u52e7\u3081Top50\u3092\u30ea\u30b9\u30c8\u3055\u305b\u3066\u3042\u306a\u305f\u306b\u5408\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u304b\u3081\u3066\u4e0b\u3055\u3044\u3002  val myRatedMovieIds = myRatings.map(_.product).toSet\n    val candidates = sc.parallelize(movies.keys.filter(!myRatedMovieIds.contains(_)).toSeq)\n    val recommendations = bestModel.get\n      .predict(candidates.map((0, _)))\n      .collect()\n      .sortBy(- _.rating)\n      .take(50)\n\n    var i = 1\n    println( Movies recommended for you: )\n    recommendations.foreach { r = \n      println( %2d .format(i) +  :   + movies(r.product))\n      i += 1\n    }  \u4ee5\u4e0b\u306e\u51fa\u529b\u3068\u4f3c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002  Movies recommended for you:\n 1: Silence of the Lambs, The (1991)\n 2: Saving Private Ryan (1998)\n 3: Godfather, The (1972)\n 4: Star Wars: Episode IV - A New Hope (1977)\n 5: Braveheart (1995)\n 6: Schindler's List (1993)\n 7: Shawshank Redemption, The (1994)\n 8: Star Wars: Episode V - The Empire Strikes Back (1980)\n 9: Pulp Fiction (1994)\n10: Alien (1979)\n...  \u7d50\u679c\u304c\u9055\u3046\u3053\u3068\u304c\u3042\u308a\u5f97\u308b\u3053\u3068\u3068\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u53e4\u3044\u306e\u3067\u3053\u305310\u5e74\u306e\u6620\u753b\u306f\u51fa\u3066\u3053\u306a\u3044\u3053\u3068\u3092\u7406\u89e3\u3057\u3066\u304f\u3060\u3055\u3044\u3002", 
            "title": "4-7. \u3042\u306a\u305f\u306b\u304a\u52e7\u3081\u3059\u308b\u6620\u753b"
        }, 
        {
            "location": "/mllib/#4-8", 
            "text": "4-8-(1). \u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3068\u6bd4\u8f03\u3059\u308b  ALS\u306f\u610f\u5473\u306e\u3042\u308b\u30e2\u30c7\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u304b\uff1f\n\u3053\u308c\u3092\u78ba\u304b\u3081\u308b\u306b\u8a55\u4fa1\u7d50\u679c\u3092\u5e73\u5747\u7684\u306a\u8a55\u4fa1\u3057\u304b\u51fa\u529b\u3057\u306a\u3044\u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u30e2\u30c7\u30eb\u3068\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306eRMSE\u3092\u8a08\u7b97\u3059\u308b\u306e\u306f\u8907\u96d1\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002  val meanRating = training.union(validation).map(_.rating).mean\n    val baselineRmse = \n      math.sqrt(test.map(x =  (meanRating - x.rating) * (meanRating - x.rating)).mean)\n    val improvement = (baselineRmse - testRmse) / baselineRmse * 100\n    println( The best model improves the baseline by   +  %1.2f .format(improvement) +  %. )  \u51fa\u529b\u306f\u4ee5\u4e0b\u3068\u4f3c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002  The best model improves the baseline by 20.96%.  \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306f\u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3088\u308a\u6210\u679c\u3092\u51fa\u3059\u3053\u3068\u306f\u660e\u3089\u304b\u306a\u3088\u3046\u3067\u3059\u3002\n\u3057\u304b\u3057\u9593\u9055\u3063\u305f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30ca\u30a4\u30fc\u30d6\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u3088\u308a\u60aa\u3044\u7d50\u679c\u3092\u51fa\u3059\u30e2\u30c7\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u306e\u3067\u6b63\u3057\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u3092\u9078\u3076\u3053\u3068\u304c\u3053\u306e\u30bf\u30b9\u30af\u3067\u306f\u304b\u306a\u308a\u91cd\u8981\u3067\u3059\u3002  4-8-(2). \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u56e0\u5b50\u3092\u52a0\u3048\u308b  \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u306b\u3042\u306a\u305f\u306e\u8a55\u4fa1\u3092\u4ed8\u3051\u52a0\u3048\u307e\u3059\u3002\u304a\u52e7\u3081\u3092\u51fa\u3059\u3088\u308a\u826f\u3044\u65b9\u6cd5\u306f\u307e\u305aMatrix Factorization\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3001\u30e2\u30c7\u30eb\u306b\u3042\u306a\u305f\u306e\u8a55\u4fa1\u3092\u5099\u3048\u307e\u3059\u3002\u3082\u3057\u3053\u306e\u65b9\u6cd5\u306b\u8208\u5473\u304c\u6e67\u304d\u307e\u3057\u305f\u3089MatrixFactorizationModel\u306e\u5b9f\u884c\u65b9\u6cd5\u3092\u307f\u3066\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u306e\u305f\u3081\u306b\u30e2\u30c7\u30eb\u306b\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002  \u3082\u3057\u3042\u306a\u305f\u3078\u306e\u304a\u52e7\u3081\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u5148\u306b\u898b\u305f\u3044\u306a\u3089\u3070\u3001\u7b54\u3048\u306fmachine-learning/scala/solution\u306b\u8f09\u3063\u3066\u3044\u307e\u3059\u3002   \n[8] ALS: \u4ea4\u4e92\u6700\u5c0f\u4e8c\u4e57\u6cd5  \u53c2\u71671   \u53c2\u71672", 
            "title": "4-8. \u30a8\u30af\u30b5\u30b5\u30a4\u30ba"
        }, 
        {
            "location": "/graphx/", 
            "text": "5. GraphX\n\n\nGraphX\u3068\u306f\uff08\u30a6\u30a7\u30d6\u30b0\u30e9\u30d5\u3084\u30bd\u30fc\u30b7\u30e3\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306e\uff09\u30b0\u30e9\u30d5\u4f5c\u308a\u3068\uff08\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u3084\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u306e\uff09\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u306e\u305f\u3081\u306e\u65b0\u3057\u3044API\u3067\u3059\u3002\nGraphX\u306fSpark\u306e\u57fa\u672c\u62bd\u8c61\u6982\u5ff5\u3067\u3042\u308bRDD\uff08\u8010\u4e45\u7684\u5206\u6563\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\uff09\u3092\u62e1\u5f35\u3057\u305f\u8010\u4e45\u7684\u5206\u6563\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306e\u3053\u3068\u3067\u3059\u3002\n\u8010\u4e45\u7684\u5206\u6563\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306f\u8fba\u3068\u9802\u70b9\u306b\u7279\u6027\u304c\u4ed8\u3044\u305f\u6709\u5411\u591a\u91cd\u30b0\u30e9\u30d5\u3067\u3059\u3002\nGraphX\u306f\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u3068\u3057\u3066\u91cd\u8981\u306a\u64cd\u4f5c\u3067\u3042\u308b\n\u30b5\u30d6\u30b0\u30e9\u30d5\u4f5c\u308a\u3001\u9802\u70b9\u4f75\u5408\u3001\u8fd1\u63a5\u96c6\u7d04\u306a\u3069\n\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u306b\u3082\u6700\u9069\u5316\u3055\u308c\u305f\nPregelAPI\n\u306b\u76f8\u4f3c\u3057\u305f\u7269\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3001\u5897\u3048\u7d9a\u3051\u3066\u3044\u308b\n\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u3084\u30b0\u30e9\u30d5\u5206\u6790\u3092\u7c21\u6f54\u306b\u3059\u308b\n\u30d3\u30eb\u30c0\u30fc\n\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\n\n\u3053\u306e\u7ae0\u3067\u306f\u3001GraphX\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30ad\u307a\u30c7\u30a3\u30a2\u306e\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092Spark\u5185\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002GraphX\u306eAPI\u306f\u73fe\u72b6\u3067\u306fScala\u3067\u3057\u304b\u52d5\u304d\u307e\u305b\u3093\u304c\u3001\u5c06\u6765\u7684\u306bJava\u3068Python\u306e\u8a00\u8a9e\u30b5\u30dd\u30fc\u30c8\u3082\u63d0\u4f9b\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\n5-1. GraphX\u306e\u30b0\u30e9\u30d5\u4e26\u5217\u51e6\u7406\u306e\u80cc\u666f\n\n\n\u3082\u3057\u4eca\u3059\u3050\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u3092\u5b9f\u884c\u3057\u305f\u3044\u65b9\u305f\u3061\u306f\u3053\u306e\u90e8\u5206\u306f\u98db\u3070\u3057\u3066\u3082\u3089\u3063\u3066\u7d50\u69cb\u3067\u3059\u3002\n\n\n\u30bd\u30fc\u30b7\u30e3\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u8a00\u8a9e\u30e2\u30c7\u30ea\u30f3\u30b0\u306a\u3069\u304b\u3089\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u306e\u91cd\u8981\u6027\u3068\u898f\u6a21\u304c\u5e83\u304c\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u9670\u3067\nGiraph\n\u3084\nGraphLab\n\u306a\u3069\u306e \u201d\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0(Graph-Parallel Systems)\u201d \u306e\u958b\u767a\u304c\u9032\u3093\u3067\u3044\u307e\u3059(\u305d\u308c\u306b\u5bfe\u3057\u3066Hadoop\u3084Spark\u306f \u201c\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0(Data-Parallel Systems)\u201d\u3068\u547c\u3073\u307e\u3059)\u3002\n\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306f\u8a08\u7b97\u51e6\u7406\u3059\u308b\u578b\u3092\u5236\u9650\u3057\u305f\u308a\u65b0\u3057\u3044\u65b9\u6cd5\u3067\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3057\u305f\u308a\u5206\u6563\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u3001\u5f93\u6765\u306e\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u52b9\u7387\u7684\u306a\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u96e3\u3057\u304b\u3063\u305f\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u52b9\u7387\u7684\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\n\u3053\u308c\u3089\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u304c\u884c\u3046\u5236\u7d04\u306f\u3001\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u660e\u78ba\u306b\u5411\u4e0a\u3055\u305b\u307e\u3059\u304c\u3001\u5178\u578b\u7684\u306a\u30b0\u30e9\u30d5\u5206\u6790\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u8868\u73fe\u3059\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\u52a0\u3048\u3066\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306f\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u306a\u3069\u306e\u53cd\u5fa9\u7684\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6700\u9069\u5316\u3055\u308c\u308b\u4e00\u65b9\u3067\u3001\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u3084\u69cb\u9020\u5909\u5f62\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u30bf\u30b9\u30af\u3084\u3001\u8907\u6570\u306e\u30b0\u30e9\u30d5\u306b\u307e\u305f\u304c\u308b\u51e6\u7406\u306b\u306f\u9069\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n\u3053\u308c\u3089\u306e\u4ed5\u7d44\u307f\u306f\u7d50\u679c\u7684\u306b\u30b0\u30e9\u30d5\u30c8\u30dd\u30ed\u30b8\u5916\u3078\u306e\u30c7\u30fc\u30bf\u5909\u63db\u3092\u5fc5\u8981\u3068\u3057\u3001\u305d\u306e\u5909\u63db\u5148\u306fMapReduce\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u4e26\u5217\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3068\u306a\u308a\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306e\u6271\u3044\u65b9\u306f\u8ab2\u984c\u6b21\u7b2c\u3067\u3001\u5206\u6790\u4e2d\u306e\u672a\u6574\u7406\u306e\u30c7\u30fc\u30bf\u306f\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u3084\u30b0\u30e9\u30d5\u306e\u898b\u65b9\u304c\u5fc5\u8981\u3068\u3055\u308c\u3001\u5404\u30c6\u30fc\u30d6\u30eb\u3084\u30b0\u30e9\u30d5\u306e\u7279\u6027\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306b\u52b9\u7387\u7684\u3067\u7c21\u6f54\u7684\u306a\u30c7\u30fc\u30bf\u5909\u63db\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\n\n\n\u52a0\u3048\u3066\u305d\u308c\u305e\u308c\u306e\u6bb5\u968e\u3067\u30c7\u30fc\u30bf\u30a2\u30ca\u30ea\u30b9\u30c8\u306b\u3068\u3063\u3066\u306f\u3001\u30b0\u30e9\u30d5\u578b\u306e\u8868\u73fe\u3068\u30c6\u30fc\u30d6\u30eb\u578b\u306e\u8868\u73fe\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u52b9\u7387\u7684\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u65e2\u5b58\u306e\u201d\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u3084\u201d\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u308b\u5206\u6790\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u3001\u3053\u306e\u5206\u6790\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u975e\u5e38\u306b\u91cd\u3044\u8a08\u7b97\u3084\u3001\u305d\u308c\u305e\u308c\u306b\u304a\u3044\u3066\u7570\u306a\u308b\u8907\u96d1\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u3092\u30c7\u30fc\u30bf\u30a2\u30ca\u30ea\u30b9\u30c8\u306b\u5f37\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n\n\nGraphX\u306f\u3053\u308c\u3089\u65e2\u5b58\u306e\u201d\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u3084\u201d\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u3092\u7d71\u5408\u3057\u3001\u5358\u4e00\u306eAPI\u30bb\u30c3\u30c8\u306b\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\nGraphX API\u3088\u3063\u3066\u3001\u30e6\u30fc\u30b6\u306fRDD\u4e0a\u306e\u30c7\u30fc\u30bf\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u3053\u3068\u306a\u304f\u3001\u30b0\u30e9\u30d5\u5f62\u5f0f\u3068\u3057\u3066\u64cd\u4f5c\u3059\u308b\u304b\u30c6\u30fc\u30d6\u30eb\u5f62\u5f0f\u3068\u3057\u3066\u64cd\u4f5c\u3059\u308b\u304b\u3092\u81ea\u7531\u306b\u9078\u629e\u3057\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n5-2. GraphX API\u306e\u7d39\u4ecb\n\n\n\u307e\u305a\u306f\u3001GraphX\u306e\u69cb\u9020\u304b\u3089\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u306f\u3058\u3081\u306bSpark\u306e\u30b7\u30a7\u30eb\u3092\u958b\u304d\u307e\u3059\u3002\n\n\ntraining/ $ spark/bin/spark-shell\nscala\n\n\n\n\n\n\u6b21\u306b\u3001GraphX\u3068RDD\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\nscala\n import org.apache.spark.graphx._\nimport org.apache.spark.graphx._\nscala\n import org.apache.spark.rdd.RDD\nimport org.apache.spark.rdd.RDD\n\n\n\n\n\n\n5-2-(1). \u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\uff08\u7279\u6027\u30b0\u30e9\u30d5\uff09\u306e\u4f5c\u6210\n\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\n\u306f\u5404\u8fba\u3068\u9802\u70b9\u306b\u30e6\u30fc\u30b6\u304c\u5b9a\u7fa9\u3057\u305f\u7279\u6027\u3092\u6301\u3064\u6709\u5411\u591a\u91cd\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\u6709\u5411\u30b0\u30e9\u30d5\u306e\u5834\u5408\u306f\u8fba\u306b\u65b9\u5411\u304c\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u63a5\u7d9a\u5143\uff08source)\u3068\u63a5\u7d9a\u5148(destination)\u3067\u7279\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u591a\u91cd\u30b0\u30e9\u30d5\u3068\u306f\u540c\u3058\u63a5\u7d9a\u5143\u304b\u3089\u63a5\u7d9a\u5148\u306b\u591a\u91cd\u306e\u4e26\u5217\u306a\u8fba\u304c\u3042\u308b\u53ef\u80fd\u6027\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u5404\u9802\u70b9\u306fVertexId\u3068\u3044\u304664\u30d3\u30c3\u30c8\u6574\u6570(64-bit long)\u306eID\u3067\u7279\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306e\u9802\u70b9\u3068\u8fba\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u547c\u3073\u3001Scala\u304bJava\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u524d\u534a\u3092\u901a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b7\u30e3\u30eb\u53cb\u4eba\u95a2\u4fc2\u3092\u8868\u3059\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u5b66\u3076\u73a9\u5177\u306e\u3088\u3046\u3067\u3059\u304c\u3001\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u306e\u30e2\u30c7\u30eb\u3068GraphX\u3092\u5b66\u3076\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u306b\u304a\u3051\u308b\u9802\u70b9\u306f\u30e6\u30fc\u30b6\u540d\u3068\u5e74\u9f62\u304c\u542b\u307e\u308c\u3001\u8fba\u306f\u30d9\u30af\u30c8\u30eb\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n\u307e\u305a\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u9802\u70b9\u3068\u8fba\u306e\u914d\u5217\u304b\u3089\u4f5c\u6210\u3057\u307e\u3059\u3002\u5f8c\u306b\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3092\u30c7\u30e2\u3057\u307e\u3059\u3002\n\n\n\u307e\u305a\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092spark-shell\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\nscala\n val vertexArray = Array( (1L, (\nAlice\n, 28)), (2L, (\nBob\n, 27)), (3L, (\nCharlie\n, 65)), (4L, (\nDavid\n, 42)), (5L, (\nEd\n, 55)), (6L, (\nFran\n, 50)) )\nvertexArray: Array[(Long, (String, Int))] = Array((1,(Alice,28)), (2,(Bob,27)), (3,(Charlie,65)), (4,(David,42)), (5,(Ed,55)), (6,(Fran,50)))\n\nscala\n val edgeArray = Array( Edge(2L, 1L, 7), Edge(2L, 4L, 2), Edge(3L, 2L, 4), Edge(3L, 6L, 3), Edge(4L, 1L, 1), Edge(5L, 2L, 2), Edge(5L, 3L, 8), Edge(5L, 6L, 3) )\nedgeArray: Array[org.apache.spark.graphx.Edge[Int]] = Array(Edge(2,1,7), Edge(2,4,2), Edge(3,2,4), Edge(3,6,3), Edge(4,1,1), Edge(5,2,2), Edge(5,3,8), Edge(5,6,3))\n\n\n\n\n\u8fba\uff08Edge)\u30af\u30e9\u30b9\u306f\u63a5\u7d9a\u5143\u3068\u63a5\u7d9a\u5148\u306e\u9802\u70b9\uff08Vertex)\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3061\u3001\u3055\u3089\u306b\u3082\u3046\u4e00\u3064\u6574\u6570\u306e\u8981\u7d20\u3092\u6301\u3061\u307e\u3059\u3002\u9802\u70b9\u306e\u914d\u5217\u30af\u30e9\u30b9\u306fId\u3001\u540d\u524d\u3001\u5e74\u9f62\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\n\nSpark\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u7fd2\u3063\u305fsc.parallelize\u3092\u4f7f\u3063\u3066vertexArray\u304a\u3088\u3073edgeArray\u914d\u5217\u5909\u6570\u3092RDD\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\nscala\n val vertexRDD: RDD[(Long, (String, Int))] = sc.parallelize(vertexArray)\nvertexRDD: org.apache.spark.rdd.RDD[(Long, (String, Int))] = ParallelCollectionRDD[0] at parallelize at \nconsole\n:27\n\nscala\n val edgeRDD: RDD[Edge[Int]] = sc.parallelize(edgeArray)\nedgeRDD: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Int]] = ParallelCollectionRDD[1] at parallelize at \nconsole\n:27\n\n\n\n\n\u3053\u308c\u3067\u3001\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306f\u9802\u70b9RDD\u3068\u8fbaRDD\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30b0\u30e9\u30d5[V,\u3000E]\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u9802\u70b9RDD\u306e\u5f62\u306fRDD[(VertexId, V)]\u3067\u8fbaRDD\u306e\u5f62\u306fRDD[Edge[E]]\u3067\u3059\u3002\n\n\nscala\n val graph: Graph[(String, Int), Int] = Graph(vertexRDD, edgeRDD)\ngraph: org.apache.spark.graphx.Graph[(String, Int),Int] = org.apache.spark.graphx.impl.GraphImpl@431ed0d5\n\n\n\n\n\u3053\u306e\u30bd\u30fc\u30b7\u30e3\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30b0\u30e9\u30d5\u5185\u306b\u3042\u308b\u9802\u70b9\u306e\u7279\u5fb4\u306f\u30bf\u30d7\u30eb\u578b\u306e\u5909\u6570(\u540d\u524d(String\u578b), \u5e74\u9f62(Int\u578b))\u3067\u3001\u8fba\u306e\u7279\u5fb4\u306f\u201d\u3044\u3044\u306d\uff01\u201d(Int\u578b)\u3067\u3059\u3002\n\n\nRDD\u306e\u307b\u304b\u306b\u751f\u30d5\u30a1\u30a4\u30eb\u3001RDD\u3001\u4eba\u5de5\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304b\u3089\u3082\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306fRDD\u306e\u3088\u3046\u306b\u4e0d\u5909\u3067\u5206\u6563\u3055\u308c\u6b20\u9665\u4fdd\u969c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b0\u30e9\u30d5\u306e\u578b\u3084\u5024\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u304d\u306f\u5143\u306e\u30b0\u30e9\u30d5\u306b\u6b32\u3057\u3044\u5909\u5316\u3092\u4ed8\u3051\u52a0\u3048\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5f71\u97ff\u306a\u3057\u306e\u69cb\u9020\u3001\u7279\u5fb4\u3001\u6307\u6570\u306b\u76f8\u5f53\u3059\u308b\u90e8\u5206\u306f\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u306b\u3082\u5f15\u304d\u7d99\u304c\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u5404\u30b0\u30e9\u30d5\u306e\u5206\u5272\u308a\u306fRDD\u306e\u3088\u3046\u306b\u6545\u969c\u6642\u306b\u306f\u9055\u3046\u30de\u30b7\u30fc\u30f3\u3067\u518d\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n\n\n5-2-(2). \u30b0\u30e9\u30d5\u3092\u898b\u308b\n\n\n\u6b86\u3069\u306e\u8981\u4ef6\u3067\u306f\u8a08\u7b97\u51e6\u7406\u306e\u7d50\u679c\u3092\u96c6\u5408\u3084\u30bb\u30fc\u30d6\u3059\u308b\u969b\u306b\u9802\u70b9\u3068\u8fba\u306eRDD\u5185\u89a7\u3092\u5c55\u958b\u3059\u308b\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u30b0\u30e9\u30d5\u306e\u30af\u30e9\u30b9\u306f\u9802\u70b9\u3068\u8fba\u306e\u7279\u6027\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u70ba\u306bgraph.vertices\u3068graph.edges\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\u3053\u306e\u30e1\u30f3\u30d0\u30fc\u306fRDD[(VertexId, V)]\u3068RDD[Edge[E]]\u306e\u62e1\u5f35\u578b\u3067\u3042\u308a\u3001GraphX\u5185\u90e8\u306e\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u63cf\u5199\u3092\u5229\u7528\u3057\u3066\u6700\u9069\u5316\u3055\u308c\u305f\u63cf\u5199\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\ngraph.vertices\u3092\u4f7f\u3063\u306630\u6b73\u4ee5\u4e0a\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u898b\u3066\u307f\u308b\u3002\uff08\u547d\u4ee4\u306e\u4ed5\u65b9\u306f2\u901a\u308a\u3042\u308a\u3001\u51fa\u529b\u306f\u4ee5\u4e0b\u3067\u3059\uff09\n\n\nscala\n graph.vertices.filter { case (id, (name, age)) =\n age \n 30 }.collect.foreach { case (id, (name, age)) =\n println(s\n$name is $age\n) }\nDavid is 42\nFran is 50\nCharlie is 65\nEd is 55\n\n//case\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\nscala\n graph.vertices.filter(v =\n v._2._2 \n 30).collect.foreach(v =\n println(s\n${v._2._1} is ${v._2._2}\n) )\n//\u4e0a\u3068\u540c\u3058\n\n\n\n\n\u8fba\u3068\u9802\u70b9\u306e\u7279\u6027\u306b\u52a0\u3048\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306f\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\uff08\u4e09\u3064\u5b50\uff09\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u7279\u6027\u306e\u5185\u89a7\u3082\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u5185\u89a7\u306f\u9802\u70b9\u3068\u8fba\u306e\u7279\u6027\u3092\u7d71\u5408\u3055\u305bEdgeTriplet\u30af\u30e9\u30b9\u306e\u5b9f\u73fe\u5024\u3092\u542b\u3080RDD[EdgeTriplet[VD, ED]]\u3092\u4e0e\u3048\u307e\u3059\u3002\nEdgeTriplet\u30af\u30e9\u30b9\u306fEdge\u30af\u30e9\u30b9\u3092\u63a5\u7d9a\u5143\uff08srcAttr\uff09\u3068\u63a5\u7d9a\u5148\uff08dstAttr\uff09\u3092\u52a0\u3048\u3066\u62e1\u5f35\u3057\u305f\u5f62\u3067\u3059\u3002\n\u4ee5\u4e0b\u304c\u7d75\u3067\u8868\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n\n\n\ngraph.triplets\u3092\u4f7f\u3063\u3066\u8ab0\u304c\u3069\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3044\u3044\u306d\uff01\u3092\u4e0e\u3048\u305f\u304b\u3092\u898b\u3066\u307f\u308b\u3002\uff082\u901a\u308a\u3042\u308b\uff09\n\n\nscala\n for (triplet \n- graph.triplets.collect) { println(s\n${triplet.srcAttr._1} likes ${triplet.dstAttr._1}\n) }\nBob likes Alice\nBob likes David\nCharlie likes Bob\nCharlie likes Fran\nDavid likes Alice\nEd likes Bob\nEd likes Charlie\nEd likes Fran\n\n//for\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\nscala\n graph.triplets.collect.foreach(triplet =\n println(s\n${triplet.srcAttr._1} likes ${triplet.dstAttr._1}\n) )\u3000\n//\u4e0a\u3068\u540c\u3058\n\n\n\n\n\u3044\u3044\u306d\uff01\u30925\u56de\u4ee5\u4e0a\u4e0e\u3048\u305f\u30e6\u30fc\u30b6\u30fc\u3092\u898b\u3066\u307f\u308b\u3002\n\n\nscala\n graph.triplets.filter(t =\n t.attr \n 5).collect.foreach(triplet =\n println(s\n${triplet.srcAttr._1} loves ${triplet.dstAttr._1}\n) )\nBob loves Alice\nEd loves Charlie\n\n\n\n\n5-3. \u30b0\u30e9\u30d5\u30aa\u30da\u30ec\u30fc\u30bf\uff08\u64cd\u4f5c\uff09\n\n\n\u4e00\u822c\u306eRDD\u306f\u57fa\u790e\u64cd\u4f5c\u3068\u3057\u3066count, map, filter, reduceByKey\u306a\u3069\u304c\u3042\u308b\u3088\u3046\u306b\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3082\u57fa\u790e\u64cd\u4f5c\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306fGraph\u3000API\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u4e00\u90e8\u306e\u95a2\u6570\u306e\u4f8b\u3067\u3059\u3002\n\n\n/** \u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306e\u6a5f\u80fd\u6027\u306e\u307e\u3068\u3081*/\nclass Graph[VD, ED] {\n  // \u30b0\u30e9\u30d5\u306e\u60c5\u5831\n  val numEdges: Long\n  val numVertices: Long\n  val inDegrees: VertexRDD[Int]\n  val outDegrees: VertexRDD[Int]\n  val degrees: VertexRDD[Int]\n\n  // \u30b0\u30e9\u30d5\u3092\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5185\u89a7\n  val vertices: VertexRDD[VD]\n  val edges: EdgeRDD[ED]\n  val triplets: RDD[EdgeTriplet[VD, ED]]\n\n  // \u5206\u5272\u308a\u904e\u7a0b\u3092\u5909\u3048\u308b\n  def partitionBy(partitionStrategy: PartitionStrategy): Graph[VD, ED]\n\n  // \u9802\u70b9\u3068\u8fba\u306e\u7279\u5fb4\u3092\u5909\u63db\u3059\u308b\n  def mapVertices[VD2](map: (VertexID, VD) =\n VD2): Graph[VD2, ED]\n  def mapEdges[ED2](map: Edge[ED] =\n ED2): Graph[VD, ED2]\n  def mapEdges[ED2](map: (PartitionID, Iterator[Edge[ED]]) =\n Iterator[ED2]): Graph[VD, ED2]\n  def mapTriplets[ED2](map: EdgeTriplet[VD, ED] =\n ED2): Graph[VD, ED2]\n\n  // \u30b0\u30e9\u30d5\u69cb\u9020\u3092\u5909\u66f4\u3059\u308b\n  def reverse: Graph[VD, ED]\n  def subgraph(\n      epred: EdgeTriplet[VD,ED] =\n Boolean = (x =\n true),\n      vpred: (VertexID, VD) =\n Boolean = ((v, d) =\n true))\n    : Graph[VD, ED]\n  def groupEdges(merge: (ED, ED) =\n ED): Graph[VD, ED]\n\n  // RDD\u3092\u30b0\u30e9\u30d5\u3068\u7d71\u5408\u3059\u308b\n  def joinVertices[U](table: RDD[(VertexID, U)])(mapFunc: (VertexID, VD, U) =\n VD): Graph[VD, ED]\n  def outerJoinVertices[U, VD2](other: RDD[(VertexID, U)])\n      (mapFunc: (VertexID, VD, Option[U]) =\n VD2)\n    : Graph[VD2, ED]\n\n  // \u96a3\u306e\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306e\u60c5\u5831\u3092\u96c6\u5408\u3059\u308b\n  def collectNeighbors(edgeDirection: EdgeDirection): VertexRDD[Array[(VertexID, VD)]]\n  def mapReduceTriplets[A: ClassTag](\n      mapFunc: EdgeTriplet[VD, ED] =\n Iterator[(VertexID, A)],\n      reduceFunc: (A, A) =\n A)\n    : VertexRDD[A]\n\n  //\u3000\u53cd\u5fa9\u7684\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\n  def pregel[A](initialMsg: A, maxIterations: Int, activeDirection: EdgeDirection)(\n      vprog: (VertexID, VD, A) =\n VD,\n      sendMsg: EdgeTriplet[VD, ED] =\n Iterator[(VertexID,A)],\n      mergeMsg: (A, A) =\n A)\n    : Graph[VD, ED]\n\n  // \u57fa\u672c\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n  def pageRank(tol: Double, resetProb: Double = 0.15): Graph[Double, Double]\n  def connectedComponents(): Graph[VertexID, ED]\n  def triangleCount(): Graph[Int, ED]\n  def stronglyConnectedComponents(numIter: Int): Graph[VertexID, ED]\n}\n\n\n\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306fGraph\u3068GraphOps\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001Scala\u306e\u6697\u9ed9\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066GraphOps\u306e\u64cd\u4f5c\u306f\u81ea\u52d5\u7684\u306bGraph\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\n\u4f8b\u3068\u3057\u3066\u3001\u5404\u9802\u70b9\u306b\u5165\u3063\u3066\u3044\u304f\u308b\u8fba\uff08\u5165\u6b21\u6570\uff09\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a08\u7b97\u3057\u307e\u3057\u3087\u3046\u3002\n\u5b9f\u884c\u4f8b\u3067\u305f\u3068\u3048\u308b\u3068\u8ab0\u304c\u8ab0\u306b\u3044\u3044\u306d\uff01\u3092\u8cb0\u3063\u305f\u304b\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nval inDegrees: VertexRDD[Int] = graph.inDegrees\n\n\n\u4e0a\u306e\u4f8b\u3067\u306fgraph.inDegrees\u30aa\u30da\u30ec\u30fc\u30bf\u304cVertexRDD[Int]\u3092\u8fd4\u3057\u307e\u3059\uff08\u3053\u308c\u306fRDD[(VertexId, Int)]\u3068\u3057\u3066\u52d5\u304f\u3053\u3068\u3092\u899a\u3048\u3066\u304f\u3060\u3055\u3044\uff09\u3002\n\u3053\u3053\u3067\u5165\u6b21\u6570\u3068\u51fa\u6b21\u6570\u3092\u5404\u9802\u70b9\u306b\u9802\u70b9\u7279\u5fb4\u3068\u3057\u3066\u5408\u4f53\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u4f5c\u696d\u306f\u4e00\u822c\u7684\u306a\u30b0\u30e9\u30d5\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\u3067\u4f7f\u3044\u307e\u3059\u3002\n\n\n\u306f\u3058\u3081\u306b\u3001\u52a0\u3048\u308b\u7279\u6027\uff08inDeg\u3068outDeg)\u3092\u6574\u5217\u3059\u308b\u305f\u3081\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u3053\u306e\u30e6\u30fc\u30b6\u7279\u5fb4\u3092\u4f7f\u3063\u3066\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\n\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u30e6\u30fc\u30b6\u7279\u5fb4\u3092\u3082\u3063\u3068\u660e\u78ba\u306b\u5f62\u6210\u3057\u307e\u3059\u3002\nscala\n case class User(name: String, age: Int, inDeg: Int, outDeg: Int)\ndefined class User\n\n\u30e6\u30fc\u30b6\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nscala\n val initialUserGraph: Graph[User, Int] = graph.mapVertices{ case(id, (name, age)) =\n User(name, age, 0, 0) }\ninitialUserGraph: org.apache.spark.graphx.Graph[User,Int] = org.apache.spark.graphx.impl.GraphImpl@2fb38a1a\n\n\n\n\n\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3092\u4f5c\u3063\u305f\u969b\u306f\u5404\u9802\u70b9\u306e\u5165\u6b21\u6570\u3068\u51fa\u6b21\u6570\u306e\u521d\u671f\u8a2d\u5b9a\u30920\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u3053\u306e\u60c5\u5831\u3092\u30b0\u30e9\u30d5\u306b\u8aad\u307f\u8fbc\u307f\u65b0\u3057\u3044\u9802\u70b9\u7279\u6027\u3092\u69cb\u7bc9\u3057\u307e\u3057\u305f\u3002\n\n\n\u5165\u6b21\u6570\u3068\u51fa\u6b21\u6570\u306e\u60c5\u5831\u3092\u57cb\u3081\u8fbc\u307f\u307e\u3059\u3002\nscala\n val userGraph = initialUserGraph.outerJoinVertices(initialUserGraph.inDegrees) { case (id, u, inDegOpt) =\n User(u.name, u.age, inDegOpt.getOrElse(0), u.outDeg) }.outerJoinVertices(initialUserGraph.outDegrees) { case (id, u, outDegOpt) =\n User(u.name, u.age, u.inDeg, outDegOpt.getOrElse(0)) }\nuserGraph: org.apache.spark.graphx.Graph[User,Int] = org.apache.spark.graphx.impl.GraphImpl@1a9fea8\n\n\n\n\n\u3053\u3053\u3067\u306fouterJoinVertices\u3068\u3044\u3046\u30b0\u30e9\u30d5\u306e\u30e1\u30bd\u30c3\u30c9\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\uff08\u6df7\u4e71\u3057\u305d\u3046\u306a\uff09\u30b7\u30b0\u30cd\u30c1\u30e3\u30bf\u30a4\u30d7\u3067\u3059\u3002\n\n\ndef outerJoinVertices[U, VD2](other: RDD[(VertexID, U)])\n      (mapFunc: (VertexID, VD, Option[U]) =\n VD2)\n    : Graph[VD2, ED]\n\n\n\n\n\u304a\u6c17\u3065\u304d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304couterJoinVertices\u306f\u4e8c\u3064\u306e\u5f15\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e00\u3064\u76ee\u304c\u9802\u70b9\u5024\u306eRDD\u3067\u3001\u4e8c\u3064\u76ee\u306e\u30ea\u30b9\u30c8\u5f15\u6570\u304cRDD\u306eid, attribute, Optional\u3067\u5408\u308f\u305b\u308b\u5024\u304b\u3089\u306e\u95a2\u6570\u3092\u53d7\u3051\u3066\u65b0\u3057\u3044\u9802\u70b9\u5024\u306b\u6d41\u3057\u307e\u3059\u3002\n\u5165\u529bRDD\u304c\u591a\u5c11\u30b0\u30e9\u30d5\u306e\u9802\u70b9\u306e\u5024\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u306fOption\u5f15\u6570\u304c\u7a7a\u3067optOutDeg.getOrElse(0)\u304c0\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\n\u65b0\u3057\u304f\u3067\u304d\u305fuserGraph\u3092\u4f7f\u3063\u3066\u3001\u3069\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u4f55\u4eba\u304b\u3089\u3044\u3044\u306d\uff01\u3092\u8cb0\u3063\u305f\u304b\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n\nscala\n for ((id, property) \n- userGraph.vertices.collect) { println(s\nUser $id is called ${property.name} and is liked by ${property.inDeg} people.\n) }\nUser 4 is called David and is liked by 1 people.\nUser 1 is called Alice and is liked by 2 people.\nUser 6 is called Fran and is liked by 2 people.\nUser 3 is called Charlie and is liked by 1 people.\nUser 5 is called Ed and is liked by 0 people.\nUser 2 is called Bob and is liked by 2 people.\n\n\n\n\n\u6700\u5f8c\u306b\u3044\u3044\u306d\u3092\u4e0e\u3048\u305f\u4eba\u6570\u3068\u8cb0\u3063\u305f\u4eba\u6570\u304c\u540c\u3058\u30e6\u30fc\u30b6\u30fc\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n\nscala\n userGraph.vertices.filter { case (id, u) =\n u.inDeg == u.outDeg }.collect.foreach { case (id, property) =\n println(property.name) }\nDavid\nBob\n\n\n\n\n5-3-(1). MapReduceTriplet\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30bf\n\n\n5-2-(1)\n\u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u4f7f\u3063\u3066\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30fc\u30ef\u30fc\u3092\u63a2\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u4f5c\u696d\u306fmapReduceTriplet\u30aa\u30da\u30ec\u30fc\u30bf\u304c\u53ef\u80fd\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3053\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u306fGraphX\u3067\u5fb9\u5e95\u7684\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30b3\u30a2\u3068\u306a\u308b\u96c6\u7d04\u6a5f\u80fd\u3067\u3059\u3002\n\n\n\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u306a\u3069\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u8fd1\u63a5\u9802\u70b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53cd\u5fa9\u7684\u306b\u96c6\u7d04\u3059\u308b\u306e\u3067\u3001\u8fd1\u63a5\u96c6\u5408\u306f\u30b0\u30e9\u30d5\u8a08\u7b97\u3067\u6700\u3082\u91cd\u8981\u3067\u3059\u3002\n\n\n\u3053\u306e\u64cd\u4f5c\u306e\u5358\u7d14\u5316\u3057\u305f\u30b7\u30b0\u30cd\u30c1\u30e3\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nclass Graph[VD, ED] {\n  def mapReduceTriplets[MsgType](\n      // \u30a8\u30c3\u30b8\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3078\u306e\u95a2\u6570 (\u3059\u306a\u308f\u3061 Map)\n      map: EdgeTriplet[VD, ED] =\n Iterator[(VertexId, MsgType)],\n      // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u540c\u3058\u9802\u70b9\u306b\u7d50\u5408\u3059\u308b\u95a2\u6570 (\u3059\u306a\u308f\u3061 Reduce)\n      reduce: (MsgType, MsgType) =\n MsgType)\n    : VertexRDD[MsgType]\n}\n\n\n\n\nmap\u95a2\u6570\u306f\u5404\u30a8\u30c3\u30b8\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306b\u9069\u7528\u3055\u308c\u7e4b\u3044\u3067\u3044\u308b\u9802\u70b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001reduce\u95a2\u6570\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5404\u9802\u70b9\u3054\u3068\u306b\u96c6\u7d04\u3057\u307e\u3059\u3002\n\u3053\u306e\u64cd\u4f5c\u306e\u7d50\u679c\u306f\u5404\u9802\u70b9\u306b\u96c6\u7d04\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u542b\u3080VertexRDD\u3067\u3059\u3002\n\n\n\u5404\u30e6\u30fc\u30b6\u306e\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306f\u305d\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u540d\u524d\u3068\u5e74\u9f62\u3092\u542b\u3093\u3060\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u3001\u4e00\u756a\u5e74\u4e0a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3060\u3051\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u5404\u30e6\u30fc\u30b6\u306e\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30fc\u30ef\u30fc\u3092\u63a2\u3059\u3002\n\n\nscala\n val oldestFollower: VertexRDD[(String, Int)] = userGraph.mapReduceTriplets[(String, Int)]( edge =\n Iterator((edge.dstId, (edge.srcAttr.name, edge.srcAttr.age))), (a, b) =\n if (a._2 \n b._2) a else b)\n\u5404\u30a8\u30c3\u30b8\u304b\u3089\u63a5\u7d9a\u5148\u306e\u7279\u6027\u3092\u8f09\u305b\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63a5\u7d9a\u5148\u306b\u9001\u308a\u307e\u3059\n\noldestFollower: org.apache.spark.graphx.VertexRDD[(String, Int)] = VertexRDDImpl[49] at RDD at VertexRDD.scala:57\n\n\n\n\n\u5404\u30e6\u30fc\u30b6\u306e\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\nscala\n userGraph.vertices.leftJoin(oldestFollower) { (id, user, optOldestFollower) =\n optOldestFollower match { case None =\n s\n${user.name} does not have any followers.\n case Some((name, age)) =\n s\n${name} is the oldest follower of ${user.name}.\n } }.collect.foreach { case (id, str) =\n println(str) }\n\n\nDavid is the oldest follower of Alice.\nCharlie is the oldest follower of Fran.\nEd is the oldest follower of Charlie.\nBob is the oldest follower of David.\nEd does not have any followers.\nCharlie is the oldest follower of Bob.\n\n\n\n\n\u5404\u30e6\u30fc\u30b6\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u5e73\u5747\u5e74\u9f62\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\nscala\n val averageAge: VertexRDD[Double] = userGraph.mapReduceTriplets[(Int, Double)]( edge =\n Iterator((edge.dstId, (1, edge.srcAttr.age.toDouble))), (a, b) =\n ((a._1 + b._1), (a._2 + b._2)) ).mapValues((id, p) =\n p._2 / p._1)\naverageAge: org.apache.spark.graphx.VertexRDD[Double] = VertexRDDImpl[57] at RDD at VertexRDD.scala:57\n\nscala\n userGraph.vertices.leftJoin(averageAge) { (id, user, optAverageAge) =\n optAverageAge match { case None =\n s\n${user.name} does not have any followers.\n case Some(avgAge) =\n s\nThe average age of ${user.name}\\'s followers is $avgAge.\n } }.collect.foreach { case (id, str) =\n println(str) }\nThe average age of David's followers is 27.0.\nThe average age of Alice's followers is 34.5.\nThe average age of Fran's followers is 60.0.\nThe average age of Charlie's followers is 55.0.\nEd does not have any followers.\nThe average age of Bob's followers is 60.0.\n\n\n\n\n5-3-(2). \u30b5\u30d6\u30b0\u30e9\u30d5\n\n\n30\u6b73\u4ee5\u4e0a\u306e\u30e6\u30fc\u30b6\u304b\u3089\u306a\u308b\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3092\u8a73\u3057\u304f\u8abf\u3079\u305f\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306b\u306a\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u69d8\u306a\u5206\u6790\u3092\u884c\u3046\u305f\u3081\u306bGraphX\u306e\u30b5\u30d6\u30b0\u30e9\u30d5\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30b5\u30d6\u30b0\u30e9\u30d5\u3068\u306f\u5168\u4f53\u306e\u30b0\u30e9\u30d5\u306e\u4e00\u90e8\u3092\u5207\u308a\u53d6\u308a\u4f5c\u6210\u3057\u305f\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\u9802\u70b9\u306f\u30e6\u30fc\u30b6\u304c\u8a18\u8ff0\u3057\u305f\u9802\u70b9\u6027\u8cea\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u7269\u306e\u307f\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\u8fba\u3082\u540c\u3058\u304f\u30e6\u30fc\u30b6\u304c\u8a18\u8ff0\u3057\u305f\u8fba\u6027\u8cea\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u7269\u3060\u3051\u304c\u8fd4\u3055\u308c\u3066\u3001\u7e4b\u3044\u3067\u3044\u308b\u9802\u70b9\u306f\u8a18\u8ff0\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u308b\u7269\u3060\u3051\u3092\u7e4b\u3052\u307e\u3059\u3002\n\n\n\u3053\u3053\u304b\u3089\u306fsubgraph\u3092\u4f7f\u3063\u3066\u30b0\u30e9\u30d5\u309230\u6b73\u4ee5\u4e0a\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u5236\u9650\u3057\u307e\u3059\u3002\n\n\nscala\n val olderGraph = userGraph.subgraph(vpred = (id, user) =\n user.age \n= 30)\nolderGraph: org.apache.spark.graphx.Graph[User,Int] = org.apache.spark.graphx.impl.GraphImpl@68941ca4\n\n\n\n\n\u3053\u306e\u5236\u9650\u3055\u308c\u305f\u30b0\u30e9\u30d5\u5185\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3092\u8003\u5bdf\u3057\u3066\u307f\u307e\u3059\u3002\n\n\nscala\n olderGraph.vertices.leftJoin(cc.vertices) { case (id, user, comp) =\n s\n${user.name} is in component ${comp.get}\n }.collect.foreach{ case (id, str) =\n println(str) }\nDavid is in component 4\nFran is in component 3\nCharlie is in component 3\nEd is in component 3\n\n\n\n\n\u7e4b\u304c\u3063\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u305d\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5185\u3067\u4e00\u756a\u4f4e\u3044VertexId\u304c\u6a19\u8b58\u306b\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30d6\u30b0\u30e9\u30d5\u3092\u8abf\u67fb\u3057\u3066\u307f\u307e\u3059\u3068\u3001David\u304c\u6b8b\u308a\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5207\u65ad\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001David\u306f\u5143\u306e\u30b0\u30e9\u30d5\u3067\u306f\u82e5\u3044\u30e6\u30fc\u30b6\u3092\u901a\u3057\u3066\u7e4b\u304c\u3063\u3066\u3044\u305f\u3068\u89e3\u308a\u307e\u3059\u3002\n\n\n5-4. \u30ea\u30a2\u30eb\u30c7\u30fc\u30bf\u4e0a\u306e\u7aef\u672b\u9593\u306e\u30b0\u30e9\u30d5\u5206\u6790\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\n\n\n\u3053\u3053\u307e\u3067\u3067GraphX API\u306e\u500b\u3005\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5b66\u7fd2\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u5171\u540c\u3057\u3066\u30ea\u30a2\u30eb\u5206\u6790\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u69cb\u7bc9\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u304b\u3089\u306f\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u306e\u30ea\u30f3\u30af\u30c7\u30fc\u30bf\u304b\u3089\u306f\u3058\u3081\u3001GraphX\u64cd\u4f5c\u3092\u7528\u3044\u3066\u69cb\u9020\u3092\u5206\u6790\u3057\u3001Spark\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u3067\u30b0\u30e9\u30d5\u5206\u6790\u306e\u51fa\u529b\u3092\u8abf\u3079\u307e\u3059\u3002\n\u3053\u308c\u3089\u306f\u3059\u3079\u3066Spark\u30b7\u30a7\u30eb\u304b\u3089\u884c\u3044\u307e\u3059\u3002\n\n\nGraphX\u306f\u6700\u9069\u306a\u6027\u80fd\u3092\u5f97\u308b\u305f\u3081\u306bKyro\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n\u4eca\u3001\u3069\u3093\u306a\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u3092\u8abf\u3079\u308b\u305f\u3081\u306bhttp://localhost:4040/environment\u306b\u79fb\u884c\u3057\u3066Spark Shell UI\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u3057\u3066spark.serializer\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Kyro\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u306f\u30aa\u30d5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u7df4\u7fd2\u3067\u306f\u3001Spark\u30b7\u30a7\u30eb\u5185\u306eKyro\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3092\u30aa\u30f3\u306b\u3059\u308b\u624b\u9806\u3092\u8aac\u660e\u3092\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001Spark\u30b7\u30a7\u30eb\u3092\u629c\u3051\u3066\u304f\u3060\u3055\u3044\uff08exit\u304bctrl-c\u3092\u5165\u529b\uff09\u3002\n\n\n\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\uff08Emacs\u3084Vim\u306a\u3069\uff09\u3067spark/conf/spark-env.sh\u3092\u958b\u304d\u3001\u4ee5\u4e0b\u3092\u4ed8\u3051\u52a0\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nSPARK_JAVA_OPTS+='\n\u3000-Dspark.serializer=org.apache.spark.serializer.KryoSerializer\n\u3000-Dspark.kyro.registrator=org.apache.spark.graphx.GraphKryoRegistrator \u2018\nexport SPARK_JAVA_OPTS\n\n\n\n\n\u305d\u308c\u304b\u9762\u5012\u306a\u6c17\u5206\u3067\u3057\u305f\u3089\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u8cbc\u3063\u3066\u304f\u3060\u3055\u3044\uff08SparkShell\u3067\u306f\u306a\u304f\uff09\u3002\n\n\nusb/$ echo -e \nSPARK_JAVA_OPTS+=' -Dspark.serializer=org.apache.spark.serializer.KryoSerializer -Dspark.kryo.registrator=org.apache.spark.graphx.GraphKryoRegistrator ' \\nexport SPARK_JAVA_OPTS\n \n spark/conf/spark-env.sh\n\n\n\n\n\u3053\u3053\u3067\u3001Spark Shell\u3092\u518d\u8d77\u52d5\u3057\u3066\u3082\u3046\u4e00\u5ea6\u74b0\u5883\u72b6\u6cc1\u3092http://localhost:4040/environment\u3067\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u30d7\u30ed\u30d1\u30c6\u30a3\u304corg.apache.spark.serializer.KyroSerializer\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n5-4-(1). \u518d\u8d77\u52d5\n\n\nSpark\u30b7\u30a7\u30eb\u3092\u8d77\u52d5\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\ntraining/ $ spark/bin/spark-shell\nscala\n\n\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\n\n\n\n\n5-4-(2). \u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u8a18\u4e8b\u306e\u8aad\u307f\u8fbc\u307f\n\n\n\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u306f\u767e\u79d1\u4e8b\u5178\u3059\u3079\u3066\u306e\u8a18\u4e8b\u3092\nXML\u72b6\u306e\u584a\n\u3068\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u65b0\u306e\u3082\u306e\u306f44GB\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u524d\u51e6\u7406\u3068\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\uff08\u3082\u3061\u308d\u3093Spark\u3068GraphX\u3092\u4f7f\u3063\u3066\uff09\u884c\u3063\u3066USB\u30c9\u30e9\u30a4\u30d6\u306b\u53ce\u307e\u308a\u304d\u308b\u7a0b\u5ea6\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u201dBerkeley\u201d\u306e\u5165\u3063\u305f\u8a18\u4e8b\u3068\u305d\u306e\u8a18\u4e8b\u304b\u3089\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b\u30fb\u3057\u3066\u3044\u308b\u8a18\u4e8b\u3092\u5207\u308a\u53d6\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u7d50\u679c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u4e8c\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u201cdata/graphx/graphx-wiki-vertices.txt\u201d\u3068\u201ddata/graphx/graphx-edges.txt\u201d\u3067\u3059\u3002\n\u6700\u521d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8a18\u4e8b\u306eID\u3068\u30bf\u30a4\u30c8\u30eb\u3092\u8a18\u9332\u3057\u3066\u3042\u308a\u3001\u4e8c\u500b\u76ee\u304c\u30ea\u30f3\u30af\u69cb\u9020\u3092\u63a5\u7d9a\u5143-\u63a5\u7d9a\u5148ID\u30da\u30a2\u3068\u3057\u3066\u8a18\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u3053\u306e\u4e8c\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092RDD\u306b\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nscala\n val articles: RDD[String] = sc.textFile(\ndata/graphx/graphx-wiki-vertices.txt\n)\n//articles: org.apache.spark.rdd.RDD[String] = data/graphx/graphx-wiki-vertices.txt MappedRDD[1] at textFile at \nconsole\n:16\n\nscala\n val links: RDD[String] = sc.textFile(\ndata/graphx/graphx-wiki-edges.txt\n)\n//links: org.apache.spark.rdd.RDD[String] = data/graphx/graphx-wiki-edges.txt MappedRDD[3] at textFile at \nconsole\n:16\n\n\n\n\n5-4-(3). \u6700\u521d\u306e\u8a18\u4e8b\u3092\u898b\u308b\n\n\narticles.first\n// res1: String = 6598434222544540151      Adelaide Hanscom Leeson\n\n\n\n\n5-4-(4). \u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3059\u308b\n\n\n\u3055\u3042\u3001\u8a18\u4e8b\u3068\u30ea\u30f3\u30af\u3092\u4f7f\u3063\u3066\u30d0\u30fc\u30af\u30ec\u30fc\u5927\u5b66\u306b\u95a2\u308f\u308b\u8a18\u4e8b\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\n\n\u307e\u305a\u306f\u8a18\u4e8b\u306e\u5217\u3092\u9802\u70b9ID\u3068\u30bf\u30a4\u30c8\u30eb\u306e\u30da\u30a2\u306b\u5206\u89e3\u3057\u307e\u3059\u3002\n\n\nscala\n val vertices = articles.map { line =\n val fields = line.split('\\t'); (fields(0).toLong, fields(1)) }\n\n// vertices: org.apache.spark.rdd.RDD[(Long, String)] = MappedRDD[4] at map at \nconsole\n:18\n\n\n\n\n\u6b21\u306b\u30ea\u30f3\u30af\u306e\u5217\u3092\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306e\uff10\u3092\u52a0\u3048\u3066\u8fba\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5206\u89e3\u3057\u307e\u3059\u3002\n\n\nscala\n val edges = links.map { line =\n val fields = line.split('\\t'); Edge(fields(0).toLong, fields(1).toLong, 0) }\n//edges: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Int]] = MappedRDD[5] at map at \nconsole\n:18\n\n\n\n\n\u6700\u5f8c\u306b\u30b0\u30e9\u30d5\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u9802\u70b9RDD\u3001\u8fbaRDD\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9802\u70b9\u6027\u8cea\u3068\u4e00\u7dd2\u306b\u547c\u3093\u3067\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9802\u70b9\u6027\u8cea\u306f\u9802\u70b9RDD\u306b\u5b58\u5728\u3057\u306a\u3044\u3001\u8fba\u3067\u7d50\u3070\u308c\u3066\u3044\u308b\u9802\u70b9\uff08\u30ea\u30f3\u30af\u3067\u7e4b\u304c\u3063\u3066\u3044\u308b\u8a18\u4e8b\uff09\u306e\u521d\u671f\u5316\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u3059\u3067\u306b\u8abf\u548c\u3057\u306a\u3044\u3082\u306e\u306f\u53d6\u308a\u9664\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u73fe\u5b9f\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u58ca\u308c\u3066\u3044\u308b\u30ea\u30f3\u30af\u5148\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9802\u70b9\u6027\u8cea\u3092\u7a7a\u306e\u30bf\u30a4\u30c8\u30eb\u6587\u5b57\u5217\u3068\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n\n\u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u518d\u8aad\u307f\u8fbc\u307f\u3092\u9632\u3050\u305f\u3081\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u3057\u3066\u304b\u3089\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\nscala\n val graph = Graph(vertices, edges, \n).cache()\n// graph: org.apache.spark.graphx.Graph[String,Int] = org.apache.spark.graphx.impl.GraphImpl@5b1e4029\n\n\n\n\n\u30b0\u30e9\u30d5\u3092\u5f37\u5236\u7684\u306b\u8a08\u7b97\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u4f55\u500b\u306e\u8a18\u4e8b\u304c\u3053\u306e\u30b0\u30e9\u30d5\u306b\u3042\u308b\u304b\u3092\u6570\u3048\u307e\u3057\u3087\u3046\u3002\n\n\nscala\n graph.vertices.count\nres2: Long = 22424\n\n\n\n\nGraphX\u306f\u6700\u521d\u306e\u30b0\u30e9\u30d5\u304c\u4f5c\u6210\u3055\u308c\u308b\u6642\u3001\u3059\u3079\u3066\u306e\u9802\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u5b58\u5728\u3057\u306a\u3044\u9802\u70b9\u306e\u5834\u6240\u306b\u4ee3\u308f\u308a\u3092\u5206\u914d\u3057\u307e\u3059\u3002\n\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306e\u8a08\u7b97\u51e6\u7406\u306f\u8ffd\u52a0\u306e\u7d71\u5408\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u304c\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u304a\u304b\u3052\u3067\u901f\u304f\u52d5\u3044\u3066\u304f\u308c\u307e\u3059\u3002\n\n\n\u306f\u3058\u3081\u306b\u6570\u500b\u306e\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nscala\n graph.triplets.count\nres3: Long = 31312\n\nscala\n graph.triplets.take(5).foreach(println(_))\n((146271392968588,Computer Consoles Inc.),(7097126743572404313,Berkeley Software Distribution),0)\n((146271392968588,Computer Consoles Inc.),(8830299306937918434,University of California, Berkeley),0)\n((625290464179456,List of Penguin Classics),(1735121673437871410,George Berkeley),0)\n((1342848262636510,List of college swimming and diving teams),(8830299306937918434,University of California, Berkeley),0)\n((1889887370673623,Anthony Pawson),(8830299306937918434,University of California, Berkeley),0)\n\n\n\n\n\u5148\u307b\u3069\u8a00\u3063\u305f\u901a\u308a\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5185\u306e\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306f\u201dBerkeley\u201d\u306e\u6587\u5b57\u304c\u63a5\u7d9a\u5143\u304b\u63a5\u7d9a\u5148\u306e\u8a18\u4e8b\u30bf\u30a4\u30c8\u30eb\u306b\u73fe\u308c\u307e\u3059\u3002\n\n\n5-4-(5). \u30da\u30fc\u30b8\u30e9\u30f3\u30af\u3092\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u3067\u884c\u3046\n\n\n\u6b21\u306b\u30b0\u30e9\u30d5\u5206\u6790\u3092\u958b\u59cb\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\n\u30da\u30fc\u30b8\u30e9\u30f3\u30af\n\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u30b0\u30e9\u30d5\u5185\u306e\u6700\u3082\u91cd\u8981\u306a\u30da\u30fc\u30b8\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\n\u30da\u30fc\u30b8\u30e9\u30f3\u30af\n\u306f\u5c0f\u3055\u3044\u306a\u304c\u3089\u3082\u6210\u9577\u306e\u7d9a\u3044\u3066\u3044\u308b\u3001GraphX\u306b\u3059\u3067\u306b\u5b9f\u88c5\u3055\u308c\u305f\u4e00\u822c\u7684\u306a\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u90e8\u3067\u3059\u3002\n\u5b9f\u884c\u65b9\u6cd5\u306f\u5358\u7d14\u3067\u8907\u96d1\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u5358\u306b\u521d\u671f\u8a2d\u5b9a\u306e\u30b3\u30fc\u30c9\u3001\u9802\u70b9\u30d7\u30ed\u30b0\u30e9\u30e0\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u30b3\u30f3\u30d0\u30a4\u30ca\u3092Pregel\u306e\u9001\u308b\u3060\u3051\u3067\u3067\u304d\u307e\u3059\u3002\n\n\ngraph.pageRank\u3092\u4f7f\u3063\u3066\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u3092\u884c\u3046\u3002\n\n\nscala\n val prGraph = graph.pageRank(0.001).cache()\n// prGraph: org.apache.spark.graphx.Graph[Double,Double] = org.apache.spark.graphx.impl.GraphImpl@3153be16\n\n\n\n\n\u3053\u306e\u7d50\u679c\u306f\u9802\u70b9\u6027\u8cea\u304c\u5404\u30da\u30fc\u30b8\u306e\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u5024\u3092\u4ed8\u3051\u305f\u30b0\u30e9\u30d5\u3092\u8fd4\u3057\u307e\u3059\u3002\n0.001\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u8a31\u5bb9\u8aa4\u5dee\u3067\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u306e\u5883\u754c\u5024\u3067\u3059\u3002\n\n\n\u554f\u984c\u306fprGraph\u304c\u30bf\u30a4\u30c8\u30eb\u306a\u3069\u306e\u6700\u521d\u306e\u9802\u70b9\u6027\u8cea\u3092\u542b\u3093\u3067\u304a\u3089\u305a\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u5024\u3057\u304b\u6301\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u5143\u306egraph\u304c\u305d\u306e\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u9802\u70b9\u306e\u7d71\u5408\u3092\u884c\u3046\u3053\u3068\u3067prGraph\u306e\u9802\u70b9\u306e\u30e9\u30f3\u30af\u5024\u3068graph\u306e\u9802\u70b9\u306e\u8a18\u4e8b\u30bf\u30a4\u30c8\u30eb\u3092\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u51fa\u6765\u4e0a\u304c\u308b\u306e\u304c\u4e8c\u3064\u306e\u60c5\u5831\u3092\u7d71\u5408\u3055\u308c\u305f\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3067\u3001\u9802\u70b9\u6027\u8cea\u3092\u30bf\u30d7\u30eb\u578b\u3068\u3057\u3066\u30bb\u30fc\u30d6\u3067\u304d\u307e\u3059\u3002\n\u305d\u3053\u3067\u3053\u306e\u65b0\u3057\u3044\u30ea\u30b9\u30c8\u304b\u3089Top10\u306e\u9802\u70b9\u3092\u63a2\u3059\u3053\u3068\u3084\u305d\u308c\u306b\u4e00\u81f4\u3059\u308b\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u306a\u3069\u306e\u30c6\u30fc\u30d6\u30eb\u578b\u306e\u64cd\u4f5c\u3092\u3053\u306e\u9802\u70b9\u306b\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u4f5c\u696d\u306f\u3092\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u300c\u30d0\u30fc\u30af\u30ec\u30fc\u300d\u30b5\u30d6\u30b0\u30e9\u30d5\u306e\u306a\u304b\u3067\u91cd\u8981\u6027Top10\u306e\u30da\u30fc\u30b8\u3092\u63a2\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\nscala\n val titleAndPrGraph = graph.outerJoinVertices(prGraph.vertices) { (v, title, rank) =\n (rank.getOrElse(0.0), title) }\n// titleAndPrGraph: org.apache.spark.graphx.Graph[(Double, String),Int] = org.apache.spark.graphx.impl.GraphImpl@7c7a6ea8\n\n\nscala\n titleAndPrGraph.vertices.top(10) { Ordering.by((entry: (VertexId, (Double, String))) =\n entry._2._1) }.foreach(t =\n println(t._2._2 + \n: \n + t._2._1))\n\nUniversity of California, Berkeley: 1321.111754312097\nBerkeley, California: 664.8841977233583\nUc berkeley: 162.50132743397873\nBerkeley Software Distribution: 90.4786038848606\nLawrence Berkeley National Laboratory: 81.90404939641944\nGeorge Berkeley: 81.85226118457985\nBusby Berkeley: 47.871998218019655\nBerkeley Hills: 44.76406979519754\nXander Berkeley: 30.324075347288037\nBerkeley County, South Carolina: 28.908336483710308\n\n\n\n\n\u3053\u308c\u3067GraphX\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u7ae0\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\u3053\u306e\u307e\u307e\u30b3\u30fc\u30c9\u3092\u89e6\u308a\u7d9a\u3051\u308b\u3053\u3068\u3068\nGraphX\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\n\u3092\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u88dc\u8db3\u3068\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002", 
            "title": "5. GraphX"
        }, 
        {
            "location": "/graphx/#5-graphx", 
            "text": "GraphX\u3068\u306f\uff08\u30a6\u30a7\u30d6\u30b0\u30e9\u30d5\u3084\u30bd\u30fc\u30b7\u30e3\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306e\uff09\u30b0\u30e9\u30d5\u4f5c\u308a\u3068\uff08\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u3084\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u306e\uff09\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u306e\u305f\u3081\u306e\u65b0\u3057\u3044API\u3067\u3059\u3002\nGraphX\u306fSpark\u306e\u57fa\u672c\u62bd\u8c61\u6982\u5ff5\u3067\u3042\u308bRDD\uff08\u8010\u4e45\u7684\u5206\u6563\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\uff09\u3092\u62e1\u5f35\u3057\u305f\u8010\u4e45\u7684\u5206\u6563\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306e\u3053\u3068\u3067\u3059\u3002\n\u8010\u4e45\u7684\u5206\u6563\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306f\u8fba\u3068\u9802\u70b9\u306b\u7279\u6027\u304c\u4ed8\u3044\u305f\u6709\u5411\u591a\u91cd\u30b0\u30e9\u30d5\u3067\u3059\u3002\nGraphX\u306f\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u3068\u3057\u3066\u91cd\u8981\u306a\u64cd\u4f5c\u3067\u3042\u308b \u30b5\u30d6\u30b0\u30e9\u30d5\u4f5c\u308a\u3001\u9802\u70b9\u4f75\u5408\u3001\u8fd1\u63a5\u96c6\u7d04\u306a\u3069 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u306b\u3082\u6700\u9069\u5316\u3055\u308c\u305f PregelAPI \u306b\u76f8\u4f3c\u3057\u305f\u7269\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3001\u5897\u3048\u7d9a\u3051\u3066\u3044\u308b \u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u3084\u30b0\u30e9\u30d5\u5206\u6790\u3092\u7c21\u6f54\u306b\u3059\u308b \u30d3\u30eb\u30c0\u30fc \u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002  \u3053\u306e\u7ae0\u3067\u306f\u3001GraphX\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30ad\u307a\u30c7\u30a3\u30a2\u306e\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092Spark\u5185\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002GraphX\u306eAPI\u306f\u73fe\u72b6\u3067\u306fScala\u3067\u3057\u304b\u52d5\u304d\u307e\u305b\u3093\u304c\u3001\u5c06\u6765\u7684\u306bJava\u3068Python\u306e\u8a00\u8a9e\u30b5\u30dd\u30fc\u30c8\u3082\u63d0\u4f9b\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002", 
            "title": "5. GraphX"
        }, 
        {
            "location": "/graphx/#5-1-graphx", 
            "text": "\u3082\u3057\u4eca\u3059\u3050\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u3092\u5b9f\u884c\u3057\u305f\u3044\u65b9\u305f\u3061\u306f\u3053\u306e\u90e8\u5206\u306f\u98db\u3070\u3057\u3066\u3082\u3089\u3063\u3066\u7d50\u69cb\u3067\u3059\u3002  \u30bd\u30fc\u30b7\u30e3\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u8a00\u8a9e\u30e2\u30c7\u30ea\u30f3\u30b0\u306a\u3069\u304b\u3089\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u306e\u91cd\u8981\u6027\u3068\u898f\u6a21\u304c\u5e83\u304c\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u9670\u3067 Giraph \u3084 GraphLab \u306a\u3069\u306e \u201d\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0(Graph-Parallel Systems)\u201d \u306e\u958b\u767a\u304c\u9032\u3093\u3067\u3044\u307e\u3059(\u305d\u308c\u306b\u5bfe\u3057\u3066Hadoop\u3084Spark\u306f \u201c\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0(Data-Parallel Systems)\u201d\u3068\u547c\u3073\u307e\u3059)\u3002\n\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306f\u8a08\u7b97\u51e6\u7406\u3059\u308b\u578b\u3092\u5236\u9650\u3057\u305f\u308a\u65b0\u3057\u3044\u65b9\u6cd5\u3067\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3057\u305f\u308a\u5206\u6563\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u3001\u5f93\u6765\u306e\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u52b9\u7387\u7684\u306a\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u96e3\u3057\u304b\u3063\u305f\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u52b9\u7387\u7684\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002   \u3053\u308c\u3089\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u304c\u884c\u3046\u5236\u7d04\u306f\u3001\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u660e\u78ba\u306b\u5411\u4e0a\u3055\u305b\u307e\u3059\u304c\u3001\u5178\u578b\u7684\u306a\u30b0\u30e9\u30d5\u5206\u6790\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u8868\u73fe\u3059\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\u52a0\u3048\u3066\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306f\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u306a\u3069\u306e\u53cd\u5fa9\u7684\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u6700\u9069\u5316\u3055\u308c\u308b\u4e00\u65b9\u3067\u3001\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u3084\u69cb\u9020\u5909\u5f62\u306a\u3069\u306e\u57fa\u672c\u7684\u306a\u30bf\u30b9\u30af\u3084\u3001\u8907\u6570\u306e\u30b0\u30e9\u30d5\u306b\u307e\u305f\u304c\u308b\u51e6\u7406\u306b\u306f\u9069\u3057\u3066\u3044\u307e\u305b\u3093\u3002  \u3053\u308c\u3089\u306e\u4ed5\u7d44\u307f\u306f\u7d50\u679c\u7684\u306b\u30b0\u30e9\u30d5\u30c8\u30dd\u30ed\u30b8\u5916\u3078\u306e\u30c7\u30fc\u30bf\u5909\u63db\u3092\u5fc5\u8981\u3068\u3057\u3001\u305d\u306e\u5909\u63db\u5148\u306fMapReduce\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u4e26\u5217\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3068\u306a\u308a\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306e\u6271\u3044\u65b9\u306f\u8ab2\u984c\u6b21\u7b2c\u3067\u3001\u5206\u6790\u4e2d\u306e\u672a\u6574\u7406\u306e\u30c7\u30fc\u30bf\u306f\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u3084\u30b0\u30e9\u30d5\u306e\u898b\u65b9\u304c\u5fc5\u8981\u3068\u3055\u308c\u3001\u5404\u30c6\u30fc\u30d6\u30eb\u3084\u30b0\u30e9\u30d5\u306e\u7279\u6027\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306b\u52b9\u7387\u7684\u3067\u7c21\u6f54\u7684\u306a\u30c7\u30fc\u30bf\u5909\u63db\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002   \u52a0\u3048\u3066\u305d\u308c\u305e\u308c\u306e\u6bb5\u968e\u3067\u30c7\u30fc\u30bf\u30a2\u30ca\u30ea\u30b9\u30c8\u306b\u3068\u3063\u3066\u306f\u3001\u30b0\u30e9\u30d5\u578b\u306e\u8868\u73fe\u3068\u30c6\u30fc\u30d6\u30eb\u578b\u306e\u8868\u73fe\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u52b9\u7387\u7684\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u65e2\u5b58\u306e\u201d\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u3084\u201d\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u308b\u5206\u6790\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u3001\u3053\u306e\u5206\u6790\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u975e\u5e38\u306b\u91cd\u3044\u8a08\u7b97\u3084\u3001\u305d\u308c\u305e\u308c\u306b\u304a\u3044\u3066\u7570\u306a\u308b\u8907\u96d1\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u3092\u30c7\u30fc\u30bf\u30a2\u30ca\u30ea\u30b9\u30c8\u306b\u5f37\u3044\u3066\u3044\u307e\u3059\u3002   GraphX\u306f\u3053\u308c\u3089\u65e2\u5b58\u306e\u201d\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u3084\u201d\u30c7\u30fc\u30bf\u4e26\u5217\u8a08\u7b97\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u201d\u3092\u7d71\u5408\u3057\u3001\u5358\u4e00\u306eAPI\u30bb\u30c3\u30c8\u306b\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\nGraphX API\u3088\u3063\u3066\u3001\u30e6\u30fc\u30b6\u306fRDD\u4e0a\u306e\u30c7\u30fc\u30bf\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u3053\u3068\u306a\u304f\u3001\u30b0\u30e9\u30d5\u5f62\u5f0f\u3068\u3057\u3066\u64cd\u4f5c\u3059\u308b\u304b\u30c6\u30fc\u30d6\u30eb\u5f62\u5f0f\u3068\u3057\u3066\u64cd\u4f5c\u3059\u308b\u304b\u3092\u81ea\u7531\u306b\u9078\u629e\u3057\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002", 
            "title": "5-1. GraphX\u306e\u30b0\u30e9\u30d5\u4e26\u5217\u51e6\u7406\u306e\u80cc\u666f"
        }, 
        {
            "location": "/graphx/#5-2-graphx-api", 
            "text": "\u307e\u305a\u306f\u3001GraphX\u306e\u69cb\u9020\u304b\u3089\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u306f\u3058\u3081\u306bSpark\u306e\u30b7\u30a7\u30eb\u3092\u958b\u304d\u307e\u3059\u3002  training/ $ spark/bin/spark-shell\nscala   \u6b21\u306b\u3001GraphX\u3068RDD\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002  scala  import org.apache.spark.graphx._\nimport org.apache.spark.graphx._\nscala  import org.apache.spark.rdd.RDD\nimport org.apache.spark.rdd.RDD   5-2-(1). \u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\uff08\u7279\u6027\u30b0\u30e9\u30d5\uff09\u306e\u4f5c\u6210  \u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5 \u306f\u5404\u8fba\u3068\u9802\u70b9\u306b\u30e6\u30fc\u30b6\u304c\u5b9a\u7fa9\u3057\u305f\u7279\u6027\u3092\u6301\u3064\u6709\u5411\u591a\u91cd\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\u6709\u5411\u30b0\u30e9\u30d5\u306e\u5834\u5408\u306f\u8fba\u306b\u65b9\u5411\u304c\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u63a5\u7d9a\u5143\uff08source)\u3068\u63a5\u7d9a\u5148(destination)\u3067\u7279\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u591a\u91cd\u30b0\u30e9\u30d5\u3068\u306f\u540c\u3058\u63a5\u7d9a\u5143\u304b\u3089\u63a5\u7d9a\u5148\u306b\u591a\u91cd\u306e\u4e26\u5217\u306a\u8fba\u304c\u3042\u308b\u53ef\u80fd\u6027\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u5404\u9802\u70b9\u306fVertexId\u3068\u3044\u304664\u30d3\u30c3\u30c8\u6574\u6570(64-bit long)\u306eID\u3067\u7279\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306e\u9802\u70b9\u3068\u8fba\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u547c\u3073\u3001Scala\u304bJava\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002  \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u524d\u534a\u3092\u901a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b7\u30e3\u30eb\u53cb\u4eba\u95a2\u4fc2\u3092\u8868\u3059\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u5b66\u3076\u73a9\u5177\u306e\u3088\u3046\u3067\u3059\u304c\u3001\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u306e\u30e2\u30c7\u30eb\u3068GraphX\u3092\u5b66\u3076\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u306b\u304a\u3051\u308b\u9802\u70b9\u306f\u30e6\u30fc\u30b6\u540d\u3068\u5e74\u9f62\u304c\u542b\u307e\u308c\u3001\u8fba\u306f\u30d9\u30af\u30c8\u30eb\u3068\u306a\u308a\u307e\u3059\u3002   \u307e\u305a\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u9802\u70b9\u3068\u8fba\u306e\u914d\u5217\u304b\u3089\u4f5c\u6210\u3057\u307e\u3059\u3002\u5f8c\u306b\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3092\u30c7\u30e2\u3057\u307e\u3059\u3002  \u307e\u305a\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092spark-shell\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002  scala  val vertexArray = Array( (1L, ( Alice , 28)), (2L, ( Bob , 27)), (3L, ( Charlie , 65)), (4L, ( David , 42)), (5L, ( Ed , 55)), (6L, ( Fran , 50)) )\nvertexArray: Array[(Long, (String, Int))] = Array((1,(Alice,28)), (2,(Bob,27)), (3,(Charlie,65)), (4,(David,42)), (5,(Ed,55)), (6,(Fran,50)))\n\nscala  val edgeArray = Array( Edge(2L, 1L, 7), Edge(2L, 4L, 2), Edge(3L, 2L, 4), Edge(3L, 6L, 3), Edge(4L, 1L, 1), Edge(5L, 2L, 2), Edge(5L, 3L, 8), Edge(5L, 6L, 3) )\nedgeArray: Array[org.apache.spark.graphx.Edge[Int]] = Array(Edge(2,1,7), Edge(2,4,2), Edge(3,2,4), Edge(3,6,3), Edge(4,1,1), Edge(5,2,2), Edge(5,3,8), Edge(5,6,3))  \u8fba\uff08Edge)\u30af\u30e9\u30b9\u306f\u63a5\u7d9a\u5143\u3068\u63a5\u7d9a\u5148\u306e\u9802\u70b9\uff08Vertex)\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3061\u3001\u3055\u3089\u306b\u3082\u3046\u4e00\u3064\u6574\u6570\u306e\u8981\u7d20\u3092\u6301\u3061\u307e\u3059\u3002\u9802\u70b9\u306e\u914d\u5217\u30af\u30e9\u30b9\u306fId\u3001\u540d\u524d\u3001\u5e74\u9f62\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3063\u3066\u3044\u307e\u3059\u3002  Spark\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u7fd2\u3063\u305fsc.parallelize\u3092\u4f7f\u3063\u3066vertexArray\u304a\u3088\u3073edgeArray\u914d\u5217\u5909\u6570\u3092RDD\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002  scala  val vertexRDD: RDD[(Long, (String, Int))] = sc.parallelize(vertexArray)\nvertexRDD: org.apache.spark.rdd.RDD[(Long, (String, Int))] = ParallelCollectionRDD[0] at parallelize at  console :27\n\nscala  val edgeRDD: RDD[Edge[Int]] = sc.parallelize(edgeArray)\nedgeRDD: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Int]] = ParallelCollectionRDD[1] at parallelize at  console :27  \u3053\u308c\u3067\u3001\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306f\u9802\u70b9RDD\u3068\u8fbaRDD\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30b0\u30e9\u30d5[V,\u3000E]\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u9802\u70b9RDD\u306e\u5f62\u306fRDD[(VertexId, V)]\u3067\u8fbaRDD\u306e\u5f62\u306fRDD[Edge[E]]\u3067\u3059\u3002  scala  val graph: Graph[(String, Int), Int] = Graph(vertexRDD, edgeRDD)\ngraph: org.apache.spark.graphx.Graph[(String, Int),Int] = org.apache.spark.graphx.impl.GraphImpl@431ed0d5  \u3053\u306e\u30bd\u30fc\u30b7\u30e3\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30b0\u30e9\u30d5\u5185\u306b\u3042\u308b\u9802\u70b9\u306e\u7279\u5fb4\u306f\u30bf\u30d7\u30eb\u578b\u306e\u5909\u6570(\u540d\u524d(String\u578b), \u5e74\u9f62(Int\u578b))\u3067\u3001\u8fba\u306e\u7279\u5fb4\u306f\u201d\u3044\u3044\u306d\uff01\u201d(Int\u578b)\u3067\u3059\u3002  RDD\u306e\u307b\u304b\u306b\u751f\u30d5\u30a1\u30a4\u30eb\u3001RDD\u3001\u4eba\u5de5\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304b\u3089\u3082\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306fRDD\u306e\u3088\u3046\u306b\u4e0d\u5909\u3067\u5206\u6563\u3055\u308c\u6b20\u9665\u4fdd\u969c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b0\u30e9\u30d5\u306e\u578b\u3084\u5024\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u304d\u306f\u5143\u306e\u30b0\u30e9\u30d5\u306b\u6b32\u3057\u3044\u5909\u5316\u3092\u4ed8\u3051\u52a0\u3048\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5f71\u97ff\u306a\u3057\u306e\u69cb\u9020\u3001\u7279\u5fb4\u3001\u6307\u6570\u306b\u76f8\u5f53\u3059\u308b\u90e8\u5206\u306f\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u306b\u3082\u5f15\u304d\u7d99\u304c\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u5404\u30b0\u30e9\u30d5\u306e\u5206\u5272\u308a\u306fRDD\u306e\u3088\u3046\u306b\u6545\u969c\u6642\u306b\u306f\u9055\u3046\u30de\u30b7\u30fc\u30f3\u3067\u518d\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002  5-2-(2). \u30b0\u30e9\u30d5\u3092\u898b\u308b  \u6b86\u3069\u306e\u8981\u4ef6\u3067\u306f\u8a08\u7b97\u51e6\u7406\u306e\u7d50\u679c\u3092\u96c6\u5408\u3084\u30bb\u30fc\u30d6\u3059\u308b\u969b\u306b\u9802\u70b9\u3068\u8fba\u306eRDD\u5185\u89a7\u3092\u5c55\u958b\u3059\u308b\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u30b0\u30e9\u30d5\u306e\u30af\u30e9\u30b9\u306f\u9802\u70b9\u3068\u8fba\u306e\u7279\u6027\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u70ba\u306bgraph.vertices\u3068graph.edges\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\u3053\u306e\u30e1\u30f3\u30d0\u30fc\u306fRDD[(VertexId, V)]\u3068RDD[Edge[E]]\u306e\u62e1\u5f35\u578b\u3067\u3042\u308a\u3001GraphX\u5185\u90e8\u306e\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u63cf\u5199\u3092\u5229\u7528\u3057\u3066\u6700\u9069\u5316\u3055\u308c\u305f\u63cf\u5199\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u307e\u3059\u3002  graph.vertices\u3092\u4f7f\u3063\u306630\u6b73\u4ee5\u4e0a\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u898b\u3066\u307f\u308b\u3002\uff08\u547d\u4ee4\u306e\u4ed5\u65b9\u306f2\u901a\u308a\u3042\u308a\u3001\u51fa\u529b\u306f\u4ee5\u4e0b\u3067\u3059\uff09  scala  graph.vertices.filter { case (id, (name, age)) =  age   30 }.collect.foreach { case (id, (name, age)) =  println(s $name is $age ) }\nDavid is 42\nFran is 50\nCharlie is 65\nEd is 55\n\n//case\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\nscala  graph.vertices.filter(v =  v._2._2   30).collect.foreach(v =  println(s ${v._2._1} is ${v._2._2} ) )\n//\u4e0a\u3068\u540c\u3058  \u8fba\u3068\u9802\u70b9\u306e\u7279\u6027\u306b\u52a0\u3048\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306f\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\uff08\u4e09\u3064\u5b50\uff09\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u7279\u6027\u306e\u5185\u89a7\u3082\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u5185\u89a7\u306f\u9802\u70b9\u3068\u8fba\u306e\u7279\u6027\u3092\u7d71\u5408\u3055\u305bEdgeTriplet\u30af\u30e9\u30b9\u306e\u5b9f\u73fe\u5024\u3092\u542b\u3080RDD[EdgeTriplet[VD, ED]]\u3092\u4e0e\u3048\u307e\u3059\u3002\nEdgeTriplet\u30af\u30e9\u30b9\u306fEdge\u30af\u30e9\u30b9\u3092\u63a5\u7d9a\u5143\uff08srcAttr\uff09\u3068\u63a5\u7d9a\u5148\uff08dstAttr\uff09\u3092\u52a0\u3048\u3066\u62e1\u5f35\u3057\u305f\u5f62\u3067\u3059\u3002\n\u4ee5\u4e0b\u304c\u7d75\u3067\u8868\u3057\u305f\u3082\u306e\u3067\u3059\u3002   graph.triplets\u3092\u4f7f\u3063\u3066\u8ab0\u304c\u3069\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3044\u3044\u306d\uff01\u3092\u4e0e\u3048\u305f\u304b\u3092\u898b\u3066\u307f\u308b\u3002\uff082\u901a\u308a\u3042\u308b\uff09  scala  for (triplet  - graph.triplets.collect) { println(s ${triplet.srcAttr._1} likes ${triplet.dstAttr._1} ) }\nBob likes Alice\nBob likes David\nCharlie likes Bob\nCharlie likes Fran\nDavid likes Alice\nEd likes Bob\nEd likes Charlie\nEd likes Fran\n\n//for\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\nscala  graph.triplets.collect.foreach(triplet =  println(s ${triplet.srcAttr._1} likes ${triplet.dstAttr._1} ) )\u3000\n//\u4e0a\u3068\u540c\u3058  \u3044\u3044\u306d\uff01\u30925\u56de\u4ee5\u4e0a\u4e0e\u3048\u305f\u30e6\u30fc\u30b6\u30fc\u3092\u898b\u3066\u307f\u308b\u3002  scala  graph.triplets.filter(t =  t.attr   5).collect.foreach(triplet =  println(s ${triplet.srcAttr._1} loves ${triplet.dstAttr._1} ) )\nBob loves Alice\nEd loves Charlie", 
            "title": "5-2. GraphX API\u306e\u7d39\u4ecb"
        }, 
        {
            "location": "/graphx/#5-3", 
            "text": "\u4e00\u822c\u306eRDD\u306f\u57fa\u790e\u64cd\u4f5c\u3068\u3057\u3066count, map, filter, reduceByKey\u306a\u3069\u304c\u3042\u308b\u3088\u3046\u306b\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3082\u57fa\u790e\u64cd\u4f5c\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306fGraph\u3000API\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u4e00\u90e8\u306e\u95a2\u6570\u306e\u4f8b\u3067\u3059\u3002  /** \u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u306e\u6a5f\u80fd\u6027\u306e\u307e\u3068\u3081*/\nclass Graph[VD, ED] {\n  // \u30b0\u30e9\u30d5\u306e\u60c5\u5831\n  val numEdges: Long\n  val numVertices: Long\n  val inDegrees: VertexRDD[Int]\n  val outDegrees: VertexRDD[Int]\n  val degrees: VertexRDD[Int]\n\n  // \u30b0\u30e9\u30d5\u3092\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5185\u89a7\n  val vertices: VertexRDD[VD]\n  val edges: EdgeRDD[ED]\n  val triplets: RDD[EdgeTriplet[VD, ED]]\n\n  // \u5206\u5272\u308a\u904e\u7a0b\u3092\u5909\u3048\u308b\n  def partitionBy(partitionStrategy: PartitionStrategy): Graph[VD, ED]\n\n  // \u9802\u70b9\u3068\u8fba\u306e\u7279\u5fb4\u3092\u5909\u63db\u3059\u308b\n  def mapVertices[VD2](map: (VertexID, VD) =  VD2): Graph[VD2, ED]\n  def mapEdges[ED2](map: Edge[ED] =  ED2): Graph[VD, ED2]\n  def mapEdges[ED2](map: (PartitionID, Iterator[Edge[ED]]) =  Iterator[ED2]): Graph[VD, ED2]\n  def mapTriplets[ED2](map: EdgeTriplet[VD, ED] =  ED2): Graph[VD, ED2]\n\n  // \u30b0\u30e9\u30d5\u69cb\u9020\u3092\u5909\u66f4\u3059\u308b\n  def reverse: Graph[VD, ED]\n  def subgraph(\n      epred: EdgeTriplet[VD,ED] =  Boolean = (x =  true),\n      vpred: (VertexID, VD) =  Boolean = ((v, d) =  true))\n    : Graph[VD, ED]\n  def groupEdges(merge: (ED, ED) =  ED): Graph[VD, ED]\n\n  // RDD\u3092\u30b0\u30e9\u30d5\u3068\u7d71\u5408\u3059\u308b\n  def joinVertices[U](table: RDD[(VertexID, U)])(mapFunc: (VertexID, VD, U) =  VD): Graph[VD, ED]\n  def outerJoinVertices[U, VD2](other: RDD[(VertexID, U)])\n      (mapFunc: (VertexID, VD, Option[U]) =  VD2)\n    : Graph[VD2, ED]\n\n  // \u96a3\u306e\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306e\u60c5\u5831\u3092\u96c6\u5408\u3059\u308b\n  def collectNeighbors(edgeDirection: EdgeDirection): VertexRDD[Array[(VertexID, VD)]]\n  def mapReduceTriplets[A: ClassTag](\n      mapFunc: EdgeTriplet[VD, ED] =  Iterator[(VertexID, A)],\n      reduceFunc: (A, A) =  A)\n    : VertexRDD[A]\n\n  //\u3000\u53cd\u5fa9\u7684\u30b0\u30e9\u30d5\u4e26\u5217\u8a08\u7b97\n  def pregel[A](initialMsg: A, maxIterations: Int, activeDirection: EdgeDirection)(\n      vprog: (VertexID, VD, A) =  VD,\n      sendMsg: EdgeTriplet[VD, ED] =  Iterator[(VertexID,A)],\n      mergeMsg: (A, A) =  A)\n    : Graph[VD, ED]\n\n  // \u57fa\u672c\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n  def pageRank(tol: Double, resetProb: Double = 0.15): Graph[Double, Double]\n  def connectedComponents(): Graph[VertexID, ED]\n  def triangleCount(): Graph[Int, ED]\n  def stronglyConnectedComponents(numIter: Int): Graph[VertexID, ED]\n}  \u3053\u308c\u3089\u306e\u95a2\u6570\u306fGraph\u3068GraphOps\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001Scala\u306e\u6697\u9ed9\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066GraphOps\u306e\u64cd\u4f5c\u306f\u81ea\u52d5\u7684\u306bGraph\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002  \u4f8b\u3068\u3057\u3066\u3001\u5404\u9802\u70b9\u306b\u5165\u3063\u3066\u3044\u304f\u308b\u8fba\uff08\u5165\u6b21\u6570\uff09\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a08\u7b97\u3057\u307e\u3057\u3087\u3046\u3002\n\u5b9f\u884c\u4f8b\u3067\u305f\u3068\u3048\u308b\u3068\u8ab0\u304c\u8ab0\u306b\u3044\u3044\u306d\uff01\u3092\u8cb0\u3063\u305f\u304b\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002  val inDegrees: VertexRDD[Int] = graph.inDegrees  \u4e0a\u306e\u4f8b\u3067\u306fgraph.inDegrees\u30aa\u30da\u30ec\u30fc\u30bf\u304cVertexRDD[Int]\u3092\u8fd4\u3057\u307e\u3059\uff08\u3053\u308c\u306fRDD[(VertexId, Int)]\u3068\u3057\u3066\u52d5\u304f\u3053\u3068\u3092\u899a\u3048\u3066\u304f\u3060\u3055\u3044\uff09\u3002\n\u3053\u3053\u3067\u5165\u6b21\u6570\u3068\u51fa\u6b21\u6570\u3092\u5404\u9802\u70b9\u306b\u9802\u70b9\u7279\u5fb4\u3068\u3057\u3066\u5408\u4f53\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u4f5c\u696d\u306f\u4e00\u822c\u7684\u306a\u30b0\u30e9\u30d5\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\u3067\u4f7f\u3044\u307e\u3059\u3002  \u306f\u3058\u3081\u306b\u3001\u52a0\u3048\u308b\u7279\u6027\uff08inDeg\u3068outDeg)\u3092\u6574\u5217\u3059\u308b\u305f\u3081\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u3053\u306e\u30e6\u30fc\u30b6\u7279\u5fb4\u3092\u4f7f\u3063\u3066\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3092\u4f5c\u308a\u307e\u3059\u3002  \u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u30e6\u30fc\u30b6\u7279\u5fb4\u3092\u3082\u3063\u3068\u660e\u78ba\u306b\u5f62\u6210\u3057\u307e\u3059\u3002\nscala  case class User(name: String, age: Int, inDeg: Int, outDeg: Int)\ndefined class User\n\n\u30e6\u30fc\u30b6\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nscala  val initialUserGraph: Graph[User, Int] = graph.mapVertices{ case(id, (name, age)) =  User(name, age, 0, 0) }\ninitialUserGraph: org.apache.spark.graphx.Graph[User,Int] = org.apache.spark.graphx.impl.GraphImpl@2fb38a1a  \u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3092\u4f5c\u3063\u305f\u969b\u306f\u5404\u9802\u70b9\u306e\u5165\u6b21\u6570\u3068\u51fa\u6b21\u6570\u306e\u521d\u671f\u8a2d\u5b9a\u30920\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u3053\u306e\u60c5\u5831\u3092\u30b0\u30e9\u30d5\u306b\u8aad\u307f\u8fbc\u307f\u65b0\u3057\u3044\u9802\u70b9\u7279\u6027\u3092\u69cb\u7bc9\u3057\u307e\u3057\u305f\u3002  \u5165\u6b21\u6570\u3068\u51fa\u6b21\u6570\u306e\u60c5\u5831\u3092\u57cb\u3081\u8fbc\u307f\u307e\u3059\u3002\nscala  val userGraph = initialUserGraph.outerJoinVertices(initialUserGraph.inDegrees) { case (id, u, inDegOpt) =  User(u.name, u.age, inDegOpt.getOrElse(0), u.outDeg) }.outerJoinVertices(initialUserGraph.outDegrees) { case (id, u, outDegOpt) =  User(u.name, u.age, u.inDeg, outDegOpt.getOrElse(0)) }\nuserGraph: org.apache.spark.graphx.Graph[User,Int] = org.apache.spark.graphx.impl.GraphImpl@1a9fea8  \u3053\u3053\u3067\u306fouterJoinVertices\u3068\u3044\u3046\u30b0\u30e9\u30d5\u306e\u30e1\u30bd\u30c3\u30c9\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\uff08\u6df7\u4e71\u3057\u305d\u3046\u306a\uff09\u30b7\u30b0\u30cd\u30c1\u30e3\u30bf\u30a4\u30d7\u3067\u3059\u3002  def outerJoinVertices[U, VD2](other: RDD[(VertexID, U)])\n      (mapFunc: (VertexID, VD, Option[U]) =  VD2)\n    : Graph[VD2, ED]  \u304a\u6c17\u3065\u304d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304couterJoinVertices\u306f\u4e8c\u3064\u306e\u5f15\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e00\u3064\u76ee\u304c\u9802\u70b9\u5024\u306eRDD\u3067\u3001\u4e8c\u3064\u76ee\u306e\u30ea\u30b9\u30c8\u5f15\u6570\u304cRDD\u306eid, attribute, Optional\u3067\u5408\u308f\u305b\u308b\u5024\u304b\u3089\u306e\u95a2\u6570\u3092\u53d7\u3051\u3066\u65b0\u3057\u3044\u9802\u70b9\u5024\u306b\u6d41\u3057\u307e\u3059\u3002\n\u5165\u529bRDD\u304c\u591a\u5c11\u30b0\u30e9\u30d5\u306e\u9802\u70b9\u306e\u5024\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u306fOption\u5f15\u6570\u304c\u7a7a\u3067optOutDeg.getOrElse(0)\u304c0\u3092\u8fd4\u3057\u307e\u3059\u3002  \u65b0\u3057\u304f\u3067\u304d\u305fuserGraph\u3092\u4f7f\u3063\u3066\u3001\u3069\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u4f55\u4eba\u304b\u3089\u3044\u3044\u306d\uff01\u3092\u8cb0\u3063\u305f\u304b\u3092\u898b\u3066\u307f\u307e\u3059\u3002  scala  for ((id, property)  - userGraph.vertices.collect) { println(s User $id is called ${property.name} and is liked by ${property.inDeg} people. ) }\nUser 4 is called David and is liked by 1 people.\nUser 1 is called Alice and is liked by 2 people.\nUser 6 is called Fran and is liked by 2 people.\nUser 3 is called Charlie and is liked by 1 people.\nUser 5 is called Ed and is liked by 0 people.\nUser 2 is called Bob and is liked by 2 people.  \u6700\u5f8c\u306b\u3044\u3044\u306d\u3092\u4e0e\u3048\u305f\u4eba\u6570\u3068\u8cb0\u3063\u305f\u4eba\u6570\u304c\u540c\u3058\u30e6\u30fc\u30b6\u30fc\u3092\u898b\u3066\u307f\u307e\u3059\u3002  scala  userGraph.vertices.filter { case (id, u) =  u.inDeg == u.outDeg }.collect.foreach { case (id, property) =  println(property.name) }\nDavid\nBob  5-3-(1). MapReduceTriplet\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30bf  5-2-(1) \u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u30b0\u30e9\u30d5\u3092\u4f7f\u3063\u3066\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30fc\u30ef\u30fc\u3092\u63a2\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u4f5c\u696d\u306fmapReduceTriplet\u30aa\u30da\u30ec\u30fc\u30bf\u304c\u53ef\u80fd\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3053\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u306fGraphX\u3067\u5fb9\u5e95\u7684\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30b3\u30a2\u3068\u306a\u308b\u96c6\u7d04\u6a5f\u80fd\u3067\u3059\u3002  \u30da\u30fc\u30b8\u30e9\u30f3\u30af\u306a\u3069\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u8fd1\u63a5\u9802\u70b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53cd\u5fa9\u7684\u306b\u96c6\u7d04\u3059\u308b\u306e\u3067\u3001\u8fd1\u63a5\u96c6\u5408\u306f\u30b0\u30e9\u30d5\u8a08\u7b97\u3067\u6700\u3082\u91cd\u8981\u3067\u3059\u3002  \u3053\u306e\u64cd\u4f5c\u306e\u5358\u7d14\u5316\u3057\u305f\u30b7\u30b0\u30cd\u30c1\u30e3\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002  class Graph[VD, ED] {\n  def mapReduceTriplets[MsgType](\n      // \u30a8\u30c3\u30b8\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3078\u306e\u95a2\u6570 (\u3059\u306a\u308f\u3061 Map)\n      map: EdgeTriplet[VD, ED] =  Iterator[(VertexId, MsgType)],\n      // \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u540c\u3058\u9802\u70b9\u306b\u7d50\u5408\u3059\u308b\u95a2\u6570 (\u3059\u306a\u308f\u3061 Reduce)\n      reduce: (MsgType, MsgType) =  MsgType)\n    : VertexRDD[MsgType]\n}  map\u95a2\u6570\u306f\u5404\u30a8\u30c3\u30b8\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306b\u9069\u7528\u3055\u308c\u7e4b\u3044\u3067\u3044\u308b\u9802\u70b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001reduce\u95a2\u6570\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5404\u9802\u70b9\u3054\u3068\u306b\u96c6\u7d04\u3057\u307e\u3059\u3002\n\u3053\u306e\u64cd\u4f5c\u306e\u7d50\u679c\u306f\u5404\u9802\u70b9\u306b\u96c6\u7d04\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u542b\u3080VertexRDD\u3067\u3059\u3002  \u5404\u30e6\u30fc\u30b6\u306e\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306f\u305d\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u540d\u524d\u3068\u5e74\u9f62\u3092\u542b\u3093\u3060\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u3001\u4e00\u756a\u5e74\u4e0a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3060\u3051\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \u5404\u30e6\u30fc\u30b6\u306e\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30fc\u30ef\u30fc\u3092\u63a2\u3059\u3002  scala  val oldestFollower: VertexRDD[(String, Int)] = userGraph.mapReduceTriplets[(String, Int)]( edge =  Iterator((edge.dstId, (edge.srcAttr.name, edge.srcAttr.age))), (a, b) =  if (a._2   b._2) a else b)\n\u5404\u30a8\u30c3\u30b8\u304b\u3089\u63a5\u7d9a\u5148\u306e\u7279\u6027\u3092\u8f09\u305b\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63a5\u7d9a\u5148\u306b\u9001\u308a\u307e\u3059\n\noldestFollower: org.apache.spark.graphx.VertexRDD[(String, Int)] = VertexRDDImpl[49] at RDD at VertexRDD.scala:57  \u5404\u30e6\u30fc\u30b6\u306e\u4e00\u756a\u5e74\u4e0a\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u3092\u8868\u793a\u3057\u307e\u3059\u3002  scala  userGraph.vertices.leftJoin(oldestFollower) { (id, user, optOldestFollower) =  optOldestFollower match { case None =  s ${user.name} does not have any followers.  case Some((name, age)) =  s ${name} is the oldest follower of ${user.name}.  } }.collect.foreach { case (id, str) =  println(str) }\n\n\nDavid is the oldest follower of Alice.\nCharlie is the oldest follower of Fran.\nEd is the oldest follower of Charlie.\nBob is the oldest follower of David.\nEd does not have any followers.\nCharlie is the oldest follower of Bob.  \u5404\u30e6\u30fc\u30b6\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306e\u5e73\u5747\u5e74\u9f62\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002  scala  val averageAge: VertexRDD[Double] = userGraph.mapReduceTriplets[(Int, Double)]( edge =  Iterator((edge.dstId, (1, edge.srcAttr.age.toDouble))), (a, b) =  ((a._1 + b._1), (a._2 + b._2)) ).mapValues((id, p) =  p._2 / p._1)\naverageAge: org.apache.spark.graphx.VertexRDD[Double] = VertexRDDImpl[57] at RDD at VertexRDD.scala:57\n\nscala  userGraph.vertices.leftJoin(averageAge) { (id, user, optAverageAge) =  optAverageAge match { case None =  s ${user.name} does not have any followers.  case Some(avgAge) =  s The average age of ${user.name}\\'s followers is $avgAge.  } }.collect.foreach { case (id, str) =  println(str) }\nThe average age of David's followers is 27.0.\nThe average age of Alice's followers is 34.5.\nThe average age of Fran's followers is 60.0.\nThe average age of Charlie's followers is 55.0.\nEd does not have any followers.\nThe average age of Bob's followers is 60.0.  5-3-(2). \u30b5\u30d6\u30b0\u30e9\u30d5  30\u6b73\u4ee5\u4e0a\u306e\u30e6\u30fc\u30b6\u304b\u3089\u306a\u308b\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3092\u8a73\u3057\u304f\u8abf\u3079\u305f\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306b\u306a\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u69d8\u306a\u5206\u6790\u3092\u884c\u3046\u305f\u3081\u306bGraphX\u306e\u30b5\u30d6\u30b0\u30e9\u30d5\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30b5\u30d6\u30b0\u30e9\u30d5\u3068\u306f\u5168\u4f53\u306e\u30b0\u30e9\u30d5\u306e\u4e00\u90e8\u3092\u5207\u308a\u53d6\u308a\u4f5c\u6210\u3057\u305f\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\u9802\u70b9\u306f\u30e6\u30fc\u30b6\u304c\u8a18\u8ff0\u3057\u305f\u9802\u70b9\u6027\u8cea\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u7269\u306e\u307f\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\u8fba\u3082\u540c\u3058\u304f\u30e6\u30fc\u30b6\u304c\u8a18\u8ff0\u3057\u305f\u8fba\u6027\u8cea\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u7269\u3060\u3051\u304c\u8fd4\u3055\u308c\u3066\u3001\u7e4b\u3044\u3067\u3044\u308b\u9802\u70b9\u306f\u8a18\u8ff0\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u308b\u7269\u3060\u3051\u3092\u7e4b\u3052\u307e\u3059\u3002  \u3053\u3053\u304b\u3089\u306fsubgraph\u3092\u4f7f\u3063\u3066\u30b0\u30e9\u30d5\u309230\u6b73\u4ee5\u4e0a\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u5236\u9650\u3057\u307e\u3059\u3002  scala  val olderGraph = userGraph.subgraph(vpred = (id, user) =  user.age  = 30)\nolderGraph: org.apache.spark.graphx.Graph[User,Int] = org.apache.spark.graphx.impl.GraphImpl@68941ca4  \u3053\u306e\u5236\u9650\u3055\u308c\u305f\u30b0\u30e9\u30d5\u5185\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3092\u8003\u5bdf\u3057\u3066\u307f\u307e\u3059\u3002  scala  olderGraph.vertices.leftJoin(cc.vertices) { case (id, user, comp) =  s ${user.name} is in component ${comp.get}  }.collect.foreach{ case (id, str) =  println(str) }\nDavid is in component 4\nFran is in component 3\nCharlie is in component 3\nEd is in component 3  \u7e4b\u304c\u3063\u3066\u3044\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u305d\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5185\u3067\u4e00\u756a\u4f4e\u3044VertexId\u304c\u6a19\u8b58\u306b\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30d6\u30b0\u30e9\u30d5\u3092\u8abf\u67fb\u3057\u3066\u307f\u307e\u3059\u3068\u3001David\u304c\u6b8b\u308a\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5207\u65ad\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001David\u306f\u5143\u306e\u30b0\u30e9\u30d5\u3067\u306f\u82e5\u3044\u30e6\u30fc\u30b6\u3092\u901a\u3057\u3066\u7e4b\u304c\u3063\u3066\u3044\u305f\u3068\u89e3\u308a\u307e\u3059\u3002", 
            "title": "5-3. \u30b0\u30e9\u30d5\u30aa\u30da\u30ec\u30fc\u30bf\uff08\u64cd\u4f5c\uff09"
        }, 
        {
            "location": "/graphx/#5-4", 
            "text": "\u3053\u3053\u307e\u3067\u3067GraphX API\u306e\u500b\u3005\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5b66\u7fd2\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u5171\u540c\u3057\u3066\u30ea\u30a2\u30eb\u5206\u6790\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u69cb\u7bc9\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u304b\u3089\u306f\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u306e\u30ea\u30f3\u30af\u30c7\u30fc\u30bf\u304b\u3089\u306f\u3058\u3081\u3001GraphX\u64cd\u4f5c\u3092\u7528\u3044\u3066\u69cb\u9020\u3092\u5206\u6790\u3057\u3001Spark\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u3067\u30b0\u30e9\u30d5\u5206\u6790\u306e\u51fa\u529b\u3092\u8abf\u3079\u307e\u3059\u3002\n\u3053\u308c\u3089\u306f\u3059\u3079\u3066Spark\u30b7\u30a7\u30eb\u304b\u3089\u884c\u3044\u307e\u3059\u3002  GraphX\u306f\u6700\u9069\u306a\u6027\u80fd\u3092\u5f97\u308b\u305f\u3081\u306bKyro\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n\u4eca\u3001\u3069\u3093\u306a\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u3092\u8abf\u3079\u308b\u305f\u3081\u306bhttp://localhost:4040/environment\u306b\u79fb\u884c\u3057\u3066Spark Shell UI\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u3057\u3066spark.serializer\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002   \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Kyro\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u306f\u30aa\u30d5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u7df4\u7fd2\u3067\u306f\u3001Spark\u30b7\u30a7\u30eb\u5185\u306eKyro\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3092\u30aa\u30f3\u306b\u3059\u308b\u624b\u9806\u3092\u8aac\u660e\u3092\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001Spark\u30b7\u30a7\u30eb\u3092\u629c\u3051\u3066\u304f\u3060\u3055\u3044\uff08exit\u304bctrl-c\u3092\u5165\u529b\uff09\u3002  \u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\uff08Emacs\u3084Vim\u306a\u3069\uff09\u3067spark/conf/spark-env.sh\u3092\u958b\u304d\u3001\u4ee5\u4e0b\u3092\u4ed8\u3051\u52a0\u3048\u3066\u304f\u3060\u3055\u3044\u3002  SPARK_JAVA_OPTS+='\n\u3000-Dspark.serializer=org.apache.spark.serializer.KryoSerializer\n\u3000-Dspark.kyro.registrator=org.apache.spark.graphx.GraphKryoRegistrator \u2018\nexport SPARK_JAVA_OPTS  \u305d\u308c\u304b\u9762\u5012\u306a\u6c17\u5206\u3067\u3057\u305f\u3089\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u8cbc\u3063\u3066\u304f\u3060\u3055\u3044\uff08SparkShell\u3067\u306f\u306a\u304f\uff09\u3002  usb/$ echo -e  SPARK_JAVA_OPTS+=' -Dspark.serializer=org.apache.spark.serializer.KryoSerializer -Dspark.kryo.registrator=org.apache.spark.graphx.GraphKryoRegistrator ' \\nexport SPARK_JAVA_OPTS    spark/conf/spark-env.sh  \u3053\u3053\u3067\u3001Spark Shell\u3092\u518d\u8d77\u52d5\u3057\u3066\u3082\u3046\u4e00\u5ea6\u74b0\u5883\u72b6\u6cc1\u3092http://localhost:4040/environment\u3067\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u30d7\u30ed\u30d1\u30c6\u30a3\u304corg.apache.spark.serializer.KyroSerializer\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002  5-4-(1). \u518d\u8d77\u52d5  Spark\u30b7\u30a7\u30eb\u3092\u8d77\u52d5\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002  training/ $ spark/bin/spark-shell\nscala \n\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD  5-4-(2). \u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u8a18\u4e8b\u306e\u8aad\u307f\u8fbc\u307f  \u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u306f\u767e\u79d1\u4e8b\u5178\u3059\u3079\u3066\u306e\u8a18\u4e8b\u3092 XML\u72b6\u306e\u584a \u3068\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u65b0\u306e\u3082\u306e\u306f44GB\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u524d\u51e6\u7406\u3068\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\uff08\u3082\u3061\u308d\u3093Spark\u3068GraphX\u3092\u4f7f\u3063\u3066\uff09\u884c\u3063\u3066USB\u30c9\u30e9\u30a4\u30d6\u306b\u53ce\u307e\u308a\u304d\u308b\u7a0b\u5ea6\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u306f\u201dBerkeley\u201d\u306e\u5165\u3063\u305f\u8a18\u4e8b\u3068\u305d\u306e\u8a18\u4e8b\u304b\u3089\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b\u30fb\u3057\u3066\u3044\u308b\u8a18\u4e8b\u3092\u5207\u308a\u53d6\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u7d50\u679c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u4e8c\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u201cdata/graphx/graphx-wiki-vertices.txt\u201d\u3068\u201ddata/graphx/graphx-edges.txt\u201d\u3067\u3059\u3002\n\u6700\u521d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u8a18\u4e8b\u306eID\u3068\u30bf\u30a4\u30c8\u30eb\u3092\u8a18\u9332\u3057\u3066\u3042\u308a\u3001\u4e8c\u500b\u76ee\u304c\u30ea\u30f3\u30af\u69cb\u9020\u3092\u63a5\u7d9a\u5143-\u63a5\u7d9a\u5148ID\u30da\u30a2\u3068\u3057\u3066\u8a18\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002  \u3053\u306e\u4e8c\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092RDD\u306b\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002  scala  val articles: RDD[String] = sc.textFile( data/graphx/graphx-wiki-vertices.txt )\n//articles: org.apache.spark.rdd.RDD[String] = data/graphx/graphx-wiki-vertices.txt MappedRDD[1] at textFile at  console :16\n\nscala  val links: RDD[String] = sc.textFile( data/graphx/graphx-wiki-edges.txt )\n//links: org.apache.spark.rdd.RDD[String] = data/graphx/graphx-wiki-edges.txt MappedRDD[3] at textFile at  console :16  5-4-(3). \u6700\u521d\u306e\u8a18\u4e8b\u3092\u898b\u308b  articles.first\n// res1: String = 6598434222544540151      Adelaide Hanscom Leeson  5-4-(4). \u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3059\u308b  \u3055\u3042\u3001\u8a18\u4e8b\u3068\u30ea\u30f3\u30af\u3092\u4f7f\u3063\u3066\u30d0\u30fc\u30af\u30ec\u30fc\u5927\u5b66\u306b\u95a2\u308f\u308b\u8a18\u4e8b\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002  \u307e\u305a\u306f\u8a18\u4e8b\u306e\u5217\u3092\u9802\u70b9ID\u3068\u30bf\u30a4\u30c8\u30eb\u306e\u30da\u30a2\u306b\u5206\u89e3\u3057\u307e\u3059\u3002  scala  val vertices = articles.map { line =  val fields = line.split('\\t'); (fields(0).toLong, fields(1)) }\n\n// vertices: org.apache.spark.rdd.RDD[(Long, String)] = MappedRDD[4] at map at  console :18  \u6b21\u306b\u30ea\u30f3\u30af\u306e\u5217\u3092\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306e\uff10\u3092\u52a0\u3048\u3066\u8fba\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5206\u89e3\u3057\u307e\u3059\u3002  scala  val edges = links.map { line =  val fields = line.split('\\t'); Edge(fields(0).toLong, fields(1).toLong, 0) }\n//edges: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Int]] = MappedRDD[5] at map at  console :18  \u6700\u5f8c\u306b\u30b0\u30e9\u30d5\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u9802\u70b9RDD\u3001\u8fbaRDD\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9802\u70b9\u6027\u8cea\u3068\u4e00\u7dd2\u306b\u547c\u3093\u3067\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9802\u70b9\u6027\u8cea\u306f\u9802\u70b9RDD\u306b\u5b58\u5728\u3057\u306a\u3044\u3001\u8fba\u3067\u7d50\u3070\u308c\u3066\u3044\u308b\u9802\u70b9\uff08\u30ea\u30f3\u30af\u3067\u7e4b\u304c\u3063\u3066\u3044\u308b\u8a18\u4e8b\uff09\u306e\u521d\u671f\u5316\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u3059\u3067\u306b\u8abf\u548c\u3057\u306a\u3044\u3082\u306e\u306f\u53d6\u308a\u9664\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u73fe\u5b9f\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u58ca\u308c\u3066\u3044\u308b\u30ea\u30f3\u30af\u5148\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9802\u70b9\u6027\u8cea\u3092\u7a7a\u306e\u30bf\u30a4\u30c8\u30eb\u6587\u5b57\u5217\u3068\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002  \u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u518d\u8aad\u307f\u8fbc\u307f\u3092\u9632\u3050\u305f\u3081\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u3057\u3066\u304b\u3089\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002  scala  val graph = Graph(vertices, edges,  ).cache()\n// graph: org.apache.spark.graphx.Graph[String,Int] = org.apache.spark.graphx.impl.GraphImpl@5b1e4029  \u30b0\u30e9\u30d5\u3092\u5f37\u5236\u7684\u306b\u8a08\u7b97\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u4f55\u500b\u306e\u8a18\u4e8b\u304c\u3053\u306e\u30b0\u30e9\u30d5\u306b\u3042\u308b\u304b\u3092\u6570\u3048\u307e\u3057\u3087\u3046\u3002  scala  graph.vertices.count\nres2: Long = 22424  GraphX\u306f\u6700\u521d\u306e\u30b0\u30e9\u30d5\u304c\u4f5c\u6210\u3055\u308c\u308b\u6642\u3001\u3059\u3079\u3066\u306e\u9802\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u5b58\u5728\u3057\u306a\u3044\u9802\u70b9\u306e\u5834\u6240\u306b\u4ee3\u308f\u308a\u3092\u5206\u914d\u3057\u307e\u3059\u3002\n\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306e\u8a08\u7b97\u51e6\u7406\u306f\u8ffd\u52a0\u306e\u7d71\u5408\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u304c\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u304a\u304b\u3052\u3067\u901f\u304f\u52d5\u3044\u3066\u304f\u308c\u307e\u3059\u3002  \u306f\u3058\u3081\u306b\u6570\u500b\u306e\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002  scala  graph.triplets.count\nres3: Long = 31312\n\nscala  graph.triplets.take(5).foreach(println(_))\n((146271392968588,Computer Consoles Inc.),(7097126743572404313,Berkeley Software Distribution),0)\n((146271392968588,Computer Consoles Inc.),(8830299306937918434,University of California, Berkeley),0)\n((625290464179456,List of Penguin Classics),(1735121673437871410,George Berkeley),0)\n((1342848262636510,List of college swimming and diving teams),(8830299306937918434,University of California, Berkeley),0)\n((1889887370673623,Anthony Pawson),(8830299306937918434,University of California, Berkeley),0)  \u5148\u307b\u3069\u8a00\u3063\u305f\u901a\u308a\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5185\u306e\u30c8\u30ea\u30d7\u30ec\u30c3\u30c8\u306f\u201dBerkeley\u201d\u306e\u6587\u5b57\u304c\u63a5\u7d9a\u5143\u304b\u63a5\u7d9a\u5148\u306e\u8a18\u4e8b\u30bf\u30a4\u30c8\u30eb\u306b\u73fe\u308c\u307e\u3059\u3002  5-4-(5). \u30da\u30fc\u30b8\u30e9\u30f3\u30af\u3092\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u3067\u884c\u3046  \u6b21\u306b\u30b0\u30e9\u30d5\u5206\u6790\u3092\u958b\u59cb\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f \u30da\u30fc\u30b8\u30e9\u30f3\u30af \u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u30b0\u30e9\u30d5\u5185\u306e\u6700\u3082\u91cd\u8981\u306a\u30da\u30fc\u30b8\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002 \u30da\u30fc\u30b8\u30e9\u30f3\u30af \u306f\u5c0f\u3055\u3044\u306a\u304c\u3089\u3082\u6210\u9577\u306e\u7d9a\u3044\u3066\u3044\u308b\u3001GraphX\u306b\u3059\u3067\u306b\u5b9f\u88c5\u3055\u308c\u305f\u4e00\u822c\u7684\u306a\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u90e8\u3067\u3059\u3002\n\u5b9f\u884c\u65b9\u6cd5\u306f\u5358\u7d14\u3067\u8907\u96d1\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u5358\u306b\u521d\u671f\u8a2d\u5b9a\u306e\u30b3\u30fc\u30c9\u3001\u9802\u70b9\u30d7\u30ed\u30b0\u30e9\u30e0\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u30b3\u30f3\u30d0\u30a4\u30ca\u3092Pregel\u306e\u9001\u308b\u3060\u3051\u3067\u3067\u304d\u307e\u3059\u3002  graph.pageRank\u3092\u4f7f\u3063\u3066\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u3092\u884c\u3046\u3002  scala  val prGraph = graph.pageRank(0.001).cache()\n// prGraph: org.apache.spark.graphx.Graph[Double,Double] = org.apache.spark.graphx.impl.GraphImpl@3153be16  \u3053\u306e\u7d50\u679c\u306f\u9802\u70b9\u6027\u8cea\u304c\u5404\u30da\u30fc\u30b8\u306e\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u5024\u3092\u4ed8\u3051\u305f\u30b0\u30e9\u30d5\u3092\u8fd4\u3057\u307e\u3059\u3002\n0.001\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u8a31\u5bb9\u8aa4\u5dee\u3067\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u306e\u5883\u754c\u5024\u3067\u3059\u3002  \u554f\u984c\u306fprGraph\u304c\u30bf\u30a4\u30c8\u30eb\u306a\u3069\u306e\u6700\u521d\u306e\u9802\u70b9\u6027\u8cea\u3092\u542b\u3093\u3067\u304a\u3089\u305a\u30da\u30fc\u30b8\u30e9\u30f3\u30af\u5024\u3057\u304b\u6301\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u5143\u306egraph\u304c\u305d\u306e\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u9802\u70b9\u306e\u7d71\u5408\u3092\u884c\u3046\u3053\u3068\u3067prGraph\u306e\u9802\u70b9\u306e\u30e9\u30f3\u30af\u5024\u3068graph\u306e\u9802\u70b9\u306e\u8a18\u4e8b\u30bf\u30a4\u30c8\u30eb\u3092\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u51fa\u6765\u4e0a\u304c\u308b\u306e\u304c\u4e8c\u3064\u306e\u60c5\u5831\u3092\u7d71\u5408\u3055\u308c\u305f\u65b0\u3057\u3044\u30b0\u30e9\u30d5\u3067\u3001\u9802\u70b9\u6027\u8cea\u3092\u30bf\u30d7\u30eb\u578b\u3068\u3057\u3066\u30bb\u30fc\u30d6\u3067\u304d\u307e\u3059\u3002\n\u305d\u3053\u3067\u3053\u306e\u65b0\u3057\u3044\u30ea\u30b9\u30c8\u304b\u3089Top10\u306e\u9802\u70b9\u3092\u63a2\u3059\u3053\u3068\u3084\u305d\u308c\u306b\u4e00\u81f4\u3059\u308b\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u306a\u3069\u306e\u30c6\u30fc\u30d6\u30eb\u578b\u306e\u64cd\u4f5c\u3092\u3053\u306e\u9802\u70b9\u306b\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u4f5c\u696d\u306f\u3092\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u300c\u30d0\u30fc\u30af\u30ec\u30fc\u300d\u30b5\u30d6\u30b0\u30e9\u30d5\u306e\u306a\u304b\u3067\u91cd\u8981\u6027Top10\u306e\u30da\u30fc\u30b8\u3092\u63a2\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  scala  val titleAndPrGraph = graph.outerJoinVertices(prGraph.vertices) { (v, title, rank) =  (rank.getOrElse(0.0), title) }\n// titleAndPrGraph: org.apache.spark.graphx.Graph[(Double, String),Int] = org.apache.spark.graphx.impl.GraphImpl@7c7a6ea8\n\n\nscala  titleAndPrGraph.vertices.top(10) { Ordering.by((entry: (VertexId, (Double, String))) =  entry._2._1) }.foreach(t =  println(t._2._2 +  :   + t._2._1))\n\nUniversity of California, Berkeley: 1321.111754312097\nBerkeley, California: 664.8841977233583\nUc berkeley: 162.50132743397873\nBerkeley Software Distribution: 90.4786038848606\nLawrence Berkeley National Laboratory: 81.90404939641944\nGeorge Berkeley: 81.85226118457985\nBusby Berkeley: 47.871998218019655\nBerkeley Hills: 44.76406979519754\nXander Berkeley: 30.324075347288037\nBerkeley County, South Carolina: 28.908336483710308  \u3053\u308c\u3067GraphX\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u7ae0\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\u3053\u306e\u307e\u307e\u30b3\u30fc\u30c9\u3092\u89e6\u308a\u7d9a\u3051\u308b\u3053\u3068\u3068 GraphX\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9 \u3092\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u88dc\u8db3\u3068\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002", 
            "title": "5-4. \u30ea\u30a2\u30eb\u30c7\u30fc\u30bf\u4e0a\u306e\u7aef\u672b\u9593\u306e\u30b0\u30e9\u30d5\u5206\u6790\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210"
        }, 
        {
            "location": "/sparkr/", 
            "text": "6. Spark R\n\n\n\u3053\u306e\u7ae0\u3067\u306f\u3001SparkR\u30b7\u30a7\u30eb\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30ad\u307a\u30c7\u30a3\u30a2\u306e\u30c7\u30fc\u30bf\u3092\u5bfe\u8a71\u7684\uff08\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\uff09\u306b\u63a2\u7a76\u3057\u307e\u3059\u3002\n\n\n6-1. \u5fc5\u9808\u3067\u3042\u308b\u3082\u306e\n\n\nSparkR\u306e\u7df4\u7fd2\u3092\u884c\u3046\u306b\u306f\u3001R\u3068rJava\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u5fc5\u8981\u306a\u30d0\u30a4\u30ca\u30ea\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08training-downloads.zip\u3092\u53c2\u7167\uff09\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u307e\u305a\u306fR\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u30b7\u30a7\u30eb\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n\n$ sudo yum install R\n$ R\n\n\n\n\n\u305d\u308c\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u547d\u4ee4\u3092R\u30b7\u30a7\u30eb\u304b\u3089\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nrJava\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u6b63\u5e38\u306b\u52d5\u304f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306brJava\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n\n install.packages(\u201crJava\u201d)\n\n library(rJava)\n\n\n\n\n\u3082\u3057\u3001\uff12\u884c\u76ee\u306e\u30b3\u30de\u30f3\u30c9\u306e\u5f8c\u306b\u4f55\u306e\u51fa\u529b\u304c\u3067\u306a\u3051\u308c\u3070\u3001rJava\u304c\u6b63\u5e38\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u62e0\u3067\u3059\u3002\n\u3082\u3057\u3001rJava\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d\u306b\u30a8\u30e9\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u307e\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u3092\u884c\u3044R\u306eJava\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\nR\u306eJava\u8a2d\u5b9a\u3000\uff08\u6b63\u5e38\u306b\u52d5\u3044\u3066\u3044\u305f\u3089\u7121\u8996\uff09\n\n\ntraining/ $ R CMD javareconf -e\u3000 //training\u3068\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30c7\u30fc\u30bf\u3092\u5165\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\n\n\u3053\u308c\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3089\u3001R\u3092\u518d\u8d77\u52d5\u3057\u3066rJava\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n6-2. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u78ba\u4fdd\n\n\n1-1. \u7528\u610f\u3059\u308b\u3082\u306e\n\u306e\u6ce8\u610f\u4e8b\u9805\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u9069\u3057\u305ftraining-downloads.zip\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5c55\u958b\u3057\u307e\u3057\u305f\u3089\u3001\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\n\n6-3. SparkContext\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u4f5c\u6210\n\n\n\u4e0b\u306e\u30b3\u30fc\u30c9\u306fMac OS X\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001Linux\u3084Windows\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\n\ntraining/ $ R                                   \n //\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089R\u3092\u8d77\u52d5\u3059\u308b\u3002\n\n\n pkgPath \n- \u201cSparkR/linux/SparkR_0.1_R_x86_64-redhat-linux-gnu.tar.gz\u201d  \n//\u4f7f\u7528\u3057\u3066\u3044\u308bOS\u306b\u5408\u308f\u305b\u308b\u3053\u3068\u3068\u3001\u6700\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3082\u5165\u3063\u3066\u3044\u308b\u3082\u3068\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002\n\n\n install.packages(pkgPath)\n\nInstalling package into \u2018/usr/lib64/R/library\u2019\n(as \u2018lib\u2019 is unspecified)\ninferring 'repos = NULL' from 'pkgs'\n* installing *binary* package \u2018SparkR\u2019 ...\n* DONE (SparkR)\nMaking 'packages.html' ... done\u3000\u3000//\u5b9f\u884c\u3057\u305f\u6642\u306e\u51fa\u529b\n\n\n\n\n*\u6ce8\u610frJava\u304c\u30ed\u30fc\u30c9(library(rJava))\u3055\u308c\u3066\u3044\u306a\u3044\u3068SparkR\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u305b\u3093\u3002\n\n\nSparkR\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\u3089\u3001R\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\n\n library(SparkR)\n\n Sys.setenv(SPARK_MEM=\u201c1g\u201d)\u3000\u3000\n\n sc \n- sparkR.init(master=\u201clocal[*]\u201d)         //SparkContext\u3092\u4f5c\u6210\u3057\u307e\u3059\n\n sc\n[1] \nJava-Object{org.apache.spark.api.java.JavaSparkContext@1678991a}\n\n\n\n\n\n6-4. \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u5206\u6790\n\n\n\u305d\u308c\u3067\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u9806\u5e8f\u7d71\u8a08\u3092\u884c\u3044\u307e\u3057\u3087\u3046\u3002\n\n\n1.\u306f\u3058\u3081\u306b\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304b\u3089data\u3068\u3044\u3046\u540d\u306eRDD\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\n\u5148\u307b\u3069\u306e\u5c0f\u533a\u5225\u3067sc\u3068\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u3067\u3042\u308bSparkContext\u304cSparkR\u30b7\u30a7\u30eb\u306e\u4e2d\u3067\u5165\u624b\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n\n sc\n[1] \nJava-Object{org.apache.spark.api.java.JavaSparkContext@1678991a}\n\n\n\n data \n- textFile(sc, \u201cdata/tsv_wiki\u201d)\n\n data\n\nAn object of class \nRDD\n\nSlot \nenv\n:\n\nenvironment: 0x20a3b28\n\nSlot \njrdd\n:\n[1] \nJava-Object{data/tsv_wiki MappedRDD[1] at textFile at \nunknown\n:0}\n\n\n\n\n\nRDD\u304c\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n2.\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002RDD\u306etake\u64cd\u4f5c\u3092\u4f7f\u3063\u3066\u521d\u3081\u306eK\u500b\u306e\u8a18\u9332\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306eK\u306f2\u500b\u3067\u3059\u3002\n\n\n take(data, 2)\n[[1]]\n[1] \n145237\\tGloucester Cathedral\\t1398877436\\t{{Infobox church| name                   = Gloucester Cathedral| fullname               = Cathedral Church of St Peter and the Holy and Indivisible Trinity| image\u2026 //\u7701\u7565\n[[2]]\n[1] \n21650064\\tLillelid murders\\t1370865187\\t'''The Lillelid murders''' refers to a criminal case in [[Greeneville, Tennessee|Greeneville]],...\u3000//\u7701\u7565\n\n\n\n\n\u4e8c\u3064\u306e\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u304c\u5370\u5237\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u5404\u30a8\u30ec\u30e1\u30f3\u30c8\u306f\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u6587\u5b57\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u70b9\u691c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n typeof(take(data, 2)[[1]])\n[1] \ncharacter\n\n\n\n\n\n3.\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5168\u4f53\u3067\u8a18\u9332\u304c\u3069\u308c\u3060\u3051\u3042\u308b\u306e\u304b\u3092\u8abf\u3079\u307e\u3057\u3087\u3046\u3002\n\uff08\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f10\uff5e20\u79d2\u304b\u304b\u308b\u306e\u3067\u3001\u6d41\u308c\u3066\u3044\u308b\u969b\u306f\u5148\u3092\u8aad\u307f\u59cb\u3081\u3066\u304f\u3060\u3055\u3044\uff09\n\n\n count(data)\n[1] 7967\n\n\n\n\n\u3053\u306e\u4f5c\u696d\u306f\u30af\u30e9\u30b9\u30bf\u30fc\u4e0a\u30678\u500b\u306eSpark\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u5b9f\u884c\u4e2d\u306bSpark UI\u3092\u30a6\u30a7\u30d6\u4e0a\u3067\u958b\u3051\u3066\u307f\u3066\u307f\u308b\u3068\u7d4c\u904e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u306e\u52d5\u4f5c\u3092\u884c\u3046\u306b\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066http://localhost:4040\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30da\u30fc\u30b8\u306fSpark\u304c\u4f5c\u52d5\u4e2d\u306e\u969b\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\n\u3053\u306e\u30ea\u30f3\u30af\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u30b8\u30e7\u30d6\u306e\u7d4c\u904e\u3068\u30bf\u30b9\u30af\u6642\u9593\u3084\u30ad\u30e3\u30c3\u30b7\u30e5\u7d71\u8a08\u306a\u3069\u3092\u542b\u3080\u5b9f\u884c\u6642\u306e\u69d8\u3005\u306a\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\n\n\n4.\nSparkSQL\n\u306e\u7df4\u7fd2\u3092\u601d\u3044\u51fa\u3059\u3068\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306e\u69cb\u6210\u306f(pageId, title, modifiedTime, text, username)\u3060\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\u305d\u308c\u3067\u306f\u3001\u3053\u306e\u30c7\u30fc\u30bf\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3053\u308c\u3089\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3054\u3068\u306bRDD\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u4f5c\u696d\u306fRDD\u306b\u5bfe\u3057\u3066lappy()\u95a2\u6570\u3092\u4f7f\u3063\u3066\u884c\u3044\u307e\u3059\u3002\nlapply()\u306fmap()\u3068\u540c\u69d8\u306a\u52b9\u679c\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u5404RDD\u3092R\u95a2\u6570\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u533a\u5207\u308a\u7b26\u53f7\u3067\u3042\u308bstrsplit()\u3092\u4f7f\u3063\u3066\u5206\u3051\u307e\u3059\u3002\n\n\n\u30d2\u30f3\u30c8\uff1a\u3000\u95a2\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u30b7\u30a7\u30eb\u306b?functionName\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nRDD\u306b\u4f55\u304b\u3057\u3089\u306e\u64cd\u4f5c\u3092\u884c\u3046\u969b\u3001\u6bce\u56de\u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u3092\u9632\u3050\u305f\u3081\u306bRDD\u3092\u30e1\u30e2\u30ea\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u7f6e\u304d\u307e\u3059\u3002\n\n\n parseFields \n- function(record) {\n+    Sys.setlocale(\nLC_ALL\n, \nC\n)        //strsplit()\u304c\u6b63\u5e38\u306b\u4f5c\u52d5\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n+    parts \n- strsplit(record, \n\\t\n)[[1]]\n+    list(id=parts[1], title=parts[2], modified=parts[3], text=parts[4], username=parts[5])\u3000}\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000+\u306f\u6b21\u306e\u884c\u306b\u79fb\u52d5\u3059\u308b\u30a8\u30f3\u30bf\u30fc\u3092\u62bc\u3059\u3068\u51fa\u3066\u304f\u308b\n\n\n parsedRDD \n- lapply(data, parseFields)\n\n cache(parsedRDD)\u3000\u3000\u3000\u3000\n\nAn object of class \nPipelinedRDD\n\nSlot \nprev\n:\nAn object of class \nRDD\n\nSlot \nenv\n:\n\nenvironment: 0x2177f00\n\nSlot \njrdd\n:\n[1] \nJava-Object{data/tsv_wiki MappedRDD[1] at textFile at \nunknown\n:0}\n\n\u2026 //\u7701\u7565\n\n\n\n\n\u4e0a\u306e\u30b3\u30de\u30f3\u30c9\u3092Spark\u30b7\u30a7\u30eb\u306b\u5165\u529b\u3057\u305f\u6642\u306fSpark\u304cRDD\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u304c\u3001\u9045\u5ef6\u8a55\u4fa1\u306e\u305f\u3081\u306b\u8a08\u7b97\u51e6\u7406\u306f\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u307e\u305b\u3093\u3002\n\u6b21\u306bparsedRDD\u306b\u4f55\u3089\u304b\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3055\u308c\u305f\u3089\u3001Spark\u306f\u30e1\u30e2\u30ea\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\n\n\n5.\u5e7e\u3064\u306e\u8a18\u9332\u304cparsedRDD\u306b\u3042\u308a\u307e\u3059\u304b\uff1f\n\n\ncount(parsedRDD)\n[1] 7967\n\n\n\n\n\u884c\u3054\u3068\u306b\u4e00\u3064\u306e\u89e3\u6790\u8a18\u9332\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3053\u306e\u6570\u306f\u524d\u306e\u6570\u3068\u540c\u3058\u306f\u305a\u3067\u3059\u3002\n\n\n6.\u3082\u3046\u5c11\u3057\u9762\u767d\u3044\u3053\u3068\u3092\u3057\u307e\u3057\u3087\u3046\u3002\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5404\u30e6\u30fc\u30b6\u30fc\u304c\u8ca2\u732e\u3057\u305f\u6570\u306e\u67f1\u72b6\u56f3\uff08\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\uff09\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\u7c21\u5358\u306b\u624b\u9806\u3092\u8aac\u660e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305a\u3001\u30e6\u30fc\u30b6\u30fc\u30cd\u30fc\u30e0\u3060\u3051\u3092\u5207\u308a\u53d6\u308a\u540d\u7121\u3057\u306e\u8a18\u9332\u3092\u53d6\u308a\u9664\u304d\u307e\u3059\u3002\n\n\n\u30e6\u30fc\u30b6\u30fc\u30cd\u30fc\u30e0\u306e\u5207\u308a\u53d6\u308a\u3068\u540d\u7121\u3057\u306e\u53d6\u308a\u9664\u304d\n\n\n usernames \n- lapply(parsedRDD, function(x) { x$username })\n\n nonEmptyUsernames \n- Filter(function(x) { !is.na(x) }, usernames)\n\n\n\n\n\u6b21\u306b\uff08username, 1)\u3068\u3044\u3046\u578b\u306e\u30bf\u30d7\u30eb\u3092\u4f5c\u308a\u3001\u30c7\u30fc\u30bf\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u3066\u540c\u3058\u30ad\u30fc\u304c\u3042\u308b\u5024\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u5404\u30ad\u30fc\u306e\u5024\u3092\u7dcf\u5408\u3057\u307e\u3059\u3002\nSpark\u3067\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3061\u3087\u3046\u3069\u4fbf\u5229\u306a\u306e\u304creduceByKey\u3068\u3044\u3046\u95a2\u6570\u3067\u3059\u3002\nreduceByKey\u306e\u4e8c\u3064\u76ee\u306e\u5f15\u6570\u304c\u4f55\u500b\u306e\u30ea\u30b8\u30e5\u30fc\u30b5\u3092\u5229\u7528\u3059\u308b\u304b\u3092\u6c7a\u3081\u307e\u3059\u3002 \u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30ea\u30b8\u30e5\u30fc\u30b9\u95a2\u6570\u306f\u7d2f\u7a4d\u7684\u3068\u7d71\u5408\u7684\u3067\u3001\u30b3\u30f3\u30d0\u30a4\u30ca\u30fc\u304c\u30de\u30c3\u30d7\u3059\u308b\u969b\u306b\u9069\u5fdc\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u3053\u306e\u4f8b\u3067\u306f\u5165\u529b\u306eRDD\u306f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30928\u500b\u6301\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u30018\u500b\u306e\u30ea\u30b8\u30e5\u30fc\u30b5\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u65b9\u6cd5\u306f\u7d30\u304b\u3044\u30c7\u30fc\u30bf\u306e\u5206\u6563\u65b9\u6cd5\u3084\u30b8\u30e7\u30d6\u306e\u6700\u9069\u306a\u6027\u8cea\u3092\u77e5\u3089\u306a\u3044\u5834\u5408\u306b\u5f79\u7acb\u3064\u904e\u7a0b\u3067\u3059\u3002\n\n\n\u540c\u3058\u30e6\u30fc\u30b6\u30cd\u30fc\u30e0\u306e\u30bf\u30d7\u30eb\u3092\u4f5c\u308a\u3001\u51fa\u73fe\u983b\u5ea6\u3092\u6570\u3048\u308b\u3002\n\n\n userContributions \n- lapply(nonEmptyUsernames, function(x) { list(x, 1) })\n\n userCounts \n- collect(reduceByKey(userContributions, \n+\n, 8L))\n\n\n\n\n\u4eca\u3001UserCounts\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30ea\u30b9\u30c8\u3067\u69d8\u3005\u306aR\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3066\u63a2\u7a76\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u4f8b\u3068\u3057\u3066Top10\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3053\u306e\u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\u3057\u3066\u6700\u5f8c\u306e10\u30a8\u30ec\u30e1\u30f3\u30c8\u3092\u53d6\u308b\u65b9\u6cd5\u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002\n\n\nTop10\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u5207\u308a\u51fa\u3059\u3002\n\n\n top10users \n- tail(userCounts[order(unlist(sapply(userCounts, '[', 2)))], 10)\n\n top10users\n\n[[1]]\n[[1]][[1]]\n[1] \nAnomieBOT\n\n\n[[1]][[2]]\n[1] 67\n\n[[2]]\n[[2]][[1]]\n[1] \nRjwilmsiBot\n\n\n[[2]][[2]]\n[1] 77\n\n[[3]]\n[[3]][[1]]\n[1] \nChrisGualtieri\n\n\n[[3]][[2]]\n[1] 79\u3000\u3000\u3000\u3000//\u7701\u7565\n\n\n\n\n\u3053\u3053\u3067\u3001R\u30b3\u30de\u30f3\u30c9\u306eplot\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u306e\u8ca2\u732e\u5ea6\u3092\u67f1\u72b6\u56f3\u3068\u3057\u3066\u56f3\u308c\u307e\u3059\u3002\n\n\n counts \n- unlist(sapply(userCounts, '[', 2))\n\n plot(sort(counts), log=\ny\n, type=\nh\n, lwd=10, lend=2)\n\n\n\n\n\n\n*\u3053\u306e\u56f3\u306fXming\u3092\u4f7f\u7528\n\n\n\u3053\u308c\u3092\u307f\u308b\u3068\u30d1\u30ec\u30fc\u30c8\u306e\u6cd5\u5247\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u30d1\u30ec\u30fc\u30c8\u306e\u6cd5\u5247\u3068\u306f\u5168\u4f53\u306e\u51fa\u529b\u306e\u5927\u90e8\u5206\u306f\u3042\u308b\u4e00\u90e8\u306e\u5165\u529b\u304c\u5360\u3081\u3066\u3044\u308b\u3068\u3044\u3046\u8aac\u3067\u3042\u308b\u3002\n\u3053\u306e\u6cd5\u5247\u306e\u5206\u304b\u308c\u76ee\u306f\u4e3b\u306b8\uff1a2\u3067\u3001\u30d3\u30b8\u30cd\u30b9\u3067\u3044\u3046\u3068\u58f2\u4e0a\u306e8\u5272\u304c2\u5272\u306e\u9867\u5ba2\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u305f\u308a\u3001\u30b3\u30fc\u30c9\u3067\u3044\u3046\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u51e6\u7406\u306b\u304b\u304b\u308b80%\u306e\u6642\u9593\u306f20%\u306e\u30b3\u30fc\u30c9\u304c\u5360\u3081\u308b\u3068\u3044\u3046\u7d4c\u9a13\u5247\u3067\u3042\u308a\u307e\u3059\u3002\n\n\n7.\u5fdc\u7528\u5b9f\u8df5\u3068\u3057\u3066\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3092\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f55\u500b\u306e\u8a18\u4e8b\u304cCalifornia\u3068\u3044\u3046\u6587\u5b57\u3092\u542b\u3093\u3044\u307e\u3059\u304b\uff1f\n\n\n\u30d2\u30f3\u30c8\uff1a\u3000R\u30b3\u30de\u30f3\u30c9grepl\u3092\u4f7f\u3046\u3068\u305d\u306e\u6587\u5b57\u304c\u6587\u5b57\u5217\u306b\u5b58\u5728\u3059\u308b\u306e\u304b\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n    \u3082\u3057grepl\u3067\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u524d\u8ff0\u3068\u540c\u3058\u65b9\u6cd5\u3067Sys.setlocale()\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n\n\u5927\u30d2\u30f3\u30c8\uff1a\u3000filter\u3092\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n\u4e0b\u3092\u7bc4\u56f2\u9078\u629e\u3059\u308b\u3068\u7b54\u3048\u304c\u898b\u308c\u307e\u3059\u3002\n\n\n caliArticles \n- Filter(function(x) { grepl(\u201cCalifornia\u201d, x$text) }, parsedRDD)\n\n\n8.RDD API\u3067\u4f7f\u7528\u3067\u304d\u308b\u5168\u3066\u306e\u64cd\u4f5c\u306fhelp(package=SparkR)\u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n\n\u3053\u308c\u3067\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306eSparkR\u306e\u7ae0\u306e\u7d42\u308f\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u89e6\u3063\u3066\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u3066\u308a\nSparkR\u958b\u767a\u8005\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\n\u306b\u767b\u9332\u3059\u308b\u3068\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u66f4\u65b0\u304c\u5c4a\u304d\u307e\u3059\u3002\n\u30d0\u30b0\u30ec\u30dd\u30fc\u30c8\u3084\u6a5f\u80fd\u30ea\u30af\u30a8\u30b9\u30c8\u306f\nJIRA\n\u3067\u6b53\u8fce\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306f\nGithub\n\u3067\u63d0\u51fa\u3067\u304d\u307e\u3059\u3002\n\u4ed6\u306e\u8a73\u7d30\u3084\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u3053\u3053\u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002", 
            "title": "6. SparkR"
        }, 
        {
            "location": "/sparkr/#6-spark-r", 
            "text": "\u3053\u306e\u7ae0\u3067\u306f\u3001SparkR\u30b7\u30a7\u30eb\u3092\u4f7f\u3063\u3066\u30a6\u30a3\u30ad\u307a\u30c7\u30a3\u30a2\u306e\u30c7\u30fc\u30bf\u3092\u5bfe\u8a71\u7684\uff08\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\uff09\u306b\u63a2\u7a76\u3057\u307e\u3059\u3002", 
            "title": "6. Spark R"
        }, 
        {
            "location": "/sparkr/#6-1", 
            "text": "SparkR\u306e\u7df4\u7fd2\u3092\u884c\u3046\u306b\u306f\u3001R\u3068rJava\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u5fc5\u8981\u306a\u30d0\u30a4\u30ca\u30ea\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff08training-downloads.zip\u3092\u53c2\u7167\uff09\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002  \u307e\u305a\u306fR\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u30b7\u30a7\u30eb\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002  $ sudo yum install R\n$ R  \u305d\u308c\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u547d\u4ee4\u3092R\u30b7\u30a7\u30eb\u304b\u3089\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nrJava\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u6b63\u5e38\u306b\u52d5\u304f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306brJava\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002   install.packages(\u201crJava\u201d)  library(rJava)  \u3082\u3057\u3001\uff12\u884c\u76ee\u306e\u30b3\u30de\u30f3\u30c9\u306e\u5f8c\u306b\u4f55\u306e\u51fa\u529b\u304c\u3067\u306a\u3051\u308c\u3070\u3001rJava\u304c\u6b63\u5e38\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u62e0\u3067\u3059\u3002\n\u3082\u3057\u3001rJava\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d\u306b\u30a8\u30e9\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u307e\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u3092\u884c\u3044R\u306eJava\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002  R\u306eJava\u8a2d\u5b9a\u3000\uff08\u6b63\u5e38\u306b\u52d5\u3044\u3066\u3044\u305f\u3089\u7121\u8996\uff09  training/ $ R CMD javareconf -e\u3000 //training\u3068\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30c7\u30fc\u30bf\u3092\u5165\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea  \u3053\u308c\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3089\u3001R\u3092\u518d\u8d77\u52d5\u3057\u3066rJava\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002", 
            "title": "6-1. \u5fc5\u9808\u3067\u3042\u308b\u3082\u306e"
        }, 
        {
            "location": "/sparkr/#6-2", 
            "text": "1-1. \u7528\u610f\u3059\u308b\u3082\u306e \u306e\u6ce8\u610f\u4e8b\u9805\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u9069\u3057\u305ftraining-downloads.zip\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5c55\u958b\u3057\u307e\u3057\u305f\u3089\u3001\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002", 
            "title": "6-2. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u78ba\u4fdd"
        }, 
        {
            "location": "/sparkr/#6-3-sparkcontext", 
            "text": "\u4e0b\u306e\u30b3\u30fc\u30c9\u306fMac OS X\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001Linux\u3084Windows\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002  training/ $ R                                   \n //\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089R\u3092\u8d77\u52d5\u3059\u308b\u3002  pkgPath  - \u201cSparkR/linux/SparkR_0.1_R_x86_64-redhat-linux-gnu.tar.gz\u201d  \n//\u4f7f\u7528\u3057\u3066\u3044\u308bOS\u306b\u5408\u308f\u305b\u308b\u3053\u3068\u3068\u3001\u6700\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3082\u5165\u3063\u3066\u3044\u308b\u3082\u3068\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002  install.packages(pkgPath)\n\nInstalling package into \u2018/usr/lib64/R/library\u2019\n(as \u2018lib\u2019 is unspecified)\ninferring 'repos = NULL' from 'pkgs'\n* installing *binary* package \u2018SparkR\u2019 ...\n* DONE (SparkR)\nMaking 'packages.html' ... done\u3000\u3000//\u5b9f\u884c\u3057\u305f\u6642\u306e\u51fa\u529b  *\u6ce8\u610frJava\u304c\u30ed\u30fc\u30c9(library(rJava))\u3055\u308c\u3066\u3044\u306a\u3044\u3068SparkR\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u305b\u3093\u3002  SparkR\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\u3089\u3001R\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002   library(SparkR)  Sys.setenv(SPARK_MEM=\u201c1g\u201d)\u3000\u3000  sc  - sparkR.init(master=\u201clocal[*]\u201d)         //SparkContext\u3092\u4f5c\u6210\u3057\u307e\u3059  sc\n[1]  Java-Object{org.apache.spark.api.java.JavaSparkContext@1678991a}", 
            "title": "6-3. SparkContext\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u4f5c\u6210"
        }, 
        {
            "location": "/sparkr/#6-4", 
            "text": "\u305d\u308c\u3067\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u9806\u5e8f\u7d71\u8a08\u3092\u884c\u3044\u307e\u3057\u3087\u3046\u3002  1.\u306f\u3058\u3081\u306b\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304b\u3089data\u3068\u3044\u3046\u540d\u306eRDD\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\n\u5148\u307b\u3069\u306e\u5c0f\u533a\u5225\u3067sc\u3068\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u3067\u3042\u308bSparkContext\u304cSparkR\u30b7\u30a7\u30eb\u306e\u4e2d\u3067\u5165\u624b\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002   sc\n[1]  Java-Object{org.apache.spark.api.java.JavaSparkContext@1678991a}   data  - textFile(sc, \u201cdata/tsv_wiki\u201d)  data\n\nAn object of class  RDD \nSlot  env : environment: 0x20a3b28 \nSlot  jrdd :\n[1]  Java-Object{data/tsv_wiki MappedRDD[1] at textFile at  unknown :0}   RDD\u304c\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002  2.\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002RDD\u306etake\u64cd\u4f5c\u3092\u4f7f\u3063\u3066\u521d\u3081\u306eK\u500b\u306e\u8a18\u9332\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306eK\u306f2\u500b\u3067\u3059\u3002   take(data, 2)\n[[1]]\n[1]  145237\\tGloucester Cathedral\\t1398877436\\t{{Infobox church| name                   = Gloucester Cathedral| fullname               = Cathedral Church of St Peter and the Holy and Indivisible Trinity| image\u2026 //\u7701\u7565\n[[2]]\n[1]  21650064\\tLillelid murders\\t1370865187\\t'''The Lillelid murders''' refers to a criminal case in [[Greeneville, Tennessee|Greeneville]],...\u3000//\u7701\u7565  \u4e8c\u3064\u306e\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u304c\u5370\u5237\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u5404\u30a8\u30ec\u30e1\u30f3\u30c8\u306f\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u6587\u5b57\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u70b9\u691c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002   typeof(take(data, 2)[[1]])\n[1]  character   3.\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5168\u4f53\u3067\u8a18\u9332\u304c\u3069\u308c\u3060\u3051\u3042\u308b\u306e\u304b\u3092\u8abf\u3079\u307e\u3057\u3087\u3046\u3002\n\uff08\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f10\uff5e20\u79d2\u304b\u304b\u308b\u306e\u3067\u3001\u6d41\u308c\u3066\u3044\u308b\u969b\u306f\u5148\u3092\u8aad\u307f\u59cb\u3081\u3066\u304f\u3060\u3055\u3044\uff09   count(data)\n[1] 7967  \u3053\u306e\u4f5c\u696d\u306f\u30af\u30e9\u30b9\u30bf\u30fc\u4e0a\u30678\u500b\u306eSpark\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u5b9f\u884c\u4e2d\u306bSpark UI\u3092\u30a6\u30a7\u30d6\u4e0a\u3067\u958b\u3051\u3066\u307f\u3066\u307f\u308b\u3068\u7d4c\u904e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u306e\u52d5\u4f5c\u3092\u884c\u3046\u306b\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066http://localhost:4040\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30da\u30fc\u30b8\u306fSpark\u304c\u4f5c\u52d5\u4e2d\u306e\u969b\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002   \u3053\u306e\u30ea\u30f3\u30af\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u30b8\u30e7\u30d6\u306e\u7d4c\u904e\u3068\u30bf\u30b9\u30af\u6642\u9593\u3084\u30ad\u30e3\u30c3\u30b7\u30e5\u7d71\u8a08\u306a\u3069\u3092\u542b\u3080\u5b9f\u884c\u6642\u306e\u69d8\u3005\u306a\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002  4. SparkSQL \u306e\u7df4\u7fd2\u3092\u601d\u3044\u51fa\u3059\u3068\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306e\u69cb\u6210\u306f(pageId, title, modifiedTime, text, username)\u3060\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\u305d\u308c\u3067\u306f\u3001\u3053\u306e\u30c7\u30fc\u30bf\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3053\u308c\u3089\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3054\u3068\u306bRDD\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u4f5c\u696d\u306fRDD\u306b\u5bfe\u3057\u3066lappy()\u95a2\u6570\u3092\u4f7f\u3063\u3066\u884c\u3044\u307e\u3059\u3002\nlapply()\u306fmap()\u3068\u540c\u69d8\u306a\u52b9\u679c\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u5404RDD\u3092R\u95a2\u6570\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u533a\u5207\u308a\u7b26\u53f7\u3067\u3042\u308bstrsplit()\u3092\u4f7f\u3063\u3066\u5206\u3051\u307e\u3059\u3002  \u30d2\u30f3\u30c8\uff1a\u3000\u95a2\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u30b7\u30a7\u30eb\u306b?functionName\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002  RDD\u306b\u4f55\u304b\u3057\u3089\u306e\u64cd\u4f5c\u3092\u884c\u3046\u969b\u3001\u6bce\u56de\u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u3092\u9632\u3050\u305f\u3081\u306bRDD\u3092\u30e1\u30e2\u30ea\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u7f6e\u304d\u307e\u3059\u3002   parseFields  - function(record) {\n+    Sys.setlocale( LC_ALL ,  C )        //strsplit()\u304c\u6b63\u5e38\u306b\u4f5c\u52d5\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n+    parts  - strsplit(record,  \\t )[[1]]\n+    list(id=parts[1], title=parts[2], modified=parts[3], text=parts[4], username=parts[5])\u3000}\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000+\u306f\u6b21\u306e\u884c\u306b\u79fb\u52d5\u3059\u308b\u30a8\u30f3\u30bf\u30fc\u3092\u62bc\u3059\u3068\u51fa\u3066\u304f\u308b  parsedRDD  - lapply(data, parseFields)  cache(parsedRDD)\u3000\u3000\u3000\u3000\n\nAn object of class  PipelinedRDD \nSlot  prev :\nAn object of class  RDD \nSlot  env : environment: 0x2177f00 \nSlot  jrdd :\n[1]  Java-Object{data/tsv_wiki MappedRDD[1] at textFile at  unknown :0} \n\u2026 //\u7701\u7565  \u4e0a\u306e\u30b3\u30de\u30f3\u30c9\u3092Spark\u30b7\u30a7\u30eb\u306b\u5165\u529b\u3057\u305f\u6642\u306fSpark\u304cRDD\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u304c\u3001\u9045\u5ef6\u8a55\u4fa1\u306e\u305f\u3081\u306b\u8a08\u7b97\u51e6\u7406\u306f\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u307e\u305b\u3093\u3002\n\u6b21\u306bparsedRDD\u306b\u4f55\u3089\u304b\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3055\u308c\u305f\u3089\u3001Spark\u306f\u30e1\u30e2\u30ea\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002  5.\u5e7e\u3064\u306e\u8a18\u9332\u304cparsedRDD\u306b\u3042\u308a\u307e\u3059\u304b\uff1f  count(parsedRDD)\n[1] 7967  \u884c\u3054\u3068\u306b\u4e00\u3064\u306e\u89e3\u6790\u8a18\u9332\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3053\u306e\u6570\u306f\u524d\u306e\u6570\u3068\u540c\u3058\u306f\u305a\u3067\u3059\u3002  6.\u3082\u3046\u5c11\u3057\u9762\u767d\u3044\u3053\u3068\u3092\u3057\u307e\u3057\u3087\u3046\u3002\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5404\u30e6\u30fc\u30b6\u30fc\u304c\u8ca2\u732e\u3057\u305f\u6570\u306e\u67f1\u72b6\u56f3\uff08\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\uff09\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\u7c21\u5358\u306b\u624b\u9806\u3092\u8aac\u660e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305a\u3001\u30e6\u30fc\u30b6\u30fc\u30cd\u30fc\u30e0\u3060\u3051\u3092\u5207\u308a\u53d6\u308a\u540d\u7121\u3057\u306e\u8a18\u9332\u3092\u53d6\u308a\u9664\u304d\u307e\u3059\u3002  \u30e6\u30fc\u30b6\u30fc\u30cd\u30fc\u30e0\u306e\u5207\u308a\u53d6\u308a\u3068\u540d\u7121\u3057\u306e\u53d6\u308a\u9664\u304d   usernames  - lapply(parsedRDD, function(x) { x$username })  nonEmptyUsernames  - Filter(function(x) { !is.na(x) }, usernames)  \u6b21\u306b\uff08username, 1)\u3068\u3044\u3046\u578b\u306e\u30bf\u30d7\u30eb\u3092\u4f5c\u308a\u3001\u30c7\u30fc\u30bf\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u3066\u540c\u3058\u30ad\u30fc\u304c\u3042\u308b\u5024\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u5404\u30ad\u30fc\u306e\u5024\u3092\u7dcf\u5408\u3057\u307e\u3059\u3002\nSpark\u3067\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3061\u3087\u3046\u3069\u4fbf\u5229\u306a\u306e\u304creduceByKey\u3068\u3044\u3046\u95a2\u6570\u3067\u3059\u3002\nreduceByKey\u306e\u4e8c\u3064\u76ee\u306e\u5f15\u6570\u304c\u4f55\u500b\u306e\u30ea\u30b8\u30e5\u30fc\u30b5\u3092\u5229\u7528\u3059\u308b\u304b\u3092\u6c7a\u3081\u307e\u3059\u3002 \u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30ea\u30b8\u30e5\u30fc\u30b9\u95a2\u6570\u306f\u7d2f\u7a4d\u7684\u3068\u7d71\u5408\u7684\u3067\u3001\u30b3\u30f3\u30d0\u30a4\u30ca\u30fc\u304c\u30de\u30c3\u30d7\u3059\u308b\u969b\u306b\u9069\u5fdc\u3055\u308c\u3066\u3044\u307e\u3059\u3002  \u3053\u306e\u4f8b\u3067\u306f\u5165\u529b\u306eRDD\u306f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30928\u500b\u6301\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u30018\u500b\u306e\u30ea\u30b8\u30e5\u30fc\u30b5\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u65b9\u6cd5\u306f\u7d30\u304b\u3044\u30c7\u30fc\u30bf\u306e\u5206\u6563\u65b9\u6cd5\u3084\u30b8\u30e7\u30d6\u306e\u6700\u9069\u306a\u6027\u8cea\u3092\u77e5\u3089\u306a\u3044\u5834\u5408\u306b\u5f79\u7acb\u3064\u904e\u7a0b\u3067\u3059\u3002  \u540c\u3058\u30e6\u30fc\u30b6\u30cd\u30fc\u30e0\u306e\u30bf\u30d7\u30eb\u3092\u4f5c\u308a\u3001\u51fa\u73fe\u983b\u5ea6\u3092\u6570\u3048\u308b\u3002   userContributions  - lapply(nonEmptyUsernames, function(x) { list(x, 1) })  userCounts  - collect(reduceByKey(userContributions,  + , 8L))  \u4eca\u3001UserCounts\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30ea\u30b9\u30c8\u3067\u69d8\u3005\u306aR\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3066\u63a2\u7a76\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u4f8b\u3068\u3057\u3066Top10\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3053\u306e\u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\u3057\u3066\u6700\u5f8c\u306e10\u30a8\u30ec\u30e1\u30f3\u30c8\u3092\u53d6\u308b\u65b9\u6cd5\u3067\u8abf\u3079\u3089\u308c\u307e\u3059\u3002  Top10\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u5207\u308a\u51fa\u3059\u3002   top10users  - tail(userCounts[order(unlist(sapply(userCounts, '[', 2)))], 10)  top10users\n\n[[1]]\n[[1]][[1]]\n[1]  AnomieBOT \n\n[[1]][[2]]\n[1] 67\n\n[[2]]\n[[2]][[1]]\n[1]  RjwilmsiBot \n\n[[2]][[2]]\n[1] 77\n\n[[3]]\n[[3]][[1]]\n[1]  ChrisGualtieri \n\n[[3]][[2]]\n[1] 79\u3000\u3000\u3000\u3000//\u7701\u7565  \u3053\u3053\u3067\u3001R\u30b3\u30de\u30f3\u30c9\u306eplot\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u306e\u8ca2\u732e\u5ea6\u3092\u67f1\u72b6\u56f3\u3068\u3057\u3066\u56f3\u308c\u307e\u3059\u3002   counts  - unlist(sapply(userCounts, '[', 2))  plot(sort(counts), log= y , type= h , lwd=10, lend=2)   *\u3053\u306e\u56f3\u306fXming\u3092\u4f7f\u7528  \u3053\u308c\u3092\u307f\u308b\u3068\u30d1\u30ec\u30fc\u30c8\u306e\u6cd5\u5247\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u30d1\u30ec\u30fc\u30c8\u306e\u6cd5\u5247\u3068\u306f\u5168\u4f53\u306e\u51fa\u529b\u306e\u5927\u90e8\u5206\u306f\u3042\u308b\u4e00\u90e8\u306e\u5165\u529b\u304c\u5360\u3081\u3066\u3044\u308b\u3068\u3044\u3046\u8aac\u3067\u3042\u308b\u3002\n\u3053\u306e\u6cd5\u5247\u306e\u5206\u304b\u308c\u76ee\u306f\u4e3b\u306b8\uff1a2\u3067\u3001\u30d3\u30b8\u30cd\u30b9\u3067\u3044\u3046\u3068\u58f2\u4e0a\u306e8\u5272\u304c2\u5272\u306e\u9867\u5ba2\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u305f\u308a\u3001\u30b3\u30fc\u30c9\u3067\u3044\u3046\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u51e6\u7406\u306b\u304b\u304b\u308b80%\u306e\u6642\u9593\u306f20%\u306e\u30b3\u30fc\u30c9\u304c\u5360\u3081\u308b\u3068\u3044\u3046\u7d4c\u9a13\u5247\u3067\u3042\u308a\u307e\u3059\u3002  7.\u5fdc\u7528\u5b9f\u8df5\u3068\u3057\u3066\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3092\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f55\u500b\u306e\u8a18\u4e8b\u304cCalifornia\u3068\u3044\u3046\u6587\u5b57\u3092\u542b\u3093\u3044\u307e\u3059\u304b\uff1f  \u30d2\u30f3\u30c8\uff1a\u3000R\u30b3\u30de\u30f3\u30c9grepl\u3092\u4f7f\u3046\u3068\u305d\u306e\u6587\u5b57\u304c\u6587\u5b57\u5217\u306b\u5b58\u5728\u3059\u308b\u306e\u304b\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n    \u3082\u3057grepl\u3067\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u524d\u8ff0\u3068\u540c\u3058\u65b9\u6cd5\u3067Sys.setlocale()\u304c\u4f7f\u3048\u307e\u3059\u3002  \u5927\u30d2\u30f3\u30c8\uff1a\u3000filter\u3092\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002  \u4e0b\u3092\u7bc4\u56f2\u9078\u629e\u3059\u308b\u3068\u7b54\u3048\u304c\u898b\u308c\u307e\u3059\u3002   caliArticles  - Filter(function(x) { grepl(\u201cCalifornia\u201d, x$text) }, parsedRDD)  8.RDD API\u3067\u4f7f\u7528\u3067\u304d\u308b\u5168\u3066\u306e\u64cd\u4f5c\u306fhelp(package=SparkR)\u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002  \u3053\u308c\u3067\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306eSparkR\u306e\u7ae0\u306e\u7d42\u308f\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u89e6\u3063\u3066\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u3066\u308a SparkR\u958b\u767a\u8005\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8 \u306b\u767b\u9332\u3059\u308b\u3068\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u66f4\u65b0\u304c\u5c4a\u304d\u307e\u3059\u3002\n\u30d0\u30b0\u30ec\u30dd\u30fc\u30c8\u3084\u6a5f\u80fd\u30ea\u30af\u30a8\u30b9\u30c8\u306f JIRA \u3067\u6b53\u8fce\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306f Github \u3067\u63d0\u51fa\u3067\u304d\u307e\u3059\u3002\n\u4ed6\u306e\u8a73\u7d30\u3084\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u3053\u3053\u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002", 
            "title": "6-4. \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u5206\u6790"
        }, 
        {
            "location": "/pipeline/", 
            "text": "7. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\n\n\n\u91cd\u8981\uff11\n\n\n\u59cb\u3081\u308b\u524d\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067ML\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n$ wget http://d12yw77jruda6f.cloudfront.net/ampcamp-pipelines.zip\n$ unzip ampcamp-pipelines.zip\n\n\n\n\n\u3053\u306e\u7ae0\u3067\u306f\u3001\u8a66\u4f5c\u30d0\u30fc\u30b8\u30e7\u30f3\u306eML\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u6a5f\u3092\u69cb\u7bc9\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u76ee\u7684\u306f\u3042\u308b\u5165\u529b\u30a4\u30e1\u30fc\u30b8\uff08\u5199\u771f\uff09\u3092\u3001\u81ea\u52d5\u7684\u306b\u4f55\u304c\u5199\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u9ce5\u306e\u5199\u771f\u306f\u300c\u30c8\u30ea\u300d\u306e\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3059\u308b\u306f\u305a\u3067\u3059\u3002\n\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u306f\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u4e00\u3064\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u30a8\u30af\u30b5\u30b5\u30a4\u30ba\u304c\u7d42\u308f\u308b\u3053\u308d\u306b\u306f\u307b\u304b\u306e\u5fdc\u7528\u6cd5\u304c\u3042\u308b\u3068\u611f\u3058\u3066\u3082\u3089\u3044\u305f\u3044\u3067\u3059\u3002\n\n\n\u89e3\u6790\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u306b\u884c\u304f\u524d\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u76ee\u7684\u3068\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u539f\u5247\u3092\u8efd\u304f\u304a\u3055\u3089\u3044\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n7-1. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6700\u7d42\u5730\u70b9\u306f\u30001)\u7279\u5fb4\u3092\u8aad\u307f\u53d6\u308b\u4f5c\u696d\u3067\u4f7f\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u30002)\u305d\u306e\u8907\u96d1\u306a\u5b66\u7fd2\u6a5f\u80fd\u3092\u7c21\u6f54\u3067\u4f7f\u3044\u52dd\u624b\u306e\u826f\u3044\u90e8\u54c1\u304b\u3089\u7d44\u307f\u7acb\u3066\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u5f0f\u306e\u6a5f\u68b0\u5b66\u7fd2\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u69cb\u7bc9\u5f8c\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u6f5c\u5728\u7684\u306b\u8907\u96d1\u306a\u5165\u529b\u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\u3068\u4e88\u60f3\u904e\u7a0b\u3092\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u304b\u3089\u898b\u3066\u308f\u304b\u308a\u3084\u3059\u3044\u65b9\u6cd5\u3067\u63d0\u793a\u3057\u307e\u3059\u3002\n\u8a00\u3044\u76f4\u3059\u3068\u3001\u4e00\u5f0f\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u79c1\u304c\u5199\u771f\u3001\u97f3\u58f0\u3001\u30c6\u30ad\u30b9\u30c8\u3001\u30ed\u30b0\u306a\u3069\u306e\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u3092\u5165\u308c\u305f\u969b\u306b\u6b63\u4f53\u3092\u4e88\u60f3\u3057\u3066\u304f\u308c\u308b\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3067\u3059\u3002\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5185\u81d3\u306f\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306b\u900f\u660e\u3067\u89e3\u308a\u3084\u3059\u3044\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u5074\u306f\u660e\u78ba\u306b\u7406\u89e3\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\u4eca\u56de\u3001\u3042\u306a\u305f\u306f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u69cb\u7bc9\u5bb6\u306b\u306a\u3063\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n\n\u3042\u306a\u304b\u304c\u4f7f\u3046\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u6570\u500b\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u539f\u5247\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u5165\u529b\u30bf\u30a4\u30d7\u3068\u51fa\u529b\u30bf\u30a4\u30d7\u3092\u6c42\u3081\u308b\u30ce\u30fc\u30c9\u305f\u3061\u304b\u3089\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\n\n\u524d\u306e\u30ce\u30fc\u30c9\u306e\u51fa\u529b\u30bf\u30a4\u30d7\u3068\u6b21\u306e\u30ce\u30fc\u30c9\u306e\u5165\u529b\u30bf\u30a4\u30d7\u304c\u5408\u3063\u3066\u3044\u306a\u3044\u3068\u7d44\u307f\u7acb\u3066\u3089\u308c\u307e\u305b\u3093\u3002\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u81ea\u4f53\u3082\u30ce\u30fc\u30c9\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306e\u3088\u3063\u3066\u65b0\u305f\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n\n\u30ce\u30fc\u30c9\u306f\u51fa\u6765\u308b\u9650\u308aRDD\u3092\u5165\u529b\u3057\u3066\u3001RDD\u3092\u751f\u7523\u3057\u51fa\u529b\u3057\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u958b\u767a\u8005\u306f\u4e26\u5217\u30c7\u30fc\u30bf\u3000\u3000\u51e6\u7406\u3092\u982d\u306b\u5165\u308c\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\n\n\n\n\u3053\u306e\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3088\u3063\u3066\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u73fe\u5b9f\u7684\u306a\u6642\u9593\u3067\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u4f5c\u6210\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5206\u6563\u51e6\u7406\u74b0\u5883\u306b\u5c55\u958b\u3059\u308b\u3053\u3068\u3067\u767a\u751f\u3059\u308b\u554f\u984c\u3092\u6700\u5c0f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u4eca\u56de\u6271\u3046\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306fAMPLab\u3067\u69cb\u7bc9\u3055\u308c\u305f\u5927\u304d\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u91cd\u8981\u306a\u90e8\u5206\u306e\u8a66\u4f5c\u7248\u3067\u3059\u3002\n\u3053\u308c\u306f\u4ee5\u4e0b\u306b\u5f53\u3066\u306f\u307e\u308b\u30ce\u30fc\u30c9\u3092\u6271\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\u7279\u5fb4\u6458\u51fa\u3068\u30c7\u30fc\u30bf\u51e6\u7406\u3092\u884c\u3046\u30a4\u30e1\u30fc\u30b8\u51e6\u7406\n\n\n\u30c7\u30fc\u30bf\u6b63\u898f\u5316\u3084\u62e1\u5927\u7e2e\u5c0f\uff08\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\uff09\u306a\u3069\u306e\u4e00\u822c\u7684\u306a\u7d71\u8a08\u5909\u63db\n\n\n\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u7dda\u5f62\u30bd\u30eb\u30d0\u30fc\n\n\n\n\n\u3053\u308c\u3089\u306b\u52a0\u3048\u3066\u5f79\u306b\u7acb\u3064\u6a5f\u80fd\u3068\u3057\u3066\u3001\u4f5c\u6210\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30bb\u30fc\u30d6\u3084\u30ed\u30fc\u30c9\u3001\u9078\u5225\u30a8\u30e9\u30fc\u306e\u8a08\u7b97\u65b9\u6cd5\u306a\u3069\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u5b8c\u5168\u306a\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306f\u8a66\u4f5c\u54c1\u3067\u3059\u304c\u3001\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3089\u62ab\u9732\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\n7-2. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3API\n\n\n\u3053\u306eAPI\u306f\u516c\u5171\u30ea\u30fc\u30ea\u30b9\u307e\u3067\u306b\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u3053\u3067\u63d0\u793a\u3055\u308c\u308b\u306e\u306f\u8a66\u4f5c\u54c1\u3067\u3059\u3002\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3API\u306e\u30b3\u30a2\u306f\u5358\u7d14\u3067\u3001\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u6a5f\u80fd\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u91cd\u70b9\u7684\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u304c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ce\u30fc\u30c9\u3068\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\n\nobject Pipelines {\n  type PipelineNode[Input, Output] = (Input =\n Output)\n\n  type Pipeline[Input, Output] = ((Input) =\n Output)\n}\n\n\n\n\nScala\u304c\u6163\u308c\u3066\u306a\u3044\u65b9\u306b\u8aac\u660e\u3059\u308b\u3068\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ce\u30fc\u30c9\u306fInput\u306e\u5165\u529b\u30bf\u30a4\u30d7\u3068Output\u306e\u51fa\u529b\u30bf\u30a4\u30d7\u3092\u7e4b\u3050\u95a2\u6570\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ce\u30fc\u30c9\u306f\u305f\u3060\u306e\u95a2\u6570\u3068\u8003\u3048\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u6642\u306f\u5358\u7d14\u306b\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u3092\u66f8\u304d\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001apply(x: Input):\u3000Output\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u307e\u3059\u3002\nScala\u3067\u306f\u3053\u306e\u5165\u529b\u30bf\u30a4\u30d7\u3068\u51fa\u529b\u30bf\u30a4\u30d7\u306f\u62bd\u8c61\u6982\u5ff5\u3067\u3059\u3002\n\n\n\u898b\u672c\u306e\u30ce\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\ncase object Vectorizer \n  extends PipelineNode[RDD[Image], RDD[Vector]]] \n  with Serializable {\n  override def apply(in: RDD[Image]): RDD[Vector] = {\n    in.map(_.toVector)\n  }\n}\n\n\n\n\n\u3053\u306e\u30ce\u30fc\u30c9\u306fRDD[Image]\u3092\u5165\u529b\u3068\u3057\u3066\u53d6\u308a\u8fbc\u307f\u3001RDD[Vector]\u3092\u51fa\u529b\u3068\u3057\u3066\u4f5c\u308a\u51fa\u3057\u307e\u3059\u3002\n\u3053\u306e\u4f5c\u696d\u306f\u300c_.toVector\u300d\u3092\u5165\u529b\u306e\u5404\u30a8\u30ec\u30e1\u30f3\u30c8\u306b\u547c\u3093\u3067\u884c\u308f\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u660e\u78ba\u3067\u304b\u306a\u308a\u5358\u7d14\u306a\u5b9f\u4f8b\u3067\u3059\u3002\n\u3053\u306e\u65b9\u6cd5\u306fScala\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3092\u5229\u7528\u3057\u3066\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u69cb\u6210\u3059\u308b\u306a\u3069Scala\u8a00\u8a9e\u306e\u5e7e\u3064\u304b\u306e\u6a5f\u80fd\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u4f8b\u3068\u3057\u3066\u3082\u3057\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\uff08\u30d9\u30af\u30c8\u30e9\u30a4\u30b6\u3068\uff11\u3092\u5404\u30d9\u30af\u30c8\u30eb\u306e\u6700\u521d\u306b\u52a0\u3048\u308b\u30ce\u30fc\u30c9\uff09\u304b\u3089\u51fa\u6765\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u3092\u66f8\u304d\u307e\u3059\u3002\n\n\nval pipeline = Vectorizer andThen InterceptAdder \n//\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f RDD[Image]\u3092\u5165\u529b\u3057 \uff11\u304c\u524d\u5217\u306b\u52a0\u3048\u3089\u308c\u305fRDD[Vector]\u3092\u51fa\u529b\u3057\u307e\u3059\n\n//\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5fdc\u7528\u3059\u308b\u5834\u5408\u306f\u3053\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\nval x: RDD[Image] = sc.objectFile(someFileName)\nval result = pipeline.apply(x) //\u7d50\u679c\u306fRDD[Vector]\u3067\u3059\n//\u305d\u308c\u304b\u540c\u985e\u306e\nval result = pipeline(x)\n\n\n\n\n\u3053\u306e\u4f8b\u3067\u306f\u3001InterceptAdder\u304cVector\u3068\u3057\u3066\u5165\u529b\u3092\u6c42\u3081\u3066\u3044\u308b\u304b\u3089\u52d5\u304d\u307e\u3059\u3002\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u64cd\u4f5c\u306f\u57fa\u672c\u7684\u306bRDD\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e1\u30fc\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3001Spark\u3067\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u3066\u52b9\u7387\u7684\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4e0a\u306e\u5b9f\u4f8b\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u7d50\u679c\u306b\u767a\u52d5\u3055\u308c\u308b\u307e\u3067\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\u3055\u3089\u306b\u3001\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\u306e\u9593\u306b\u3042\u308b\u30de\u30c3\u30d7\uff08map)\u306e\u30bf\u30b9\u30af\u306f\u81ea\u52d5\u7684\u306b\u4e00\u3064\u306e\u30bf\u30b9\u30af\u3068\u3057\u3066\u62bc\u3057\u51fa\u3055\u308c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\n\u4eca\u304b\u3089\u3001\u3053\u308c\u3089\u306e\u30a2\u30a4\u30c7\u30a2\u304c\u3069\u306e\u3088\u3046\u306b\u4e26\u5217\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8907\u96d1\u306a\u6a5f\u68b0\u5b66\u7fd2\u306e\u30bf\u30b9\u30af\u3092\u884c\u3046\u306e\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\n7-3. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\n\n\u3053\u3053\u3067\u4f7f\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\nCIFAR-10\n\u3068\u3044\u304610\u500b\u306e\u30af\u30e9\u30b9\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u308b6\u4e07\u679a\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\u3053\u3053\u3067\u6271\u3046\u6280\u8853\u306f1000\u500b\u306e\u30af\u30e9\u30b9\u3084100\u4e07\u679a\u4ee5\u4e0a\u306e\u30a4\u30e1\u30fc\u30b8\u306b\u3082\u62e1\u5f35\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\u6319\u3052\u3089\u308c\u305fCIFAR\u30b5\u30a4\u30c8\u304b\u3089\u201dbinary\u201d\u3068\u3044\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u6210\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n1 x label\n3072 x pixel\n\n...\n\n1 x label\n3072 x pixel\n\n\n\n\n\n\u30d4\u30af\u30bb\u30eb\u5024\u3068\u5165\u529b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5408\u308f\u305b\u308b\u3053\u3068\u306f\u5fc3\u914d\u3057\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u9069\u3057\u3066\u3044\u308b\u6a19\u6e96\u306a\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u3092\u4f9b\u7d66\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u5165\u529b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u30a4\u30e1\u30fc\u30b8\u51e6\u7406\u3059\u308b\u30ce\u30fc\u30c9\u304c\u6c42\u3081\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5b9a\u7fa9\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u73fe\u308c\u307e\u3059\u3002\n\n\n7-4. \u7dda\u5f62\u9078\u5225\n\n\n\u30a4\u30e1\u30fc\u30b8\u9078\u5225\u65b9\u6cd5\u306f\nMLlib\n\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u308b\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30de\u30b7\u30fc\u30f3\u3001\u5358\u7d14\u30d9\u30a4\u30ba\u3001\u6c7a\u5b9a\u6728\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30af\u30b9\u56de\u5e30\u306a\u3069\u305f\u304f\u3055\u3093\u5b58\u5728\u3057\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u4eca\u56de\u306f\u305d\u306e\u4e00\u7a2e\u306e\u30e2\u30c7\u30eb\u3067\u3042\u308b\u7dda\u5f62\u9078\u5225\u306b\u6ce8\u76ee\u3057\u3066\u3001\u9078\u5225\u5316\u3067\u306f\u306a\u304f\u7279\u5fb4\u5316\u304c\u3053\u306e\u9078\u629e\u3067\u3069\u3046\u5f71\u97ff\u3055\u308c\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n\n\u7dda\u5f62\u9078\u5225\u306f\u6a5f\u68b0\u5b66\u7fd2\u306e\u57fa\u672c\u64cd\u4f5c\u3067\u3059\u3002\u7dda\u5f62\u56de\u5e30\u3092\u77e5\u3063\u3066\u3044\u308b\u65b9\u306f\u7dda\u5f62\u9078\u5225\u3092\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n\n\n\u300c\u5206\u985e\u300d\u3000\uff1d\u3000\u300c\u7279\u5fb4\u300d\u3000\uff0a\u3000\u300c\u30e2\u30c7\u30ebX\u300d\n\n\n\u6570\u5b66\u7684\u306b\u3001\u300c\u7279\u5fb4\u300d\u306f\uff08n\uff0ad\uff09\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u30de\u30c8\u30ea\u30c3\u30af\u30b9A\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nn\u306f\u8a13\u7df4\u7528\u4f8b\u306e\u6570\u3067\u3001d\u306f\u7279\u5fb4\u5143\u753b\u50cf\u305f\u3061\u306e\u7279\u5fb4\u306e\u6570\u3067\u3059\u3002\u300c\u5206\u985e\u300d\u306f\uff08n\uff0ak\uff09\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u30de\u30c8\u30ea\u30c3\u30af\u30b9B\u306b\u8a2d\u5b9a\u3055\u308c\u3001\u5404\u6b04\u306b\u3082\u3057\u3042\u308b\u753b\u50cf\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u3082\u306e\u306f-1.0\u3068\u306a\u308a\u3001\u305d\u308c\u4ee5\u5916\u306e\u3082\u306e\u306f+1.0\u3068\u306a\u308a\u307e\u3059\u3002\n\u7dda\u5f62\u9078\u5225\u6a5f\u306f\uff08d\uff0ak\uff09\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3067\u5e73\u65b9\u8ddd\u96e2\uff5c\uff08Ax\u3000\uff0d B\uff09^2|\u3000\u3092\u6700\u4f4e\u9650\u306b\u3059\u308b\u30e2\u30c7\u30ebX\u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002\n\u904e\u5270\u9069\u5408\u3092\u9632\u3050\u305f\u3081\u306b\u30e9\u30f3\u30c0\u30e0\u3067\u306f\u306a\u3044\u30e2\u30c7\u30eb\u306f\u7f70\u5247\u3055\u308c\u308b\u6b63\u898f\u5316\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u6c42\u89e3\u3059\u308b\u306b\u306f\u304a\u304a\u3088\u305d\uff08\u964d\u4e0b\u6cd5\uff09\u304b\u6b63\u78ba\uff08QR\u5206\u89e3\uff09\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u5fc5\u8981\u306a\u5e7e\u3064\u304b\u306e\u5206\u6563\u30bd\u30eb\u30d0\u30fc\u3092\u958b\u767a\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u3042\u306a\u305f\u306f\u8a73\u7d30\u304c\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u305f\u3060\u547c\u3076\u3060\u3051\u3067\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n\n\u3010\u8a33\u8005\u89e3\u8aac\u3011 \n\u4f8b\u3048\u3070\u8a13\u7df4\u7528\u4f8b\u306e4\u679a\u306e\u5199\u771f\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n2\u679a\u306f\u9ce5\u3092\u5199\u3057\u3001\u3082\u30462\u679a\u306f\u72ac\u3092\u5199\u3057\u307e\u3059\u3002\n\u8a13\u7df4\u7528\u4f8b\u3067\u9ce5\u306e\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u4e3b\u306a\u7279\u5fb4\u304c\u7fbd\u3001\u722a\u3001\u56345cm\u4ee5\u4e0a\u3067\u3001\u72ac\u306e\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u4e3b\u306a\u7279\u5fb4\u304c\u8db3\u3001\u8033\u3001\u5c3b\u5c3e5cm\u4ee5\u4e0a\u3060\u3068\u3057\u307e\u3059\u3002\n\n\n\u300c\u7279\u5fb4\u300d\u30de\u30c8\u30ea\u30c3\u30af\u30b9A\u3000\uff08n=4, d=6\uff09\n\n\n\n\n\n\n\n\n\u753b\u50cfID\n\n\n\u7fbd\n\n\n\u722a\n\n\n\u5634\n\n\n\u8db3\n\n\n\u8033\n\n\n\u5c3b\u5c3e\n\n\n\n\n\n\n\n\n\n\n1\n\n\n8\n\n\n12\n\n\n6\n\n\n4\n\n\n0\n\n\n0\n\n\n\n\n\n\n2\n\n\n6\n\n\n7\n\n\n6\n\n\n5\n\n\n0\n\n\n0\n\n\n\n\n\n\n3\n\n\n0\n\n\n3\n\n\n0\n\n\n12\n\n\n5\n\n\n7\n\n\n\n\n\n\n4\n\n\n0\n\n\n2\n\n\n0\n\n\n15\n\n\n6\n\n\n9\n\n\n\n\n\n\n\n\n\u300c\u5206\u985e\u300d\u30de\u30c8\u30ea\u30c3\u30af\u30b9B\u3000\uff08n=4, k=2\uff09\n\n\n\n\n\n\n\n\n\u753b\u50cfID\n\n\n\u9ce5\n\n\n\u72ac\n\n\n\n\n\n\n\n\n\n\n1\n\n\n-1.0\n\n\n+1.0\n\n\n\n\n\n\n2\n\n\n-1.0\n\n\n+10\n\n\n\n\n\n\n3\n\n\n+1.0\n\n\n-1.0\n\n\n\n\n\n\n4\n\n\n+1.0\n\n\n-1.0\n\n\n\n\n\n\n\n\n\u3053\u3053\u3067\u3001\u65b0\u305f\u3089\u3057\u3044\u5199\u771f\u306b\u5199\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u8db3\u3001\u8033\u3001\u5c3b\u5c3e\u304c5cm\u4ee5\u4e0b\u3067\u7fbd\u3001\u722a\u3001\u5634\u304c5cm\u4ee5\u4e0a\u3060\u3068\u3057\u307e\u3059\u3002\n\n\n\n\n\n\n\n\n\u753b\u50cfID\n\n\n\u7fbd\n\n\n\u722a\n\n\n\u5634\n\n\n\u8db3\n\n\n\u8033\n\n\n\u5c3b\u5c3e\n\n\n\n\n\n\n\n\n\n\n1\n\n\n8\n\n\n12\n\n\n6\n\n\n4\n\n\n0\n\n\n0\n\n\n\n\n\n\n2\n\n\n6\n\n\n7\n\n\n6\n\n\n5\n\n\n0\n\n\n0\n\n\n\n\n\n\n3\n\n\n0\n\n\n3\n\n\n0\n\n\n12\n\n\n5\n\n\n7\n\n\n\n\n\n\n4\n\n\n0\n\n\n2\n\n\n0\n\n\n15\n\n\n6\n\n\n9\n\n\n\n\n\n\n*5\n\n\n10\n\n\n6\n\n\n7\n\n\n3\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u753b\u50cfID\n\n\n\u9ce5\n\n\n\u72ac\n\n\n\n\n\n\n\n\n\n\n1\n\n\n-1.0\n\n\n+1.0\n\n\n\n\n\n\n2\n\n\n-1.0\n\n\n+10\n\n\n\n\n\n\n3\n\n\n+1.0\n\n\n-1.0\n\n\n\n\n\n\n4\n\n\n+1.0\n\n\n-1.0\n\n\n\n\n\n\n5\n\n\n+1.0? -1.0?\n\n\n+1.0? -1.0?\n\n\n\n\n\n\n\n\n\u6700\u5c0f\u9650\u30e2\u30c7\u30eb\u30de\u30c8\u30ea\u30c3\u30af\u30b9X\u3000\uff08d=6, k=2 \uff09\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nx1.1\n\n\nx2.1\n\n\n\n\n\n\nx1.2\n\n\nx2.2\n\n\n\n\n\n\nx1.3\n\n\nx2.3\n\n\n\n\n\n\nx1.4\n\n\nx2.4\n\n\n\n\n\n\nx1.5\n\n\nx2.5\n\n\n\n\n\n\nx1.6\n\n\nx2.6\n\n\n\n\n\n\n\n\n\u5e73\u65b9\u8ddd\u96e2\u304c\u4f4e\u304f\u306a\u308b\u306e\u306f\u5199\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u9ce5\u306e\u30af\u30e9\u30b9\u306b\u9078\u5225\u3057\u305f\u3068\u304d\u3067\u3059\u3002\n\u5b9f\u969b\u306b\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u3059\u308b\u6642\u306e\u7279\u5fb4\u306f\u30d4\u30af\u30bb\u30eb\u5024\u306e\u9055\u3044\u3067\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\u305d\u308c\u3092\u89e3\u308a\u3084\u3059\u304f\u5177\u4f53\u7684\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n7-5. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\n\u3053\u3053\u3067\u306f\u3001Scala\u306e\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u3067\u52d5\u304b\u3057\u307e\u3059\u3002\n\u3053\u306e\u7ae0\u6700\u521d\u306e\u91cd\u8981\uff11\u3067\u8aac\u660e\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u307e\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u30fbbuild.sbt: SBT\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\n\u30fbLinearPixels.scala: \u4e00\u756a\u7c21\u5358\u306b\u8a13\u7df4\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\u30fbRandomVocab.scala: \u6539\u5584\u3055\u308c\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\u30fbPatchVocab.scala: \u6539\u5584\u3055\u308c\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u53c2\u8003\u66f8\n\u30fbdata:\u3000\ncifar_train.bin\n \u3068\ncifar_test.bin\n\u306e\u30c7\u30fc\u30bf\u3092\u542b\u3080\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u30fbsrc: \u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u542b\u3093\u3067\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u30fbsaved_pipelines: \u51fa\u6765\u4e0a\u304c\u3063\u3066\u3044\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u30fbtarget: \u3053\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306eJar\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\n\n\n\n\u91cd\u8981\uff12\n\n\u5148\u306b\u9032\u3080\u524d\u306b\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u3067SPARK\uff3fHOME\u306e\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n//\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\n\ntraining/ $ export SPARK_HOME=~/training/spark\n\n\n7-6. \u7c21\u5358\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\n\n\u5148\u307b\u3069\u8a18\u8ff0\u3057\u305f\u3088\u3046\u306b\u3001CIFAR\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u306f\u3059\u3067\u306b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u6700\u521d\u306e\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30a4\u30e1\u30fc\u30b8\u306e\u30d4\u30af\u30bb\u30eb\u5024\u3092\u8a66\u3057\u306b\u4f7f\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3057\u307e\u3059\u3002\n\n\n\u307e\u305a\u306f\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nLinearPixels.scala\u3092\u63a2\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3067\u958b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\ntraining/ $ cd pipelines/scala\nvim LinearPIxels.scala\n\n\n\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5b9a\u7fa9\u306f\n\u3053\u3053\n\u3067\u3082\u898b\u308c\u307e\u3059\u3002\n\n\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f6\u500b\u306e\u30ce\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u3001\u30e9\u30d9\u30eb\u62bd\u51fa\u3001\u30a4\u30e1\u30fc\u30b8\u62bd\u51fa\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u5668\u3001\u30a4\u30e1\u30fc\u30b8\u30d4\u30af\u30bb\u30eb\u3092\u53d6\u3063\u3066\u305d\u308c\u3092\u7dda\u5f62\u30bd\u30eb\u30d0\u30fc\u3078\u5165\u529b\u3059\u308b\u30d9\u30af\u30c8\u30eb\u306b\u5e73\u677f\u5316\u3059\u308b\u30ce\u30fc\u30c9\u3001\u305d\u3057\u3066\u30d4\u30af\u30bb\u30eb\u306e\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u7dda\u5f62\u30bd\u30eb\u30d0\u30fc\u3067\u3059\u3002\n\u30a4\u30e1\u30fc\u30b8\u62bd\u51fa\u30ce\u30fc\u30c9\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u30ce\u30fc\u30c9\u3001\u30d9\u30af\u30c8\u30e9\u30a4\u30b6\u30ce\u30fc\u30c9\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u9069\u7528\u306e\u5165\u529b\u306b\u751f\u306e\u30d4\u30af\u30bb\u30eb\u3092\u5909\u3048\u308b\u305f\u3081\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30e9\u30a4\u30b6\uff08\u7279\u5fb4\u5668\uff09\u3068\u547c\u3073\u307e\u3059\u3002\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3082\u3046\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u547c\u3076\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\ntraining/ $ cd ampcamp-pipelines\n$ bin/run-piepline.sh pipelines.LinearPixels data/cifar_train.bin data/cifar_test.bin\n\n\n\n\n\u4e2d\u9593\u306e\u51fa\u529b\u5f8c\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u51fa\u529b\u304c\u6700\u5f8c\u306b\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\ntraining error is: 66.998, Test error is: 74.33\n\n\n\u3053\u308c\u306f\u4f55\u3092\u610f\u5473\u3059\u308b\u306e\u3067\u3057\u3087\u3046\uff1f\u3053\u308c\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u30e2\u30c7\u30eb\u3092\u9069\u7528\u3057\u305f\u3055\u3044\u306b\u3001\u7c21\u5358\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u6b63\u78ba\u306a\u30af\u30e9\u30b9\u309225%\u4ee5\u4e0a\u306e\u78ba\u7387\u3067\u4e88\u60f3\u3059\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u306a\u308b\u3079\u304f\u30d0\u30e9\u30f3\u30b9\u3088\u304f10\u30af\u30e9\u30b9\u306b\u5206\u3051\u3066\u3042\u308b\u306e\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u4e88\u60f3\u3057\u305f\u6642\u306e\u78ba\u7387\u3088\u308a\u3044\u3044\u3067\u3059\u304c\u3001\u7d20\u6674\u3089\u3057\u3044\u7d50\u679c\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n\u306a\u305c\u3042\u307e\u308a\u3044\u3044\u7d50\u679c\u304c\u51fa\u306a\u304b\u3063\u305f\u304b\u3092\u8996\u899a\u7684\u306b\u78ba\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u304b\u3089\u306e\u9078\u5225\u7d50\u679c\u3092linear_pixels\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\nampcamp-pipeline\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089linear_pixels/index.html\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nampcamp-pipelines/ $ open linear_pixels/index.html\n\n\n7-7. \u6539\u5584\u5f8c\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\n\n\u3067\u306f\u3069\u3046\u3084\u3063\u305f\u308975%\u306e\u30a8\u30e9\u30fc\u3092\u6539\u5584\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\u79d8\u8a23\u306f\u4ee5\u524d\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u8b1b\u6f14\u3067\u3042\u306a\u305f\u304c\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\n[9]\n\u3067\u3059\u3002\n\u30a8\u30c7\u30a3\u30bf\u3067RandomVocab.scala\u3092\u958b\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e3b\u306a\u9055\u3044\u306f\u30d5\u30a3\u30fc\u30c1\u30e3\u30e9\u30a4\u30b6\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\n\nval featurizer =\n  ImageExtractor\n    .andThen(new Convolver(sc, filterArray, imageSize, imageSize, numChannels, None, true))\n    .andThen(SymmetricRectifier(alpha=alpha))\n    .andThen(new Pooler(poolStride, poolSize, identity, _.sum))\n    .andThen(new ImageVectorizer)\n    .andThen(new CachingNode)\n    .andThen(new FeatureNormalize)\n    .andThen(new InterceptAdder)\n    .andThen(new CachingNode)\n\n\n\n\n\u3053\u308c\u3092\u5b9f\u884c\u3057\u3066\u4f55\u304c\u51fa\u3066\u304f\u308b\u304b\u3092\u307f\u3066\u307e\u3057\u3087\u3046\u3002\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u4ee5\u4e0b\u3092\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\nampcamp-pipelines/ $ bin/run-pipeline.sh pipelines.RandomVocab data/cifar_train.bin data/cifar_test.bin 200 10 0.2\n\n\n\u65b0\u3057\u304f3\u3064\u306e\u5f15\u6570\u304c\u4ed8\u3044\u305f\u306e\u306b\u304a\u6c17\u3065\u304d\u3067\u3057\u3087\u3046\u3002\n\u3053\u308c\u3089\u306f\u3001\u4f7f\u7528\u3059\u308b\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u306e\u30b5\u30a4\u30ba\uff08200\uff09\u3001\u898f\u5b9a\u5316\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff0810\uff09\u3001\u8a13\u7df4\u3059\u308b\u5165\u529b\u30c7\u30fc\u30bf\u306e\u5206\u6570\u3067\u3059\uff080.2\uff09\u3002\u3053\u3053\u3067\u6700\u5f8c\u306e\u6570\u304c20%\u306a\u306e\u306f\u6642\u9593\u306e\u554f\u984c\u3067\u3059\u3002\n\n\n\u30d5\u30a3\u30fc\u30c1\u30e3\u30e9\u30a4\u30b6\u304c\u8907\u96d1\u5316\u3055\u308c\u305f\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u3001\u5165\u529b\u30a4\u30e1\u30fc\u30b8\u306b\u9069\u7528\u3055\u308c\u308b\u30d5\u30a3\u30eb\u30bf\u30fc\u304c\u96c6\u307e\u3063\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u914d\u5217\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u306f\u30e9\u30f3\u30c0\u30e0\u3067\u6b63\u898f\u5206\u5e03\u304b\u3089\u767a\u751f\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u304c\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u3053\u3053\u304b\u3089200\u500b\u306e\u5404\u30d5\u30a3\u30eb\u30bf\u3092\u5165\u529b\u30a4\u30e1\u30fc\u30b8\u306b\u9069\u7528\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u56db\u90e8\u5186\u306b\u3070\u3089\u6492\u304d\u307e\u3059\u3002\n\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u5185\u306e\u7570\u306a\u3063\u305f\u30d5\u30a3\u30eb\u30bf\u3054\u3068\u306b\u9055\u3046\u50cd\u304d\u3092\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u30d0\u30a4\u30a2\u30b9\u9805\u3092\u8ffd\u52a0\u3057\u3001\u3053\u308c\u3068\u3070\u3089\u6492\u304d\u7d50\u679c\u3092\u7dda\u5f62\u9078\u5225\u6a5f\u306e\u5f15\u6570\u306b\u5165\u308c\u307e\u3059\u3002\n\n\n\u6570\u5206\u5f8c\u306b\u306f\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u6b21\u3088\u3046\u306a\u7b54\u3048\u3092\u51fa\u3057\u307e\u3059\u3002\n\n\nTraining error is 36.235596, Test error is 42.88\n\n\n\u518d\u3073\u8996\u899a\u5316\u3055\u308c\u305f\u7d50\u679c\u3092\u76ee\u3067\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30d5\u30a1\u30a4\u30eb\u306frandom_cifar\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\n\n\nampcamp-pipelines/ $ open random_vocab/index.html\n\n\n7-7-(1). \u4e0a\u7d1a\u30a8\u30af\u30b5\u30b5\u30a4\u30ba\n\n\n\u6642\u9593\u304c\u3042\u308b\u65b9\u306f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u7570\u306a\u3063\u305f\u6b63\u898f\u5316\u5024\u304b\u30d5\u30a3\u30eb\u30bf\u306e\u6570\uff08100\u304b300\uff09\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\u6b63\u78ba\u6027\u306f\u3069\u3046\u5909\u5316\u3057\u307e\u3059\u304b\uff1f\n\n\n7-8. \u4e0a\u7d1a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\n\n\u4e00\u3064\u524d\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u3001\u540c\u3058\u30c7\u30fc\u30bf\u30b5\u30f3\u30d7\u30eb\u306b\u5bfe\u3057\u3066\u6700\u521d\u306e\u7c21\u5358\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3088\u308a\u3044\u3044\u7d50\u679c\u304c\u3067\u307e\u3057\u305f\u304c\u3001\u3082\u3046\u5c11\u3057\u89e3\u6790\u6210\u679c\u3092\u4e0a\u3052\u3089\u308c\u308b\u6240\u307e\u3067\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n\n\u3053\u306e\u554f\u984c\u3067\u6700\u5f8c\u306b\u884c\u3046\u3053\u3068\u306f\u6539\u5584\u3055\u308c\u305f\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001\u30d1\u30c3\u30c1\u62bd\u51fa\u3068\u767d\u8272\u5316\u3092\u3057\u307e\u3059\u3002\n\u4f55\u306e\u3053\u3068\u304b\u306fPatchVocab.scala\u3092\u958b\u3044\u3066\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3068\u5148\u307b\u3069\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u9055\u3044\u306f\u4ee5\u4e0b\u304c\u52a0\u3048\u3089\u308c\u305f\u3053\u3068\u3060\u3068\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\n\nval patchExtractor = ImageExtractor\n      .andThen(new Windower(patchSteps,patchSize))\n      .andThen(new ImageVectorizer)\n      .andThen(new Sampler(whitenerSize))\n\n    val (filters, whitener) = {\n        val baseFilters = patchExtractor(trainData)\n        val baseFilterMat = Stats.normalizeRows(new MatrixType(baseFilters), 10.0)\n        val whitener = new ZCAWhitener(baseFilterMat)\n\n        //Normalize them.\n        val sampleFilters = new MatrixType(Random.shuffle(baseFilterMat.toArray2.toList).toArray.slice(0, numFilters))\n        val unnormFilters = whitener(sampleFilters)\n        val twoNorms = MatrixFunctions.pow(MatrixFunctions.pow(unnormFilters, 2.0).rowSums, 0.5)\n\n        (((unnormFilters divColumnVector (twoNorms.addi(1e-10))) mmul (whitener.whitener.transpose)).toArray2, whitener)\n    }\n\n\n\n\n\u3053\u3053\u3067\u306f\u30d5\u30a3\u30eb\u30bf\u304cFloatMatrix.randn()\u95a2\u6570\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u767a\u751f\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30c7\u30fc\u30bf\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u3055\u308c\u3066\u751f\u307f\u51fa\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u30e9\u30f3\u30c0\u30e0\u306a\uff08\u30c6\u30ec\u30d3\u306e\u7802\u5d50\u306e\u3088\u3046\u306a\uff09\u30ce\u30a4\u30ba\u306b\u30a4\u30e1\u30fc\u30b8\u3092\u5408\u308f\u305b\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u3059\u3067\u306b\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306b\u4f3c\u3066\u3044\u308b\u304b\u3067\u5408\u308f\u305b\u308b\u5f37\u529b\u306a\u767a\u60f3\u3067\u3059\u3002\n\n\n7-9. \u8a13\u7df4\u6e08\u307f\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3059\u308b\n\n\n\u6642\u9593\u5185\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u30d5\u30a3\u30fc\u30c1\u30e3\u30e9\u30a4\u30ba\u3057\u3066\u3042\u306a\u305f\u306e\u30de\u30b7\u30fc\u30f3\u306e\u4e0a\u3067\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u8a08\u7b97\u80fd\u529b\u306e\u95a2\u4fc2\u3067\u3001\u8a13\u7df4\u6e08\u307f\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u8ffd\u52a0\u6a5f\u80fd\u3068\u4e00\u7dd2\u306b\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30b3\u30fc\u30c9\u306b\u3042\u308b\u540c\u3058\u30b8\u30e3\u30d0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u5316\u3055\u308c\u305f\u72b6\u614b\u3067\u201d*.pipe\u201d\u30d5\u30a1\u30a4\u30eb\u306b\u7e8f\u3081\u3066\u3042\u308a\u307e\u3059\u3002\n\n\n\u8a13\u7df4\u3055\u308c\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30fc\u30d6\u3001\u30ed\u30fc\u30c9\u3001\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u5358\u7d14\u3067\u3059\u3002\n\n\nimport utils.PipelinePersistence._\n\n//\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30fc\u30d6\u3059\u308b\nsavePipeline(predictionPipeline, \nsaved_pipelines/your_pipeline.pipe\n)\n\n/\u30c7\u30a3\u30b9\u30af\u304b\u3089\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3059\u308b\nval predictionPipeline = loadPipeline[RDD[Image],RDD[Array[DataType]]](\nsaved_pipelines/your_pipeline.pipe\n)\n\n//\u4e88\u6e2c\u306b\u4f7f\u3046\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3059\u308b\nval data: RDD[Image]\nval predictions = predictionPipeline(data)\n\n\n\n\n\u3059\u3050\u306b\u898b\u308c\u307e\u3059\u304c\u3001\u8a13\u7df4\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3001\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8a55\u4fa1\u3001\u6b63\u78ba\u6027\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u7c21\u6f54\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3082\u63d0\u4f9b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u914d\u7f6e\u8a2d\u5b9a\u304c\u7c21\u5358\u3060\u3068\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\n\u3082\u3057\u8a13\u7df4\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6e80\u8db3\u3067\u3057\u305f\u3089\u3001Velox\u306a\u3069\u306e\u30e2\u30c7\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306b\u914d\u9001\u3059\u308b\u3060\u3051\u3067\u7d42\u4e86\u3067\u3059\u3002\n\u8a2d\u8a08\u3069\u3046\u308a\u3067\u3059\u3002\n\n\n7-10. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u8a55\u4fa1\u306e\u6982\u8981\n\n\n\u4eca\u307e\u3067\u306f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u8a55\u4fa1\u3092\u3059\u308b\u969b\u306b\u9078\u5225\u5668\u30a8\u30e9\u30fc\u3060\u3051\u306b\u96c6\u4e2d\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u9078\u5225\u5668\u306e\u8a55\u4fa1\u65b9\u6cd5\u306f\u3053\u308c\u3088\u308a\u3082\u3063\u3068\u51dd\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b9\u30d1\u30e0\u63a2\u77e5\u306e\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30e6\u30fc\u30b6\u3068\u3057\u3066\u306f\u53d7\u4fe1\u7bb1\u306b\u30b9\u30d1\u30e0\u306e\u6570\u304c\u5c11\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001\u91cd\u8981\u306a\u30e1\u30fc\u30eb\u306f\u898b\u9003\u3057\u305f\u304f\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u4e0d\u6b63\u78ba\u306a\u9078\u5225\u306e\u5834\u5408\u3001\u9593\u9055\u3063\u305f\u5931\u6557\uff08\u91cd\u8981\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u53d6\u308a\u9664\u304b\u308c\u308b\u3053\u3068\uff09\u306e\u307b\u3046\u304c\u6027\u80fd\u4e0d\u826f\uff08\u30b9\u30d1\u30e0\u304c\u53d7\u4fe1\u7bb1\u306b\u306b\u6b8b\u308b\u3053\u3068\uff09\u3088\u308a\u654f\u611f\u306b\u306a\u308a\u307e\u3059\u3002\n\u3067\u3059\u304b\u3089\u3001\u30b9\u30d1\u30e0\u63a2\u77e5\u306e\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u5834\u5408\u3053\u306e\u69d8\u306a\u5206\u5272\u308a\u8868\u3067\u8868\u305b\u307e\u3059\u3002\n\n\n\n\n\u3053\u306e\u5206\u5272\u308a\u8868\u306f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u8a2d\u5b9a\u306e\u5834\u5408\u3082\u6cd5\u5247\u5316\u3067\u304d\u307e\u3057\u3066\u3001\u305d\u306e\u4f8b\u306f\u5f8c\u307b\u3069\u898b\u308c\u307e\u3059\u3002\n\n\n7-11. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u8a55\u4fa1\n\n\n\u5148\u307b\u3069\u69cb\u7bc9\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u9069\u7528\u3057\u305f\u969b\u306e\u8a55\u4fa1\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u884c\u3044\u307e\u3059\u3002\n\n\nampcamp-pipelines/ $ bin/run-pipeline.sh pipelines.EvaluateCifarPipeline saved_piplines/patchvocab.pipe data/cifar_test.bin 0.2\n\n\n\n\n\n\n\n\n\n\nplane\n\n\ncar\n\n\nbird\n\n\ncat\n\n\ndeer\n\n\ndog\n\n\nfrog\n\n\nhorse\n\n\nship\n\n\ntruck\n\n\n\n\n\n\n\n\n\n\nplane\n\n\n741\n\n\n26\n\n\n79\n\n\n24\n\n\n29\n\n\n18\n\n\n3\n\n\n22\n\n\n73\n\n\n33\n\n\n\n\n\n\ncar\n\n\n26\n\n\n791\n\n\n20\n\n\n16\n\n\n8\n\n\n13\n\n\n6\n\n\n10\n\n\n44\n\n\n64\n\n\n\n\n\n\nbird\n\n\n37\n\n\n12\n\n\n511\n\n\n62\n\n\n56\n\n\n64\n\n\n50\n\n\n42\n\n\n13\n\n\n10\n\n\n\n\n\n\ncat\n\n\n12\n\n\n16\n\n\n66\n\n\n456\n\n\n50\n\n\n143\n\n\n42\n\n\n29\n\n\n12\n\n\n7\n\n\n\n\n\n\ndeer\n\n\n19\n\n\n8\n\n\n81\n\n\n45\n\n\n582\n\n\n42\n\n\n47\n\n\n43\n\n\n8\n\n\n5\n\n\n\n\n\n\ndog\n\n\n5\n\n\n5\n\n\n71\n\n\n187\n\n\n29\n\n\n608\n\n\n19\n\n\n59\n\n\n5\n\n\n10\n\n\n\n\n\n\nfrog\n\n\n18\n\n\n17\n\n\n94\n\n\n103\n\n\n99\n\n\n39\n\n\n807\n\n\n17\n\n\n6\n\n\n15\n\n\n\n\n\n\nhorse\n\n\n22\n\n\n8\n\n\n46\n\n\n47\n\n\n97\n\n\n42\n\n\n11\n\n\n749\n\n\n4\n\n\n11\n\n\n\n\n\n\nship\n\n\n80\n\n\n38\n\n\n17\n\n\n26\n\n\n20\n\n\n14\n\n\n10\n\n\n7\n\n\n801\n\n\n22\n\n\n\n\n\n\ntruck\n\n\n40\n\n\n79\n\n\n15\n\n\n34\n\n\n30\n\n\n17\n\n\n5\n\n\n22\n\n\n34\n\n\n823\n\n\n\n\n\n\n\n\nClassification error on data/cifar_test.bin is: 31.31\n\n\n\u3053\u306e\u69d8\u306a\u7b54\u3048\u304c\u51fa\u529b\u306e\u4e00\u90e8\u3068\u3057\u3066\u51fa\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30c6\u30fc\u30d6\u30eb\u306e\u5217\u304c\u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\u3055\u308c\u305f\u5185\u5bb9\u3067\u3001\u884c\u304c\u6b63\u78ba\u306a\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3042\u308b\uff08r, c\uff09\u6b04\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3067r\u56de\u4e88\u60f3\u3055\u308c\u305f\u4e2d\u3067\u672c\u5f53\u306e\u30af\u30e9\u30b9\u306fc\u3060\u3063\u305f\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u53f3\u4e0b\u659c\u3081\u306e\u6b04\u304c\u6b63\u78ba\u306b\u4e88\u60f3\u3055\u308c\u305f\u6570\u3067\u3001\u305d\u308c\u4ee5\u5916\u306f\u6df7\u4e71\u3057\u305f\u6570\u3067\u3059\u3002\n\n\n\u4e00\u756a\u591a\u3044\u6b63\u89e3\u30af\u30e9\u30b9\u306f\u4f55\u3067\u3059\u304b\uff1f\u3053\u308c\u306f\u5408\u7406\u7684\u3067\u3059\u304b\uff1f\n\n\n\u6700\u5f8c\u306b\u3001patch_cifar\u306e\u8996\u899a\u7684\u51fa\u529b\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30e2\u30c7\u30eb\u306f\u4eca\u307e\u3067\u306b\u6bd4\u3079\u3066\u3088\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\n\n\nampcamp-pipelines/ $ open patch_vocab/index.html\n\n\n7-12. \u756a\u5916\u7de8\n\n\n\u4e0a\u7d1a\u30a8\u30ad\u30bb\u30b5\u30a4\u30ba\uff12\n\n\n\u3082\u3046\u4e00\u3064\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u201dsaved_pipelines\u201d\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u8a55\u4fa1\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u3082\u3063\u3068\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u30a8\u30e9\u30fc\u7387\u304c\u3055\u3089\u306b\u826f\u304f\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306fPatchVocab2.scala\u3067\u3059\u3002\n\n\nampcamp-pipelines/ $bin/run-pipeline.sh pipelines.EvaluateCifarPipeline saved_pipelines/patchvocab2.pipe data/cifar_test.bin 0.2\n\n\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u6bd4\u8f03\u7684\u306b\u591a\u30442000\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30c1\u3092\u4f7f\u3063\u3066\u8a13\u7df4\u3055\u308c\u300124%\u30c6\u30b9\u30c8\u30a8\u30e9\u30fc\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\u8a13\u7df4\u3059\u308b\u305f\u3081\u306b\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u3001\u30d6\u30ed\u30c3\u30af\u6a19\u964d\u4e0b\u3068\u3044\u3046\u7d50\u679c\u3092\u5411\u4e0a\u3055\u305b\u308b\u6280\u8853\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\n\n\u3082\u305710,000\u30d1\u30c3\u30c1\u307e\u3067\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u3001\u6b63\u3057\u3044\u6b63\u898f\u5316\u5024\u3092\u9078\u3076\u306815%\u30a8\u30e9\u30fc\u307e\u3067\u4e0a\u304c\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u6280\u8853\u306f\u6c34\u5e73\u306b\u30b9\u30b1\u30fc\u30eb\u304c\u53ef\u80fd\u3067\u6700\u5148\u7aef\u306e\u5b66\u554f\u7d50\u679c\u3068\u4e26\u3076\u6210\u7e3e\u3067\u3059\u3002\n\n\n\u4e0a\u7d1a\u30a8\u30ad\u30bb\u30b5\u30a4\u30ba\uff13\n\n\n\u6700\u5f8c\u306b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u3044\u3058\u3063\u3066\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u304bScala\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308bIDE\u3067\u66f8\u304d\u76f4\u305b\u3066sbt assembly\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u767d\u8272\u5316\u3084\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30c8\u3092\u52a0\u3048\u306a\u3044\u3067\u8a13\u7df4\u3057\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u3069\u3046\u5909\u5316\u3059\u308b\u306e\u304b\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u307e\u3068\u3081\n\n\n\u3053\u306e\u7df4\u7fd2\u3067\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u3092Spark\u3067\u3059\u308b\u306e\u306b3\u3064\u306e\u30b5\u30f3\u30d7\u30eb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u69cb\u7bc9\u3057\u8a55\u4fa1\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u7c21\u5358\u3067\u4e00\u822c\u7684\u306b\u4f7f\u3048\u308b\u307b\u3069\u6a5f\u68b0\u5b66\u7fd2\u306e\u6d41\u308c\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u307e\u3060\u59cb\u307e\u3063\u305f\u3070\u304b\u308a\u306a\u306e\u3067\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u8cb0\u3048\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\n\n\n\n\n[9] \u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea: \u753b\u50cf\u306e\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3057\u305f\u3082\u306e\u306e\u96c6\u307e\u308a\u3002", 
            "title": "7. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30a4\u30e1\u30fc\u30b8\u89e3\u6790"
        }, 
        {
            "location": "/pipeline/#7", 
            "text": "\u91cd\u8981\uff11  \u59cb\u3081\u308b\u524d\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067ML\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002  $ wget http://d12yw77jruda6f.cloudfront.net/ampcamp-pipelines.zip\n$ unzip ampcamp-pipelines.zip  \u3053\u306e\u7ae0\u3067\u306f\u3001\u8a66\u4f5c\u30d0\u30fc\u30b8\u30e7\u30f3\u306eML\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u6a5f\u3092\u69cb\u7bc9\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u76ee\u7684\u306f\u3042\u308b\u5165\u529b\u30a4\u30e1\u30fc\u30b8\uff08\u5199\u771f\uff09\u3092\u3001\u81ea\u52d5\u7684\u306b\u4f55\u304c\u5199\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u9ce5\u306e\u5199\u771f\u306f\u300c\u30c8\u30ea\u300d\u306e\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3059\u308b\u306f\u305a\u3067\u3059\u3002\n\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u306f\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u4e00\u3064\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u30a8\u30af\u30b5\u30b5\u30a4\u30ba\u304c\u7d42\u308f\u308b\u3053\u308d\u306b\u306f\u307b\u304b\u306e\u5fdc\u7528\u6cd5\u304c\u3042\u308b\u3068\u611f\u3058\u3066\u3082\u3089\u3044\u305f\u3044\u3067\u3059\u3002  \u89e3\u6790\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u306b\u884c\u304f\u524d\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u76ee\u7684\u3068\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u539f\u5247\u3092\u8efd\u304f\u304a\u3055\u3089\u3044\u3057\u307e\u3057\u3087\u3046\u3002", 
            "title": "7. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30a4\u30e1\u30fc\u30b8\u89e3\u6790"
        }, 
        {
            "location": "/pipeline/#7-1", 
            "text": "\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6700\u7d42\u5730\u70b9\u306f\u30001)\u7279\u5fb4\u3092\u8aad\u307f\u53d6\u308b\u4f5c\u696d\u3067\u4f7f\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u30002)\u305d\u306e\u8907\u96d1\u306a\u5b66\u7fd2\u6a5f\u80fd\u3092\u7c21\u6f54\u3067\u4f7f\u3044\u52dd\u624b\u306e\u826f\u3044\u90e8\u54c1\u304b\u3089\u7d44\u307f\u7acb\u3066\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u5f0f\u306e\u6a5f\u68b0\u5b66\u7fd2\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u69cb\u7bc9\u5f8c\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u6f5c\u5728\u7684\u306b\u8907\u96d1\u306a\u5165\u529b\u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\u3068\u4e88\u60f3\u904e\u7a0b\u3092\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u304b\u3089\u898b\u3066\u308f\u304b\u308a\u3084\u3059\u3044\u65b9\u6cd5\u3067\u63d0\u793a\u3057\u307e\u3059\u3002\n\u8a00\u3044\u76f4\u3059\u3068\u3001\u4e00\u5f0f\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u79c1\u304c\u5199\u771f\u3001\u97f3\u58f0\u3001\u30c6\u30ad\u30b9\u30c8\u3001\u30ed\u30b0\u306a\u3069\u306e\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u3092\u5165\u308c\u305f\u969b\u306b\u6b63\u4f53\u3092\u4e88\u60f3\u3057\u3066\u304f\u308c\u308b\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3067\u3059\u3002  \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5185\u81d3\u306f\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306b\u900f\u660e\u3067\u89e3\u308a\u3084\u3059\u3044\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u5074\u306f\u660e\u78ba\u306b\u7406\u89e3\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\u4eca\u56de\u3001\u3042\u306a\u305f\u306f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u69cb\u7bc9\u5bb6\u306b\u306a\u3063\u3066\u3082\u3089\u3044\u307e\u3059\u3002  \u3042\u306a\u304b\u304c\u4f7f\u3046\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u6570\u500b\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u539f\u5247\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002   \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u5165\u529b\u30bf\u30a4\u30d7\u3068\u51fa\u529b\u30bf\u30a4\u30d7\u3092\u6c42\u3081\u308b\u30ce\u30fc\u30c9\u305f\u3061\u304b\u3089\u51fa\u6765\u3066\u3044\u307e\u3059\u3002  \u524d\u306e\u30ce\u30fc\u30c9\u306e\u51fa\u529b\u30bf\u30a4\u30d7\u3068\u6b21\u306e\u30ce\u30fc\u30c9\u306e\u5165\u529b\u30bf\u30a4\u30d7\u304c\u5408\u3063\u3066\u3044\u306a\u3044\u3068\u7d44\u307f\u7acb\u3066\u3089\u308c\u307e\u305b\u3093\u3002  \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u81ea\u4f53\u3082\u30ce\u30fc\u30c9\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306e\u3088\u3063\u3066\u65b0\u305f\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002  \u30ce\u30fc\u30c9\u306f\u51fa\u6765\u308b\u9650\u308aRDD\u3092\u5165\u529b\u3057\u3066\u3001RDD\u3092\u751f\u7523\u3057\u51fa\u529b\u3057\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u958b\u767a\u8005\u306f\u4e26\u5217\u30c7\u30fc\u30bf\u3000\u3000\u51e6\u7406\u3092\u982d\u306b\u5165\u308c\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002   \u3053\u306e\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3088\u3063\u3066\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u73fe\u5b9f\u7684\u306a\u6642\u9593\u3067\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u4f5c\u6210\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5206\u6563\u51e6\u7406\u74b0\u5883\u306b\u5c55\u958b\u3059\u308b\u3053\u3068\u3067\u767a\u751f\u3059\u308b\u554f\u984c\u3092\u6700\u5c0f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \u4eca\u56de\u6271\u3046\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306fAMPLab\u3067\u69cb\u7bc9\u3055\u308c\u305f\u5927\u304d\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u91cd\u8981\u306a\u90e8\u5206\u306e\u8a66\u4f5c\u7248\u3067\u3059\u3002\n\u3053\u308c\u306f\u4ee5\u4e0b\u306b\u5f53\u3066\u306f\u307e\u308b\u30ce\u30fc\u30c9\u3092\u6271\u3063\u3066\u3044\u307e\u3059\u3002   \u7279\u5fb4\u6458\u51fa\u3068\u30c7\u30fc\u30bf\u51e6\u7406\u3092\u884c\u3046\u30a4\u30e1\u30fc\u30b8\u51e6\u7406  \u30c7\u30fc\u30bf\u6b63\u898f\u5316\u3084\u62e1\u5927\u7e2e\u5c0f\uff08\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\uff09\u306a\u3069\u306e\u4e00\u822c\u7684\u306a\u7d71\u8a08\u5909\u63db  \u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u7dda\u5f62\u30bd\u30eb\u30d0\u30fc   \u3053\u308c\u3089\u306b\u52a0\u3048\u3066\u5f79\u306b\u7acb\u3064\u6a5f\u80fd\u3068\u3057\u3066\u3001\u4f5c\u6210\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30bb\u30fc\u30d6\u3084\u30ed\u30fc\u30c9\u3001\u9078\u5225\u30a8\u30e9\u30fc\u306e\u8a08\u7b97\u65b9\u6cd5\u306a\u3069\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u5b8c\u5168\u306a\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306f\u8a66\u4f5c\u54c1\u3067\u3059\u304c\u3001\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3089\u62ab\u9732\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002", 
            "title": "7-1. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af"
        }, 
        {
            "location": "/pipeline/#7-2-api", 
            "text": "\u3053\u306eAPI\u306f\u516c\u5171\u30ea\u30fc\u30ea\u30b9\u307e\u3067\u306b\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u3053\u3067\u63d0\u793a\u3055\u308c\u308b\u306e\u306f\u8a66\u4f5c\u54c1\u3067\u3059\u3002  \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3API\u306e\u30b3\u30a2\u306f\u5358\u7d14\u3067\u3001\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u6a5f\u80fd\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u91cd\u70b9\u7684\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u304c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ce\u30fc\u30c9\u3068\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5b9a\u7fa9\u3067\u3059\u3002  object Pipelines {\n  type PipelineNode[Input, Output] = (Input =  Output)\n\n  type Pipeline[Input, Output] = ((Input) =  Output)\n}  Scala\u304c\u6163\u308c\u3066\u306a\u3044\u65b9\u306b\u8aac\u660e\u3059\u308b\u3068\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ce\u30fc\u30c9\u306fInput\u306e\u5165\u529b\u30bf\u30a4\u30d7\u3068Output\u306e\u51fa\u529b\u30bf\u30a4\u30d7\u3092\u7e4b\u3050\u95a2\u6570\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ce\u30fc\u30c9\u306f\u305f\u3060\u306e\u95a2\u6570\u3068\u8003\u3048\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002  \u65b0\u3057\u3044\u30ce\u30fc\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u6642\u306f\u5358\u7d14\u306b\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u3092\u66f8\u304d\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001apply(x: Input):\u3000Output\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u307e\u3059\u3002\nScala\u3067\u306f\u3053\u306e\u5165\u529b\u30bf\u30a4\u30d7\u3068\u51fa\u529b\u30bf\u30a4\u30d7\u306f\u62bd\u8c61\u6982\u5ff5\u3067\u3059\u3002  \u898b\u672c\u306e\u30ce\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002  case object Vectorizer \n  extends PipelineNode[RDD[Image], RDD[Vector]]] \n  with Serializable {\n  override def apply(in: RDD[Image]): RDD[Vector] = {\n    in.map(_.toVector)\n  }\n}  \u3053\u306e\u30ce\u30fc\u30c9\u306fRDD[Image]\u3092\u5165\u529b\u3068\u3057\u3066\u53d6\u308a\u8fbc\u307f\u3001RDD[Vector]\u3092\u51fa\u529b\u3068\u3057\u3066\u4f5c\u308a\u51fa\u3057\u307e\u3059\u3002\n\u3053\u306e\u4f5c\u696d\u306f\u300c_.toVector\u300d\u3092\u5165\u529b\u306e\u5404\u30a8\u30ec\u30e1\u30f3\u30c8\u306b\u547c\u3093\u3067\u884c\u308f\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u660e\u78ba\u3067\u304b\u306a\u308a\u5358\u7d14\u306a\u5b9f\u4f8b\u3067\u3059\u3002\n\u3053\u306e\u65b9\u6cd5\u306fScala\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3092\u5229\u7528\u3057\u3066\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u69cb\u6210\u3059\u308b\u306a\u3069Scala\u8a00\u8a9e\u306e\u5e7e\u3064\u304b\u306e\u6a5f\u80fd\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \u4f8b\u3068\u3057\u3066\u3082\u3057\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\uff08\u30d9\u30af\u30c8\u30e9\u30a4\u30b6\u3068\uff11\u3092\u5404\u30d9\u30af\u30c8\u30eb\u306e\u6700\u521d\u306b\u52a0\u3048\u308b\u30ce\u30fc\u30c9\uff09\u304b\u3089\u51fa\u6765\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u3092\u66f8\u304d\u307e\u3059\u3002  val pipeline = Vectorizer andThen InterceptAdder \n//\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f RDD[Image]\u3092\u5165\u529b\u3057 \uff11\u304c\u524d\u5217\u306b\u52a0\u3048\u3089\u308c\u305fRDD[Vector]\u3092\u51fa\u529b\u3057\u307e\u3059\n\n//\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5fdc\u7528\u3059\u308b\u5834\u5408\u306f\u3053\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\nval x: RDD[Image] = sc.objectFile(someFileName)\nval result = pipeline.apply(x) //\u7d50\u679c\u306fRDD[Vector]\u3067\u3059\n//\u305d\u308c\u304b\u540c\u985e\u306e\nval result = pipeline(x)  \u3053\u306e\u4f8b\u3067\u306f\u3001InterceptAdder\u304cVector\u3068\u3057\u3066\u5165\u529b\u3092\u6c42\u3081\u3066\u3044\u308b\u304b\u3089\u52d5\u304d\u307e\u3059\u3002  \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u64cd\u4f5c\u306f\u57fa\u672c\u7684\u306bRDD\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e1\u30fc\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3001Spark\u3067\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u3066\u52b9\u7387\u7684\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4e0a\u306e\u5b9f\u4f8b\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u7d50\u679c\u306b\u767a\u52d5\u3055\u308c\u308b\u307e\u3067\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\u3055\u3089\u306b\u3001\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\u306e\u9593\u306b\u3042\u308b\u30de\u30c3\u30d7\uff08map)\u306e\u30bf\u30b9\u30af\u306f\u81ea\u52d5\u7684\u306b\u4e00\u3064\u306e\u30bf\u30b9\u30af\u3068\u3057\u3066\u62bc\u3057\u51fa\u3055\u308c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002  \u4eca\u304b\u3089\u3001\u3053\u308c\u3089\u306e\u30a2\u30a4\u30c7\u30a2\u304c\u3069\u306e\u3088\u3046\u306b\u4e26\u5217\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8907\u96d1\u306a\u6a5f\u68b0\u5b66\u7fd2\u306e\u30bf\u30b9\u30af\u3092\u884c\u3046\u306e\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002", 
            "title": "7-2. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3API"
        }, 
        {
            "location": "/pipeline/#7-3", 
            "text": "\u3053\u3053\u3067\u4f7f\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f CIFAR-10 \u3068\u3044\u304610\u500b\u306e\u30af\u30e9\u30b9\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u308b6\u4e07\u679a\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\u3053\u3053\u3067\u6271\u3046\u6280\u8853\u306f1000\u500b\u306e\u30af\u30e9\u30b9\u3084100\u4e07\u679a\u4ee5\u4e0a\u306e\u30a4\u30e1\u30fc\u30b8\u306b\u3082\u62e1\u5f35\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002  \u5177\u4f53\u7684\u306b\u306f\u3001\u6319\u3052\u3089\u308c\u305fCIFAR\u30b5\u30a4\u30c8\u304b\u3089\u201dbinary\u201d\u3068\u3044\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u6210\u3063\u3066\u3044\u307e\u3059\u3002  1 x label 3072 x pixel \n... 1 x label 3072 x pixel   \u30d4\u30af\u30bb\u30eb\u5024\u3068\u5165\u529b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5408\u308f\u305b\u308b\u3053\u3068\u306f\u5fc3\u914d\u3057\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u9069\u3057\u3066\u3044\u308b\u6a19\u6e96\u306a\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc\u3092\u4f9b\u7d66\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u5165\u529b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u30a4\u30e1\u30fc\u30b8\u51e6\u7406\u3059\u308b\u30ce\u30fc\u30c9\u304c\u6c42\u3081\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5b9a\u7fa9\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u73fe\u308c\u307e\u3059\u3002", 
            "title": "7-3. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8"
        }, 
        {
            "location": "/pipeline/#7-4", 
            "text": "\u30a4\u30e1\u30fc\u30b8\u9078\u5225\u65b9\u6cd5\u306f MLlib \u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u308b\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30de\u30b7\u30fc\u30f3\u3001\u5358\u7d14\u30d9\u30a4\u30ba\u3001\u6c7a\u5b9a\u6728\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30af\u30b9\u56de\u5e30\u306a\u3069\u305f\u304f\u3055\u3093\u5b58\u5728\u3057\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u4eca\u56de\u306f\u305d\u306e\u4e00\u7a2e\u306e\u30e2\u30c7\u30eb\u3067\u3042\u308b\u7dda\u5f62\u9078\u5225\u306b\u6ce8\u76ee\u3057\u3066\u3001\u9078\u5225\u5316\u3067\u306f\u306a\u304f\u7279\u5fb4\u5316\u304c\u3053\u306e\u9078\u629e\u3067\u3069\u3046\u5f71\u97ff\u3055\u308c\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3059\u3002  \u7dda\u5f62\u9078\u5225\u306f\u6a5f\u68b0\u5b66\u7fd2\u306e\u57fa\u672c\u64cd\u4f5c\u3067\u3059\u3002\u7dda\u5f62\u56de\u5e30\u3092\u77e5\u3063\u3066\u3044\u308b\u65b9\u306f\u7dda\u5f62\u9078\u5225\u3092\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002   \u300c\u5206\u985e\u300d\u3000\uff1d\u3000\u300c\u7279\u5fb4\u300d\u3000\uff0a\u3000\u300c\u30e2\u30c7\u30ebX\u300d  \u6570\u5b66\u7684\u306b\u3001\u300c\u7279\u5fb4\u300d\u306f\uff08n\uff0ad\uff09\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u30de\u30c8\u30ea\u30c3\u30af\u30b9A\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nn\u306f\u8a13\u7df4\u7528\u4f8b\u306e\u6570\u3067\u3001d\u306f\u7279\u5fb4\u5143\u753b\u50cf\u305f\u3061\u306e\u7279\u5fb4\u306e\u6570\u3067\u3059\u3002\u300c\u5206\u985e\u300d\u306f\uff08n\uff0ak\uff09\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u30de\u30c8\u30ea\u30c3\u30af\u30b9B\u306b\u8a2d\u5b9a\u3055\u308c\u3001\u5404\u6b04\u306b\u3082\u3057\u3042\u308b\u753b\u50cf\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u3082\u306e\u306f-1.0\u3068\u306a\u308a\u3001\u305d\u308c\u4ee5\u5916\u306e\u3082\u306e\u306f+1.0\u3068\u306a\u308a\u307e\u3059\u3002\n\u7dda\u5f62\u9078\u5225\u6a5f\u306f\uff08d\uff0ak\uff09\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3067\u5e73\u65b9\u8ddd\u96e2\uff5c\uff08Ax\u3000\uff0d B\uff09^2|\u3000\u3092\u6700\u4f4e\u9650\u306b\u3059\u308b\u30e2\u30c7\u30ebX\u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002\n\u904e\u5270\u9069\u5408\u3092\u9632\u3050\u305f\u3081\u306b\u30e9\u30f3\u30c0\u30e0\u3067\u306f\u306a\u3044\u30e2\u30c7\u30eb\u306f\u7f70\u5247\u3055\u308c\u308b\u6b63\u898f\u5316\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u6c42\u89e3\u3059\u308b\u306b\u306f\u304a\u304a\u3088\u305d\uff08\u964d\u4e0b\u6cd5\uff09\u304b\u6b63\u78ba\uff08QR\u5206\u89e3\uff09\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u5fc5\u8981\u306a\u5e7e\u3064\u304b\u306e\u5206\u6563\u30bd\u30eb\u30d0\u30fc\u3092\u958b\u767a\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u3042\u306a\u305f\u306f\u8a73\u7d30\u304c\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u305f\u3060\u547c\u3076\u3060\u3051\u3067\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002  \u3010\u8a33\u8005\u89e3\u8aac\u3011 \n\u4f8b\u3048\u3070\u8a13\u7df4\u7528\u4f8b\u306e4\u679a\u306e\u5199\u771f\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n2\u679a\u306f\u9ce5\u3092\u5199\u3057\u3001\u3082\u30462\u679a\u306f\u72ac\u3092\u5199\u3057\u307e\u3059\u3002\n\u8a13\u7df4\u7528\u4f8b\u3067\u9ce5\u306e\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u4e3b\u306a\u7279\u5fb4\u304c\u7fbd\u3001\u722a\u3001\u56345cm\u4ee5\u4e0a\u3067\u3001\u72ac\u306e\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u4e3b\u306a\u7279\u5fb4\u304c\u8db3\u3001\u8033\u3001\u5c3b\u5c3e5cm\u4ee5\u4e0a\u3060\u3068\u3057\u307e\u3059\u3002  \u300c\u7279\u5fb4\u300d\u30de\u30c8\u30ea\u30c3\u30af\u30b9A\u3000\uff08n=4, d=6\uff09     \u753b\u50cfID  \u7fbd  \u722a  \u5634  \u8db3  \u8033  \u5c3b\u5c3e      1  8  12  6  4  0  0    2  6  7  6  5  0  0    3  0  3  0  12  5  7    4  0  2  0  15  6  9     \u300c\u5206\u985e\u300d\u30de\u30c8\u30ea\u30c3\u30af\u30b9B\u3000\uff08n=4, k=2\uff09     \u753b\u50cfID  \u9ce5  \u72ac      1  -1.0  +1.0    2  -1.0  +10    3  +1.0  -1.0    4  +1.0  -1.0     \u3053\u3053\u3067\u3001\u65b0\u305f\u3089\u3057\u3044\u5199\u771f\u306b\u5199\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u8db3\u3001\u8033\u3001\u5c3b\u5c3e\u304c5cm\u4ee5\u4e0b\u3067\u7fbd\u3001\u722a\u3001\u5634\u304c5cm\u4ee5\u4e0a\u3060\u3068\u3057\u307e\u3059\u3002     \u753b\u50cfID  \u7fbd  \u722a  \u5634  \u8db3  \u8033  \u5c3b\u5c3e      1  8  12  6  4  0  0    2  6  7  6  5  0  0    3  0  3  0  12  5  7    4  0  2  0  15  6  9    *5  10  6  7  3  0  0        \u753b\u50cfID  \u9ce5  \u72ac      1  -1.0  +1.0    2  -1.0  +10    3  +1.0  -1.0    4  +1.0  -1.0    5  +1.0? -1.0?  +1.0? -1.0?     \u6700\u5c0f\u9650\u30e2\u30c7\u30eb\u30de\u30c8\u30ea\u30c3\u30af\u30b9X\u3000\uff08d=6, k=2 \uff09           x1.1  x2.1    x1.2  x2.2    x1.3  x2.3    x1.4  x2.4    x1.5  x2.5    x1.6  x2.6     \u5e73\u65b9\u8ddd\u96e2\u304c\u4f4e\u304f\u306a\u308b\u306e\u306f\u5199\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u9ce5\u306e\u30af\u30e9\u30b9\u306b\u9078\u5225\u3057\u305f\u3068\u304d\u3067\u3059\u3002\n\u5b9f\u969b\u306b\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u3059\u308b\u6642\u306e\u7279\u5fb4\u306f\u30d4\u30af\u30bb\u30eb\u5024\u306e\u9055\u3044\u3067\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\u305d\u308c\u3092\u89e3\u308a\u3084\u3059\u304f\u5177\u4f53\u7684\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002", 
            "title": "7-4. \u7dda\u5f62\u9078\u5225"
        }, 
        {
            "location": "/pipeline/#7-5", 
            "text": "\u3053\u3053\u3067\u306f\u3001Scala\u306e\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u3067\u52d5\u304b\u3057\u307e\u3059\u3002\n\u3053\u306e\u7ae0\u6700\u521d\u306e\u91cd\u8981\uff11\u3067\u8aac\u660e\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u307e\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002  \u30fbbuild.sbt: SBT\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\n\u30fbLinearPixels.scala: \u4e00\u756a\u7c21\u5358\u306b\u8a13\u7df4\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\u30fbRandomVocab.scala: \u6539\u5584\u3055\u308c\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\u30fbPatchVocab.scala: \u6539\u5584\u3055\u308c\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u53c2\u8003\u66f8\n\u30fbdata:\u3000 cifar_train.bin  \u3068 cifar_test.bin \u306e\u30c7\u30fc\u30bf\u3092\u542b\u3080\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u30fbsrc: \u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u542b\u3093\u3067\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u30fbsaved_pipelines: \u51fa\u6765\u4e0a\u304c\u3063\u3066\u3044\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u30fbtarget: \u3053\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306eJar\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea  \u91cd\u8981\uff12 \n\u5148\u306b\u9032\u3080\u524d\u306b\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u3067SPARK\uff3fHOME\u306e\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002  //\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067 training/ $ export SPARK_HOME=~/training/spark", 
            "title": "7-5. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"
        }, 
        {
            "location": "/pipeline/#7-6", 
            "text": "\u5148\u307b\u3069\u8a18\u8ff0\u3057\u305f\u3088\u3046\u306b\u3001CIFAR\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u306f\u3059\u3067\u306b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u6700\u521d\u306e\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30a4\u30e1\u30fc\u30b8\u306e\u30d4\u30af\u30bb\u30eb\u5024\u3092\u8a66\u3057\u306b\u4f7f\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3057\u307e\u3059\u3002  \u307e\u305a\u306f\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nLinearPixels.scala\u3092\u63a2\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3067\u958b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002  training/ $ cd pipelines/scala\nvim LinearPIxels.scala  \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u5b9a\u7fa9\u306f \u3053\u3053 \u3067\u3082\u898b\u308c\u307e\u3059\u3002  \u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f6\u500b\u306e\u30ce\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u3001\u30e9\u30d9\u30eb\u62bd\u51fa\u3001\u30a4\u30e1\u30fc\u30b8\u62bd\u51fa\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u5668\u3001\u30a4\u30e1\u30fc\u30b8\u30d4\u30af\u30bb\u30eb\u3092\u53d6\u3063\u3066\u305d\u308c\u3092\u7dda\u5f62\u30bd\u30eb\u30d0\u30fc\u3078\u5165\u529b\u3059\u308b\u30d9\u30af\u30c8\u30eb\u306b\u5e73\u677f\u5316\u3059\u308b\u30ce\u30fc\u30c9\u3001\u305d\u3057\u3066\u30d4\u30af\u30bb\u30eb\u306e\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u7dda\u5f62\u30bd\u30eb\u30d0\u30fc\u3067\u3059\u3002\n\u30a4\u30e1\u30fc\u30b8\u62bd\u51fa\u30ce\u30fc\u30c9\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u30ce\u30fc\u30c9\u3001\u30d9\u30af\u30c8\u30e9\u30a4\u30b6\u30ce\u30fc\u30c9\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u9069\u7528\u306e\u5165\u529b\u306b\u751f\u306e\u30d4\u30af\u30bb\u30eb\u3092\u5909\u3048\u308b\u305f\u3081\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30e9\u30a4\u30b6\uff08\u7279\u5fb4\u5668\uff09\u3068\u547c\u3073\u307e\u3059\u3002  \u3053\u306e\u30b3\u30fc\u30c9\u306f\u3082\u3046\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u547c\u3076\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002  training/ $ cd ampcamp-pipelines\n$ bin/run-piepline.sh pipelines.LinearPixels data/cifar_train.bin data/cifar_test.bin  \u4e2d\u9593\u306e\u51fa\u529b\u5f8c\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u51fa\u529b\u304c\u6700\u5f8c\u306b\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002  training error is: 66.998, Test error is: 74.33  \u3053\u308c\u306f\u4f55\u3092\u610f\u5473\u3059\u308b\u306e\u3067\u3057\u3087\u3046\uff1f\u3053\u308c\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u30e2\u30c7\u30eb\u3092\u9069\u7528\u3057\u305f\u3055\u3044\u306b\u3001\u7c21\u5358\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u6b63\u78ba\u306a\u30af\u30e9\u30b9\u309225%\u4ee5\u4e0a\u306e\u78ba\u7387\u3067\u4e88\u60f3\u3059\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u306a\u308b\u3079\u304f\u30d0\u30e9\u30f3\u30b9\u3088\u304f10\u30af\u30e9\u30b9\u306b\u5206\u3051\u3066\u3042\u308b\u306e\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u4e88\u60f3\u3057\u305f\u6642\u306e\u78ba\u7387\u3088\u308a\u3044\u3044\u3067\u3059\u304c\u3001\u7d20\u6674\u3089\u3057\u3044\u7d50\u679c\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002  \u306a\u305c\u3042\u307e\u308a\u3044\u3044\u7d50\u679c\u304c\u51fa\u306a\u304b\u3063\u305f\u304b\u3092\u8996\u899a\u7684\u306b\u78ba\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u304b\u3089\u306e\u9078\u5225\u7d50\u679c\u3092linear_pixels\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\nampcamp-pipeline\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089linear_pixels/index.html\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002  ampcamp-pipelines/ $ open linear_pixels/index.html", 
            "title": "7-6. \u7c21\u5358\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3"
        }, 
        {
            "location": "/pipeline/#7-7", 
            "text": "\u3067\u306f\u3069\u3046\u3084\u3063\u305f\u308975%\u306e\u30a8\u30e9\u30fc\u3092\u6539\u5584\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\u79d8\u8a23\u306f\u4ee5\u524d\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u8b1b\u6f14\u3067\u3042\u306a\u305f\u304c\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea [9] \u3067\u3059\u3002\n\u30a8\u30c7\u30a3\u30bf\u3067RandomVocab.scala\u3092\u958b\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e3b\u306a\u9055\u3044\u306f\u30d5\u30a3\u30fc\u30c1\u30e3\u30e9\u30a4\u30b6\u306e\u5b9a\u7fa9\u3067\u3059\u3002  val featurizer =\n  ImageExtractor\n    .andThen(new Convolver(sc, filterArray, imageSize, imageSize, numChannels, None, true))\n    .andThen(SymmetricRectifier(alpha=alpha))\n    .andThen(new Pooler(poolStride, poolSize, identity, _.sum))\n    .andThen(new ImageVectorizer)\n    .andThen(new CachingNode)\n    .andThen(new FeatureNormalize)\n    .andThen(new InterceptAdder)\n    .andThen(new CachingNode)  \u3053\u308c\u3092\u5b9f\u884c\u3057\u3066\u4f55\u304c\u51fa\u3066\u304f\u308b\u304b\u3092\u307f\u3066\u307e\u3057\u3087\u3046\u3002\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u4ee5\u4e0b\u3092\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u3057\u307e\u3059\u3002  ampcamp-pipelines/ $ bin/run-pipeline.sh pipelines.RandomVocab data/cifar_train.bin data/cifar_test.bin 200 10 0.2  \u65b0\u3057\u304f3\u3064\u306e\u5f15\u6570\u304c\u4ed8\u3044\u305f\u306e\u306b\u304a\u6c17\u3065\u304d\u3067\u3057\u3087\u3046\u3002\n\u3053\u308c\u3089\u306f\u3001\u4f7f\u7528\u3059\u308b\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u306e\u30b5\u30a4\u30ba\uff08200\uff09\u3001\u898f\u5b9a\u5316\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff0810\uff09\u3001\u8a13\u7df4\u3059\u308b\u5165\u529b\u30c7\u30fc\u30bf\u306e\u5206\u6570\u3067\u3059\uff080.2\uff09\u3002\u3053\u3053\u3067\u6700\u5f8c\u306e\u6570\u304c20%\u306a\u306e\u306f\u6642\u9593\u306e\u554f\u984c\u3067\u3059\u3002  \u30d5\u30a3\u30fc\u30c1\u30e3\u30e9\u30a4\u30b6\u304c\u8907\u96d1\u5316\u3055\u308c\u305f\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u3001\u5165\u529b\u30a4\u30e1\u30fc\u30b8\u306b\u9069\u7528\u3055\u308c\u308b\u30d5\u30a3\u30eb\u30bf\u30fc\u304c\u96c6\u307e\u3063\u3066\u3044\u308b\u30d5\u30a3\u30eb\u30bf\u914d\u5217\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u306f\u30e9\u30f3\u30c0\u30e0\u3067\u6b63\u898f\u5206\u5e03\u304b\u3089\u767a\u751f\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u304c\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u3053\u3053\u304b\u3089200\u500b\u306e\u5404\u30d5\u30a3\u30eb\u30bf\u3092\u5165\u529b\u30a4\u30e1\u30fc\u30b8\u306b\u9069\u7528\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u56db\u90e8\u5186\u306b\u3070\u3089\u6492\u304d\u307e\u3059\u3002\n\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u5185\u306e\u7570\u306a\u3063\u305f\u30d5\u30a3\u30eb\u30bf\u3054\u3068\u306b\u9055\u3046\u50cd\u304d\u3092\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u30d0\u30a4\u30a2\u30b9\u9805\u3092\u8ffd\u52a0\u3057\u3001\u3053\u308c\u3068\u3070\u3089\u6492\u304d\u7d50\u679c\u3092\u7dda\u5f62\u9078\u5225\u6a5f\u306e\u5f15\u6570\u306b\u5165\u308c\u307e\u3059\u3002  \u6570\u5206\u5f8c\u306b\u306f\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u6b21\u3088\u3046\u306a\u7b54\u3048\u3092\u51fa\u3057\u307e\u3059\u3002  Training error is 36.235596, Test error is 42.88  \u518d\u3073\u8996\u899a\u5316\u3055\u308c\u305f\u7d50\u679c\u3092\u76ee\u3067\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30d5\u30a1\u30a4\u30eb\u306frandom_cifar\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3057\u307e\u3059\u3002  ampcamp-pipelines/ $ open random_vocab/index.html  7-7-(1). \u4e0a\u7d1a\u30a8\u30af\u30b5\u30b5\u30a4\u30ba  \u6642\u9593\u304c\u3042\u308b\u65b9\u306f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u7570\u306a\u3063\u305f\u6b63\u898f\u5316\u5024\u304b\u30d5\u30a3\u30eb\u30bf\u306e\u6570\uff08100\u304b300\uff09\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\u6b63\u78ba\u6027\u306f\u3069\u3046\u5909\u5316\u3057\u307e\u3059\u304b\uff1f", 
            "title": "7-7. \u6539\u5584\u5f8c\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3"
        }, 
        {
            "location": "/pipeline/#7-8", 
            "text": "\u4e00\u3064\u524d\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u3001\u540c\u3058\u30c7\u30fc\u30bf\u30b5\u30f3\u30d7\u30eb\u306b\u5bfe\u3057\u3066\u6700\u521d\u306e\u7c21\u5358\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3088\u308a\u3044\u3044\u7d50\u679c\u304c\u3067\u307e\u3057\u305f\u304c\u3001\u3082\u3046\u5c11\u3057\u89e3\u6790\u6210\u679c\u3092\u4e0a\u3052\u3089\u308c\u308b\u6240\u307e\u3067\u884c\u304d\u307e\u3057\u3087\u3046\u3002  \u3053\u306e\u554f\u984c\u3067\u6700\u5f8c\u306b\u884c\u3046\u3053\u3068\u306f\u6539\u5584\u3055\u308c\u305f\u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001\u30d1\u30c3\u30c1\u62bd\u51fa\u3068\u767d\u8272\u5316\u3092\u3057\u307e\u3059\u3002\n\u4f55\u306e\u3053\u3068\u304b\u306fPatchVocab.scala\u3092\u958b\u3044\u3066\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3068\u5148\u307b\u3069\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u9055\u3044\u306f\u4ee5\u4e0b\u304c\u52a0\u3048\u3089\u308c\u305f\u3053\u3068\u3060\u3068\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002  val patchExtractor = ImageExtractor\n      .andThen(new Windower(patchSteps,patchSize))\n      .andThen(new ImageVectorizer)\n      .andThen(new Sampler(whitenerSize))\n\n    val (filters, whitener) = {\n        val baseFilters = patchExtractor(trainData)\n        val baseFilterMat = Stats.normalizeRows(new MatrixType(baseFilters), 10.0)\n        val whitener = new ZCAWhitener(baseFilterMat)\n\n        //Normalize them.\n        val sampleFilters = new MatrixType(Random.shuffle(baseFilterMat.toArray2.toList).toArray.slice(0, numFilters))\n        val unnormFilters = whitener(sampleFilters)\n        val twoNorms = MatrixFunctions.pow(MatrixFunctions.pow(unnormFilters, 2.0).rowSums, 0.5)\n\n        (((unnormFilters divColumnVector (twoNorms.addi(1e-10))) mmul (whitener.whitener.transpose)).toArray2, whitener)\n    }  \u3053\u3053\u3067\u306f\u30d5\u30a3\u30eb\u30bf\u304cFloatMatrix.randn()\u95a2\u6570\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u767a\u751f\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30c7\u30fc\u30bf\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u3055\u308c\u3066\u751f\u307f\u51fa\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u30e9\u30f3\u30c0\u30e0\u306a\uff08\u30c6\u30ec\u30d3\u306e\u7802\u5d50\u306e\u3088\u3046\u306a\uff09\u30ce\u30a4\u30ba\u306b\u30a4\u30e1\u30fc\u30b8\u3092\u5408\u308f\u305b\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u3059\u3067\u306b\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306b\u4f3c\u3066\u3044\u308b\u304b\u3067\u5408\u308f\u305b\u308b\u5f37\u529b\u306a\u767a\u60f3\u3067\u3059\u3002", 
            "title": "7-8. \u4e0a\u7d1a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3"
        }, 
        {
            "location": "/pipeline/#7-9", 
            "text": "\u6642\u9593\u5185\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u30d5\u30a3\u30fc\u30c1\u30e3\u30e9\u30a4\u30ba\u3057\u3066\u3042\u306a\u305f\u306e\u30de\u30b7\u30fc\u30f3\u306e\u4e0a\u3067\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u8a08\u7b97\u80fd\u529b\u306e\u95a2\u4fc2\u3067\u3001\u8a13\u7df4\u6e08\u307f\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u8ffd\u52a0\u6a5f\u80fd\u3068\u4e00\u7dd2\u306b\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30b3\u30fc\u30c9\u306b\u3042\u308b\u540c\u3058\u30b8\u30e3\u30d0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u5316\u3055\u308c\u305f\u72b6\u614b\u3067\u201d*.pipe\u201d\u30d5\u30a1\u30a4\u30eb\u306b\u7e8f\u3081\u3066\u3042\u308a\u307e\u3059\u3002  \u8a13\u7df4\u3055\u308c\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30fc\u30d6\u3001\u30ed\u30fc\u30c9\u3001\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u5358\u7d14\u3067\u3059\u3002  import utils.PipelinePersistence._\n\n//\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30fc\u30d6\u3059\u308b\nsavePipeline(predictionPipeline,  saved_pipelines/your_pipeline.pipe )\n\n/\u30c7\u30a3\u30b9\u30af\u304b\u3089\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3059\u308b\nval predictionPipeline = loadPipeline[RDD[Image],RDD[Array[DataType]]]( saved_pipelines/your_pipeline.pipe )\n\n//\u4e88\u6e2c\u306b\u4f7f\u3046\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3059\u308b\nval data: RDD[Image]\nval predictions = predictionPipeline(data)  \u3059\u3050\u306b\u898b\u308c\u307e\u3059\u304c\u3001\u8a13\u7df4\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3001\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8a55\u4fa1\u3001\u6b63\u78ba\u6027\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u7c21\u6f54\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3082\u63d0\u4f9b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u914d\u7f6e\u8a2d\u5b9a\u304c\u7c21\u5358\u3060\u3068\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\n\u3082\u3057\u8a13\u7df4\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6e80\u8db3\u3067\u3057\u305f\u3089\u3001Velox\u306a\u3069\u306e\u30e2\u30c7\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306b\u914d\u9001\u3059\u308b\u3060\u3051\u3067\u7d42\u4e86\u3067\u3059\u3002\n\u8a2d\u8a08\u3069\u3046\u308a\u3067\u3059\u3002", 
            "title": "7-9. \u8a13\u7df4\u6e08\u307f\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3059\u308b"
        }, 
        {
            "location": "/pipeline/#7-10", 
            "text": "\u4eca\u307e\u3067\u306f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u8a55\u4fa1\u3092\u3059\u308b\u969b\u306b\u9078\u5225\u5668\u30a8\u30e9\u30fc\u3060\u3051\u306b\u96c6\u4e2d\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u9078\u5225\u5668\u306e\u8a55\u4fa1\u65b9\u6cd5\u306f\u3053\u308c\u3088\u308a\u3082\u3063\u3068\u51dd\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b9\u30d1\u30e0\u63a2\u77e5\u306e\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30e6\u30fc\u30b6\u3068\u3057\u3066\u306f\u53d7\u4fe1\u7bb1\u306b\u30b9\u30d1\u30e0\u306e\u6570\u304c\u5c11\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001\u91cd\u8981\u306a\u30e1\u30fc\u30eb\u306f\u898b\u9003\u3057\u305f\u304f\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u4e0d\u6b63\u78ba\u306a\u9078\u5225\u306e\u5834\u5408\u3001\u9593\u9055\u3063\u305f\u5931\u6557\uff08\u91cd\u8981\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u53d6\u308a\u9664\u304b\u308c\u308b\u3053\u3068\uff09\u306e\u307b\u3046\u304c\u6027\u80fd\u4e0d\u826f\uff08\u30b9\u30d1\u30e0\u304c\u53d7\u4fe1\u7bb1\u306b\u306b\u6b8b\u308b\u3053\u3068\uff09\u3088\u308a\u654f\u611f\u306b\u306a\u308a\u307e\u3059\u3002\n\u3067\u3059\u304b\u3089\u3001\u30b9\u30d1\u30e0\u63a2\u77e5\u306e\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u5834\u5408\u3053\u306e\u69d8\u306a\u5206\u5272\u308a\u8868\u3067\u8868\u305b\u307e\u3059\u3002   \u3053\u306e\u5206\u5272\u308a\u8868\u306f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u8a2d\u5b9a\u306e\u5834\u5408\u3082\u6cd5\u5247\u5316\u3067\u304d\u307e\u3057\u3066\u3001\u305d\u306e\u4f8b\u306f\u5f8c\u307b\u3069\u898b\u308c\u307e\u3059\u3002", 
            "title": "7-10. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u8a55\u4fa1\u306e\u6982\u8981"
        }, 
        {
            "location": "/pipeline/#7-11", 
            "text": "\u5148\u307b\u3069\u69cb\u7bc9\u3057\u305f\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u9069\u7528\u3057\u305f\u969b\u306e\u8a55\u4fa1\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u884c\u3044\u307e\u3059\u3002  ampcamp-pipelines/ $ bin/run-pipeline.sh pipelines.EvaluateCifarPipeline saved_piplines/patchvocab.pipe data/cifar_test.bin 0.2      plane  car  bird  cat  deer  dog  frog  horse  ship  truck      plane  741  26  79  24  29  18  3  22  73  33    car  26  791  20  16  8  13  6  10  44  64    bird  37  12  511  62  56  64  50  42  13  10    cat  12  16  66  456  50  143  42  29  12  7    deer  19  8  81  45  582  42  47  43  8  5    dog  5  5  71  187  29  608  19  59  5  10    frog  18  17  94  103  99  39  807  17  6  15    horse  22  8  46  47  97  42  11  749  4  11    ship  80  38  17  26  20  14  10  7  801  22    truck  40  79  15  34  30  17  5  22  34  823     Classification error on data/cifar_test.bin is: 31.31  \u3053\u306e\u69d8\u306a\u7b54\u3048\u304c\u51fa\u529b\u306e\u4e00\u90e8\u3068\u3057\u3066\u51fa\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30c6\u30fc\u30d6\u30eb\u306e\u5217\u304c\u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\u3055\u308c\u305f\u5185\u5bb9\u3067\u3001\u884c\u304c\u6b63\u78ba\u306a\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3042\u308b\uff08r, c\uff09\u6b04\u306f\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3067r\u56de\u4e88\u60f3\u3055\u308c\u305f\u4e2d\u3067\u672c\u5f53\u306e\u30af\u30e9\u30b9\u306fc\u3060\u3063\u305f\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u53f3\u4e0b\u659c\u3081\u306e\u6b04\u304c\u6b63\u78ba\u306b\u4e88\u60f3\u3055\u308c\u305f\u6570\u3067\u3001\u305d\u308c\u4ee5\u5916\u306f\u6df7\u4e71\u3057\u305f\u6570\u3067\u3059\u3002  \u4e00\u756a\u591a\u3044\u6b63\u89e3\u30af\u30e9\u30b9\u306f\u4f55\u3067\u3059\u304b\uff1f\u3053\u308c\u306f\u5408\u7406\u7684\u3067\u3059\u304b\uff1f  \u6700\u5f8c\u306b\u3001patch_cifar\u306e\u8996\u899a\u7684\u51fa\u529b\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30e2\u30c7\u30eb\u306f\u4eca\u307e\u3067\u306b\u6bd4\u3079\u3066\u3088\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u304b\uff1f  ampcamp-pipelines/ $ open patch_vocab/index.html", 
            "title": "7-11. \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u8a55\u4fa1"
        }, 
        {
            "location": "/pipeline/#7-12", 
            "text": "\u4e0a\u7d1a\u30a8\u30ad\u30bb\u30b5\u30a4\u30ba\uff12  \u3082\u3046\u4e00\u3064\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u201dsaved_pipelines\u201d\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u8a55\u4fa1\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u3082\u3063\u3068\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u30a8\u30e9\u30fc\u7387\u304c\u3055\u3089\u306b\u826f\u304f\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306fPatchVocab2.scala\u3067\u3059\u3002  ampcamp-pipelines/ $bin/run-pipeline.sh pipelines.EvaluateCifarPipeline saved_pipelines/patchvocab2.pipe data/cifar_test.bin 0.2  \u3053\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u6bd4\u8f03\u7684\u306b\u591a\u30442000\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30c1\u3092\u4f7f\u3063\u3066\u8a13\u7df4\u3055\u308c\u300124%\u30c6\u30b9\u30c8\u30a8\u30e9\u30fc\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\u8a13\u7df4\u3059\u308b\u305f\u3081\u306b\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u3001\u30d6\u30ed\u30c3\u30af\u6a19\u964d\u4e0b\u3068\u3044\u3046\u7d50\u679c\u3092\u5411\u4e0a\u3055\u305b\u308b\u6280\u8853\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002  \u3082\u305710,000\u30d1\u30c3\u30c1\u307e\u3067\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u3001\u6b63\u3057\u3044\u6b63\u898f\u5316\u5024\u3092\u9078\u3076\u306815%\u30a8\u30e9\u30fc\u307e\u3067\u4e0a\u304c\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u6280\u8853\u306f\u6c34\u5e73\u306b\u30b9\u30b1\u30fc\u30eb\u304c\u53ef\u80fd\u3067\u6700\u5148\u7aef\u306e\u5b66\u554f\u7d50\u679c\u3068\u4e26\u3076\u6210\u7e3e\u3067\u3059\u3002  \u4e0a\u7d1a\u30a8\u30ad\u30bb\u30b5\u30a4\u30ba\uff13  \u6700\u5f8c\u306b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u3044\u3058\u3063\u3066\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u304bScala\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308bIDE\u3067\u66f8\u304d\u76f4\u305b\u3066sbt assembly\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u767d\u8272\u5316\u3084\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30c8\u3092\u52a0\u3048\u306a\u3044\u3067\u8a13\u7df4\u3057\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u3069\u3046\u5909\u5316\u3059\u308b\u306e\u304b\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002  \u307e\u3068\u3081  \u3053\u306e\u7df4\u7fd2\u3067\u30a4\u30e1\u30fc\u30b8\u89e3\u6790\u3092Spark\u3067\u3059\u308b\u306e\u306b3\u3064\u306e\u30b5\u30f3\u30d7\u30eb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u69cb\u7bc9\u3057\u8a55\u4fa1\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u7c21\u5358\u3067\u4e00\u822c\u7684\u306b\u4f7f\u3048\u308b\u307b\u3069\u6a5f\u68b0\u5b66\u7fd2\u306e\u6d41\u308c\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u307e\u3060\u59cb\u307e\u3063\u305f\u3070\u304b\u308a\u306a\u306e\u3067\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u8cb0\u3048\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002   \n[9] \u30d3\u30b8\u30e5\u30a2\u30eb\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea: \u753b\u50cf\u306e\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3057\u305f\u3082\u306e\u306e\u96c6\u307e\u308a\u3002", 
            "title": "7-12. \u756a\u5916\u7de8"
        }
    ]
}